<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://waynexucn.github.io//feed.xml" rel="self" type="application/atom+xml"/><link href="https://waynexucn.github.io//" rel="alternate" type="text/html" hreflang="en"/><updated>2025-03-05T07:44:16+00:00</updated><id>https://waynexucn.github.io//feed.xml</id><title type="html">Wenjie Xu</title><subtitle>Wenjie Xu&apos;s home page. feedId:113833929030099968+userId:72841831310508032 </subtitle><entry><title type="html">Mac OS 实用配置记录</title><link href="https://waynexucn.github.io//blog/2025/Mac%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/" rel="alternate" type="text/html" title="Mac OS 实用配置记录"/><published>2025-02-16T17:05:53+00:00</published><updated>2025-02-16T17:05:53+00:00</updated><id>https://waynexucn.github.io//blog/2025/Mac%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95</id><content type="html" xml:base="https://waynexucn.github.io//blog/2025/Mac%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"><![CDATA[<blockquote> <p>Mac OS 绝大多数配置方法与 Linux 类似，这里仅记录 Mac 独有的配置和问题以及一些常用工具</p> </blockquote> <h3 id="系统设置">系统设置</h3> <ol> <li> <p>开启安装任何来源的程序选项：<code class="language-plaintext highlighter-rouge">sudo spctl --master-disable</code></p> </li> <li> <p>将软件安装至外置硬盘</p> </li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 在外置硬盘创建应用程序目录</span>
<span class="nb">mkdir</span> /Volumes/Work/Application
<span class="c"># 在移动硬盘上创建库目录和 Application Support 目录</span>
<span class="nb">mkdir</span> <span class="nt">-p</span> /Volumes/Work/Library/Application<span class="se">\ </span>Support
<span class="c"># 将安装在 “/Applications” 目录下的软件文件夹移到(手动或命令)外置硬盘的应用程序目录</span>
<span class="nb">mv</span> /Applications/A.app /Volumes/Work/Application
<span class="c"># 进入系统自带的软件目录</span>
<span class="nb">cd</span> /Applications
<span class="c"># 将软件文件链接回内部硬盘</span>
<span class="nb">ln</span> <span class="nt">-s</span> /Volumes/Work/Application/A.app ./A.app
<span class="c"># 若软件在 ~/Library/Application Support 目录下有其他必要文件，将其移到移动硬盘的相应目录</span>
<span class="nb">mv</span> ~/Library/Application<span class="se">\ </span>Support/A /Volumes/Work/Library/Application<span class="se">\ </span>Support
<span class="c"># 并建立软链接</span>
<span class="nb">ln</span> <span class="nt">-s</span> /Volumes/Work/Library/Application<span class="se">\ </span>Support/A ~/Library/Application<span class="se">\ </span>Support
</code></pre></div></div> <ol> <li>移除登录项与扩展中的无用选项</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 在 Finder 中打开对应文件夹，对照登陆项的名称删除对应文件</span>
~/Library/LaunchAgents
/Library/LaunchAgents
/Library/LaunchDaemons
</code></pre></div></div> <h3 id="开发配置">开发配置</h3> <h4 id="python-conda-forge">Python (conda-forge)</h4> <h5 id="numpy">numpy</h5> <blockquote> <table> <tbody> <tr> <td>[Why Python native on M1 Max is gre…</td> <td>Apple Developer Forums](https://developer.apple.com/forums/thread/695963)</td> </tr> </tbody> </table> </blockquote> <ul> <li>NumPy 通过 Apple 的 Accelerate 框架（BLAS）进行了优化，下方命令在安装 <code class="language-plaintext highlighter-rouge">numpy</code> 时，会自动处理 <code class="language-plaintext highlighter-rouge">numpy</code> 对 BLAS 库的依赖关系</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda <span class="nb">install </span>numpy <span class="s2">"blas=*=*accelerate*"</span>
</code></pre></div></div> <ul> <li>也可以切换环境的 BLAS 实现，该命令只关注 BLAS 库本身，不会自动安装依赖于 BLAS 的其他包。如果其他包需要 BLAS 库，需要手动安装这些依赖包。</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda <span class="nb">install</span> <span class="s2">"libblas=*=*accelerate"</span> <span class="c"># 新命令</span>
conda <span class="nb">install</span> <span class="s2">"blas=*=accelerate"</span> <span class="c"># 旧命令</span>
</code></pre></div></div> <ul> <li>如果想承诺使用特定的 BLAS 实现，可以通过在环境中固定 BLAS 实现来防止 conda 回退。要承诺使用 accelerate，按 conda-docs 中所述，将 <code class="language-plaintext highlighter-rouge">libblas=*=*accelerate</code> 添加到 <code class="language-plaintext highlighter-rouge">&lt;conda-root&gt;/envs/&lt;env-name&gt;/conda-meta/pinned</code>。</li> </ul> <h3 id="常用工具">常用工具</h3> <table> <thead> <tr> <th>功能</th> <th>名称</th> <th>备注</th> <th>下载</th> </tr> </thead> <tbody> <tr> <td>解压缩</td> <td>Keka</td> <td>官网免费</td> <td><a href="https://www.keka.io/zh-cn/">https://www.keka.io/zh-cn/</a></td> </tr> <tr> <td>卸载</td> <td>AppCleaner</td> <td>免费</td> <td><a href="https://freemacsoft.net/appcleaner/">https://freemacsoft.net/appcleaner/</a></td> </tr> <tr> <td>PDF 阅读</td> <td>PDF expert</td> <td>收费</td> <td><a href="https://pdfexpert.com/">https://pdfexpert.com/</a></td> </tr> <tr> <td>截图</td> <td>PixPin</td> <td>基本功能免费</td> <td><a href="https://pixpin.cn/docs/official-log/1.9.11">https://pixpin.cn/docs/official-log/1.9.11</a></td> </tr> <tr> <td>右键管理</td> <td>iRightMouse</td> <td>免费版 / 专业版</td> <td>App Store</td> </tr> <tr> <td>软件包管理</td> <td>HomeBrew</td> <td>开源</td> <td><a href="https://brew.sh/zh-cn/">https://brew.sh/zh-cn/</a></td> </tr> <tr> <td>菜单管理</td> <td>Ice</td> <td>开源</td> <td><code class="language-plaintext highlighter-rouge">brew install jordanbaird-ice</code></td> </tr> <tr> <td>NTFS 读写</td> <td>Tuxera NTFS</td> <td>收费</td> <td><a href="https://ntfsformac.tuxera.com/">https://ntfsformac.tuxera.com/</a></td> </tr> <tr> <td>终端</td> <td>iTerm2</td> <td>开源</td> <td><a href="https://iterm2.com/index.html">https://iterm2.com/index.html</a></td> </tr> <tr> <td>ssh</td> <td>Termius</td> <td>内购</td> <td><a href="https://termius.com/">https://termius.com/</a></td> </tr> <tr> <td>剪切板</td> <td>maccy</td> <td>开源</td> <td><a href="https://maccy.app/">https://maccy.app/</a></td> </tr> <tr> <td>窗口管理</td> <td>Loop</td> <td>开源</td> <td><code class="language-plaintext highlighter-rouge">brew install --cask loop</code></td> </tr> <tr> <td>网络唤醒</td> <td>wakeonlan</td> <td>开源</td> <td><code class="language-plaintext highlighter-rouge">brew install wakeonlan</code></td> </tr> </tbody> </table>]]></content><author><name></name></author><category term="Tools"/><category term="Mac"/><category term="Configuration"/><summary type="html"><![CDATA[Mac OS 系统软件配置和常见错误解决方案的记录]]></summary></entry><entry><title type="html">年前重访旧居</title><link href="https://waynexucn.github.io//blog/2025/%E9%9A%8F%E7%AC%94%E5%B9%B4%E5%89%8D%E9%87%8D%E8%AE%BF%E6%97%A7%E5%B1%85/" rel="alternate" type="text/html" title="年前重访旧居"/><published>2025-01-27T23:40:15+00:00</published><updated>2025-01-27T23:40:15+00:00</updated><id>https://waynexucn.github.io//blog/2025/%E9%9A%8F%E7%AC%94%E5%B9%B4%E5%89%8D%E9%87%8D%E8%AE%BF%E6%97%A7%E5%B1%85</id><content type="html" xml:base="https://waynexucn.github.io//blog/2025/%E9%9A%8F%E7%AC%94%E5%B9%B4%E5%89%8D%E9%87%8D%E8%AE%BF%E6%97%A7%E5%B1%85/"><![CDATA[<p>时隔三四年重回旧居，站在斑驳的路口，老房子的防盗门上依旧挂着褪色的春联。泛黄剥落的墙皮混着霉味儿，恍惚间像是推开了时空胶囊。隔壁阿婆的小狗旺旺乱叫，炒菜的油烟顺着窗缝钻出来，一切仿佛从未改变。只是站在这里的人，早已不是十八岁那个以为未来会像教科书般工整的少年。</p> <p>指尖抚过剥落的墙皮，突然想起三年前搬去新家时，竟没给这间装满成长痕迹的屋子拍张照片。当时只想着奔向新生活，却不知有些告别需要仪式感。没想过，这个承载了二十年记忆的狭小空间，有一天连墙角的霉斑都会成为奢侈的念想。忽然明白，为什么长辈总爱絮叨往事。原来，当十年光阴被压缩成可触摸的实景时，任谁都会变成絮絮叨叨怀旧的人。我举起手机，对准生锈的大门，取景框里，2025 年的阳光与 2003 年的尘埃共舞，金属锁面上经年的刮痕突然鲜活起来，指腹轻触那些深浅不一的沟壑，才惊觉，这些伤痕比任何日记本都更忠实地记录着时间。</p> <p>取景框微微颤动，我看见自己的影子，正与十年前那个转着钥匙圈的少年重叠。隔壁阿婆的油锅还在滋滋作响，旺旺的吠叫惊起楼道里沉睡的声控灯。忽明忽暗的光影间，防盗门上的倒福字簌簌剥落，碎屑随风飘散，这些蒙着油烟味的碎片突然有了重量。原来，能证明我们真实活过的，从来不是宏大的叙事，而是门把手上经年的包浆，是墙角铅笔画下的刻度线，是门缝间积年的尘埃和锈迹——是这些细碎的生活切片，在记忆的显影液里，慢慢浮现出岁月的轮廓。</p>]]></content><author><name></name></author><category term="Life"/><category term="Thoughts"/><category term="Discussion"/><summary type="html"><![CDATA[闲言碎语]]></summary></entry><entry><title type="html">2025 年的第一天，说点什么吧</title><link href="https://waynexucn.github.io//blog/2025/%E9%9A%8F%E7%AC%9425%E5%B2%81%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/" rel="alternate" type="text/html" title="2025 年的第一天，说点什么吧"/><published>2025-01-01T18:00:00+00:00</published><updated>2025-01-01T18:00:00+00:00</updated><id>https://waynexucn.github.io//blog/2025/%E9%9A%8F%E7%AC%9425%E5%B2%81%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9</id><content type="html" xml:base="https://waynexucn.github.io//blog/2025/%E9%9A%8F%E7%AC%9425%E5%B2%81%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/"><![CDATA[<p>今天是 2025 年 1 月 1 日，新的一年开始了，又长一岁。没有特别的庆祝活动，只是泡了一杯咖啡，坐在书桌前，想着随便写点什么。我是一个缺乏仪式感的人，对一切节日都无感。对我来说，所有的日子都是一样的，好也一样，不好也一样，所有的意义都是人为赋予的。2025 年没什么不同，和过去的每一年一样，有学术的压力，有探索的乐趣，有焦虑，有平静。一年年这样过去了，日子像缓缓流动的水，偶尔泛起些涟漪，但终究归于平稳。</p> <p>今年我即将 25 岁。25 岁，对我来说是个有点微妙的数字。15 岁时，20 岁似乎代表着「大人」，代表着成熟和独立，代表着一切问题的答案。20 岁的时候，25 岁代表着我理想中的模样——一个已经找到方向、稳步前行的人。对时间的感觉，25 岁和 15 岁、20 岁是不一样的。15 岁时，我对时间毫无概念，总觉得未来还远，日子还长，从来不从时间的角度思考问题。20 岁的时候，我开始有了些模糊的目标，但依然觉得时间是用不完的，喜欢做什么就做什么，想怎么做就怎么做。</p> <p>就这么糊里糊涂地一路走来，咣当一下，25 岁了。现在，我也来到了自己曾经憧憬的年纪，却发现很多事情并没有想象中那么简单。它甚至和我 20 岁的时候差不多，没什么明确的答案，甚至有更多的困惑和不确定性。有时候让人焦虑，有时候却也让人觉得自由。</p> <p>说实话，我很少从「时间」的角度去看待自己的人生。过去的几年，我更多的是顺势而为。每一天的时间被切割成了课程、实验、写作和娱乐，很少停下来想自己是谁，想要去哪里。不过也正因为如此，时间这件事在我的生活里似乎变得模糊了，它不再是一个倒计时，不再是一个需要追逐的目标，而是一种很自然的流动，像是空气，虽然无法感知但又无处不在。</p> <p>站在新年的开头，我想，或许可以试着从另一个角度看待时间。它不是一条直线，而是一个慢慢扩展的圆。随着时间过去，我们的经历、知识、视野，像是在这个圆上不断延展的边界。小时候觉得世界很简单，因为那个时候的圆还很小，边界很近。而现在，见过了更多的风景，接触了更多的人，才知道世界的复杂和广阔。每一个人的边界都不一样，每一个圆也都有独特的形状，这让我更理解多样性，也更愿意去尊重和接纳。</p> <p>这一年我不想做太多宏大的计划。过去的经验告诉我，计划这件事很容易被生活的偶然打断，反倒让人失去对当下的专注。所以，2025 年对我来说，更多的是去保持一种意识：看见。看见自己，看见别人，看见这个世界的多种可能性。或许这一年我还是会有迷茫，但只要能在这一年的时间里有新的看见，能更加清楚地知道自己是谁，想要的是什么，那就很好了。</p> <p>所以新年还是有意义的，我通过时间看见自己的成长，看见世界的复杂与多样，越来越清楚自己是谁、想要什么、想去哪里。意义是我们赋予它的，而不是它本身就有的。</p> <p>这样就挺好的。</p>]]></content><author><name></name></author><category term="Life"/><category term="Thoughts"/><category term="Discussion"/><summary type="html"><![CDATA[闲言碎语]]></summary></entry><entry><title type="html">2024 年科研工作的心得体会</title><link href="https://waynexucn.github.io//blog/2024/2024%E5%B9%B4%E7%A7%91%E7%A0%94%E5%B7%A5%E4%BD%9C%E7%9A%84%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A/" rel="alternate" type="text/html" title="2024 年科研工作的心得体会"/><published>2024-12-15T22:30:35+00:00</published><updated>2024-12-15T22:30:35+00:00</updated><id>https://waynexucn.github.io//blog/2024/2024%E5%B9%B4%E7%A7%91%E7%A0%94%E5%B7%A5%E4%BD%9C%E7%9A%84%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A</id><content type="html" xml:base="https://waynexucn.github.io//blog/2024/2024%E5%B9%B4%E7%A7%91%E7%A0%94%E5%B7%A5%E4%BD%9C%E7%9A%84%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A/"><![CDATA[<p>我的科研旅程始于 2020 年，那时我刚刚迈入科研的大门。到了 2024 年，我已经是研一，并在这一年里申请硕转博。回顾这四年的历程，虽然不能说是一路顺风，但也没有让我感到痛苦。事实上，科研工作对我而言并非折磨，相反，我非常习惯且享受科研工作的「弹性」节奏。</p> <p>2023 到 2024 年，是一个全新的起点（读研），同时也是一个矛盾交织的阶段——这是我最勤奋的一年，也是我最懒惰的一年。说勤奋，是因为我在学习新技能、新方法、新理念上投入了大量时间；说懒惰，是因为我几乎完全放弃了运动，甚至对写论文也提不起太多热情。2024 年也不完全是白混一年，主要进展可以归纳为以下几个方面：</p> <ul> <li>发表四篇中文论文（三篇来自项目约稿，每篇也就几千字的小报告，一篇为以前的工作在 CSSCI 索引期刊发表），一篇英文论文（EI 索引，会议投稿）；</li> <li>申请两项软件著作权（应导师国自科的解题需要，丰富下成果，很快的手搓了两个）；</li> <li>获得两个学术奖励（两个会议的「最佳论文」，有个还是战略院认定的重要会议，虽然很水）；</li> <li>参与了六七个课题（基本都是作为研究骨干，写了一大堆东西，但都没啥难度，占用时间也不是特别多，但写完课题的东西我就懒得在写论文了）；</li> <li>应老师要求帮助同门修订了一篇中文论文（帮别人改论文比自己写还痛苦，CSSCI 索引期刊，但把我名字挂到二作了）；</li> <li>一篇拖延半年、拼凑而成的英文论文投稿，因多次被拒而年底返工再投（两项工作整合而成，其中一个工作我都不知道他干啥的，所以一直不想写）；</li> <li>还有一项正在进行的工作，但步子迈得太大，推进缓慢（主要是懒）。</li> </ul> <p>这一年我的游戏生活非常丰富，占据了大约一半时间——玩游戏（铲铲铲）、折腾各种小玩意儿（i love coding），重心并不在科研工作上，浪费了很多时间。但即使如此，经过几年的科研训练、实践和反思，我对科研工作的认识与理解逐渐加深，也积累了一些经验与心得。</p> <h4 id="科研的起点拥抱尝试与不完美">科研的起点：拥抱尝试与不完美</h4> <p>科研的初步阶段充满了不确定性与挑战，它的魅力不在于完美无缺的开局，在于探索从无到有的过程。面对「完美主义倾向」的束缚，我逐渐意识到，科学探索的最大敌人是停滞不前，而非不完美的尝试。初稿的粗略构思、实验中的反复试错，甚至是一些看似无序的灵感记录，都可能成为未来创新的重要基础。每一个不完美的开始都是一种积累，每一次尝试都是打破「空白」的关键。这种思维方式的重塑，让我学会接受「不完美」的起点，并通过不断打磨与实践实现突破。</p> <h4 id="科研的实践路径体系化与流程化">科研的实践路径：体系化与流程化</h4> <p>科研的复杂性与冗长性，往往让人深陷琐碎和混乱之中。有效的科研实践不仅依赖个人智慧与创造，更需要体系化的工具整合与流程化的思维方式，以此应对科研过程中海量信息与多线程任务的挑战。研究生入学后，我逐步实现了科研工作的技术优化和流程再造，构建了一套适应多种场景的工具协同体系，以应对不同任务的挑战。</p> <h5 id="工具与技术体系的搭建">工具与技术体系的搭建</h5> <ul> <li> <p><strong><u>面向高性能计算与科学编程</u></strong>，在 Python/Matlab/R/C 语言的基础上，拓展学习了 Julia 语言，利用其在数值计算与性能优化方面的天然优势，尝试解决大规模数据计算中的效率瓶颈，为后续实验提供更高效的支撑。</p> </li> <li> <p><strong><u>面向前端开发与绘图展示</u></strong>，掌握了 JavaScript/TypeScript，并基于 Jekyll 框架搭建了个人学术主页，系统化地展示了研究成果与学术内容。</p> </li> <li> <p><strong><u>面向文档处理与排版美化</u></strong>，掌握了 LaTeX 与 Typst，通过高度自动化与模板化的排版流程，进一步提升了学术写作的规范性与美观性。</p> </li> <li> <p><strong><u>面向开发环境与工具流的整合</u></strong>，基于 WSL/Docker 搭建了跨平台的开发环境，实现了 Windows 与 Linux 系统间的无缝切换，提升了开发流程的一致性与连贯性。</p> </li> <li> <p><strong><u>面向知识管理与大模型应用</u></strong>，建立了结构化的个人知识管理系统，对实验笔记、文献资料与学习内容进行系统归纳，实现了信息的高效检索与知识网络构建。结合大模型，在文献总结、代码调试与写作优化等方面获得了显著的效率提升。</p> </li> </ul> <h5 id="流程化思维的形成">流程化思维的形成</h5> <p>科研不仅是一种灵感驱动的活动，更需要系统规划与阶段性目标的引导。我逐渐意识到，自顶向下的科研规划能够避免漫无目的的盲目尝试，让每个阶段都有条不紊地推进。在此过程中，从数据收集到实验设计、从文献阅读到成果输出，我都力求形成统一的工作流，实现了高效、精准的任务管理。</p> <h4 id="科研中的个人成长积累与协同">科研中的个人成长：积累与协同</h4> <p><strong><u>灵感的捕捉与积累</u></strong>。灵感常在不经意间闪现，若不及时记录、深化，便可能错失许多重要机会。每当新的想法产生时，我都会及时记录并围绕其进行思考，即便简单粗略也不放弃深化。这些微小的积累，如同拼图般，在未来某一时刻可能形成完整的科研蓝图。科研需要长期的建设与积累，点滴努力终将汇聚成突破的契机</p> <p><strong><u>团队协作的价值</u></strong>。团队是科研的重要支撑。一个好的科研团队不仅能提供强有力的学术支持，更能激发个人潜力。在研究生阶段，我深刻体会到，<u>科研的高度离不开协同的广度</u>。团队成员的互相支撑与合作，让我逐渐从单兵作战转向协同协作。我在与团队伙伴的合作中学会了倾听与分享，理解了如何基于各自的专长分工合作，充分发挥集体智慧的优势。科研需要不断与同行、导师以及跨学科研究者进行高质量的交流。在这个过程中，接受批评与反馈是个人成长的催化剂。开放的态度让我学会接纳他人的意见，找到自身研究的不足，并通过互相启发，不断完善和拓展研究的深度与广度。</p> <h4 id="科研的关键面向科学问题的探索与解决">科研的关键：面向科学问题的探索与解决</h4> <p><strong><u>科学的进步始于对问题的敏锐洞察</u></strong>。科学研究总是围绕着提出问题和解决问题进行。但科研的核心并非简单地「做题」，而是敢于质疑现有认知，揭示未解的关键问题。现代科学发展已进入深度细分的时代，表面看似成熟的领域往往隐藏着新的挑战与机会。我逐渐认识到，提出一个真正有价值的问题，往往比解决一个简单的问题更具意义。科学的突破源自对问题的独特视角与深刻理解，而非仅仅追求标准答案。这不仅关乎科学发现的深度，更决定了研究的原创性和前瞻性。在实践中，我时常反思：当前领域的痛点在哪里？现有的理论与方法是否存在局限？未来的方向该如何突破？带着这些问题，通过系统回顾文献、深入梳理学科发展脉络，逐步厘清了本领域未被充分研究的空白地带，为进一步探索提供了切入点。</p> <p><strong><u>解决科学问题在于方法与路径的创新</u></strong>。在科研实践中，我逐渐认识到，创新不仅存在于理论方法的建构，还体现在解决问题的思维和路径上。不同学科的方法论与工具体系之间并非孤立存在，而是可以彼此借鉴、融会贯通。不同学科发展中积累的工具与方法，常常能够为其他领域提供新的解决思路。许多前沿科学问题都位于学科交汇处，而交叉学科的研究往往孕育着新的突破。这种跨学科的实践不仅能够促进科学问题的深入理解，还能催生更多具有前瞻性的研究方向。唯有秉持开放与跨学科的视野，才能从现象中捕捉问题，在复杂的问题中寻找到突破的可能性。</p>]]></content><author><name></name></author><category term="Life"/><category term="Thoughts"/><category term="Blogging"/><summary type="html"><![CDATA[部分内容来自 2024 年转博申请材料中的心得体会]]></summary></entry><entry><title type="html">中文的常态与变态</title><link href="https://waynexucn.github.io//blog/2024/%E4%B8%AD%E6%96%87%E7%9A%84%E5%B8%B8%E6%80%81%E4%B8%8E%E5%8F%98%E6%80%81/" rel="alternate" type="text/html" title="中文的常态与变态"/><published>2024-12-02T15:13:29+00:00</published><updated>2024-12-02T15:13:29+00:00</updated><id>https://waynexucn.github.io//blog/2024/%E4%B8%AD%E6%96%87%E7%9A%84%E5%B8%B8%E6%80%81%E4%B8%8E%E5%8F%98%E6%80%81</id><content type="html" xml:base="https://waynexucn.github.io//blog/2024/%E4%B8%AD%E6%96%87%E7%9A%84%E5%B8%B8%E6%80%81%E4%B8%8E%E5%8F%98%E6%80%81/"><![CDATA[<blockquote> <p>剪辑自余光中先生 1987 年的一篇文章「中文的常态与变态」(<a href="https://mp.weixin.qq.com/s/8gvq--Hsb4dpIAHCleH-oQ">https://mp.weixin.qq.com/s/8gvq--Hsb4dpIAHCleH-oQ</a>)，仅转载，部分观点待商榷，我不完全认同。</p> </blockquote> <h2 id="一">一</h2> <p>自五四新文化运动以来，七十年间，中文的变化极大。一方面，优秀的作家与学者笔下的白话文愈写愈成熟，无论表情达意或是分析事理，都能运用自如。另一方面，道地的中文，包括文言文与民间文学的白话文，和我们的关系日渐生疏，而英文的影响，无论来自直接的学习或是间接的潜移默化，则日渐显著，因此一般人笔下的白话文，西化的病态日渐严重。一般人从大众传媒学到的，不仅是流行的观念，还有那些观念赖以包装的种种说法；有时，那些说法连高明之士也抗拒不了。今日的中文虽因地区不同而互见差异，但共同的趋势都是繁琐与生硬，例如中文本来是说「因此」，现在不少人却爱说「基于这个原因」；本来是说「问题很多」，现在不少人却爱说「有很多问题存在」。对于这种化简为繁、以拙代巧的趋势，有心人如果不及时提出警告，我们的中文势必越变越差，而地道中文原有的那种美德，那种简洁而又灵活的语文生态，也必将面目全非。</p> <p>中文也有生态吗？当然有。措词简洁、句式灵活、声调铿锵，这些都是中文生命的常态。能顺着这样的生态，就能长保中文的健康。要是处处违拗这样的生态，久而久之，中文就会污染而淤塞，危机日渐迫近。</p> <p>目前中文的一大危机，是西化。我自己出身外文系，三十多岁时有志于中文创新的试验，自问并非语文的保守派。大凡有志于中文创作的人，都不会认为善用四字成语就是创作的能事。反之，写文章而处处仰赖成语，等于只会用古人的脑来想，只会用古人的嘴来说，绝非豪杰之士。但是，再反过来说，写文章而不会使用成语，问题就更大了。写一篇完全不带成语的文章，不见得不可能，但是很不容易；这样的文章要写得好，就更难能可贵。目前的情形是，许多人写中文，已经不会用成语，至少会用的成语有限，显得捉襟见肘。一般香港学生目前只会说「总的来说」，却似乎忘了「总而言之」。同样地，大概也不会说「一言难尽」，只会说「不是一句话就能够说得清楚的」。</p> <p>成语历千百年而犹存，成为文化的一部分。例如「千锤百炼」，字义对称，平仄协调，如果一定要说成「千炼百锤」，当然也可以，不过听来不顺，不像「千锤百炼」那样含有美学。同样，「朝秦暮楚」、「齐大非偶」、「乐不思蜀」等语之中，都含有中国的历史。成语的衰退正显示文言的淡忘，文化意识的萎缩。</p> <p>英文没有学好，中文却学坏了，或者可说，带坏了。中文西化，不一定就是毛病。缓慢而适度的西化甚至是难以避免的趋势，高妙的西化更可以截长补短。但是太快太强的西化，破坏了中文的自然生态，就成了恶性西化。这种危机，有心人都应该及时警觉而且努力抵制。在欧洲的语文里面，文法比较单纯的英文恐怕是最近于中文的了。尽管如此，英文与中文仍有许多基本的差异，无法十分融洽。这一点，凡有中英文互译经验的人，想必都能同意。其实，研究翻译就等于研究比较语言学。以下拟就中英文之间的差异，略略分析中文西化之病。</p> <h2 id="二">二</h2> <p>比起中文来，英文不但富于抽象名词，也喜欢用抽象名词。英文可以说「他的收入的减少改变了他的生活方式」，中文这么说，就太西化了。英文用抽象名词「减少」做主词，十分自然。中文的说法是以具体名词，尤其是人，做主词：「他因为收入减少而改变生活方式」，或者「他收入减少，乃改变生活方式」。</p> <p>中文常用一件事情 (一个短句) 做主词，英文则常用一个名词 (或名词词组)。「横贯公路再度坍方，是今日的头条新闻」，是中文的说法。「横贯公路的再度坍方，是今日的头条新闻」，就是英文语法的流露了。同理，「选购书籍，只好委托你了」是中文语法。「书籍的选购，只好委托你了」却是略带西化。「推行国语，要靠大家努力」是自然的说法。「推行的国语，要靠大家的努力」却嫌冗赘。这种情形也可见于受词。例如「他们杯葛这种风俗的继续」，便是一句可怕的话。无论如何，「杯葛继续」总嫌生硬。如果改成「他们反对保存这种风俗」，就自然多了。</p> <p>英文好用抽象名词，其结果是软化了动词，也可以说是架空了动词。科学、社会科学与公文的用语，大举侵入了日常生活，逼得许多明确而有力动词渐渐变质，成为面无表情的词组。下面是几个常见的例子：</p> <blockquote> <p>apply pressure: press</p> <p>give authorization: permit</p> <p>send a communication: write</p> <p>take appropriate action: act</p> </blockquote> <p>在前例之中，简洁的单音节动词都变成了含有抽象名词的片词，表面上看来，显得比较堂皇而高级。例如 press 变成了 apply pressure，动作便一分为二，一半驯化为静止的抽象名词 pressure，一半淡化为广泛而笼统的动词 apply。巴仁 (Jacques Barzun) 与屈林 (Lionel Trilling) 等学者把这类广泛的动词叫做「弱动词」(weak verb)。他们说：「科学报告不免单调而冷淡，影响之余，现代的文体喜欢把思路分解成一串静止的概念，用介词和通常是被动语气的弱动词连接起来。」</p> <p>巴仁所谓的弱动词，相当于英国小说家奥韦尔所谓的「文字的义肢」(verbal false limb) 。当代的中文也已呈现这种病态，喜欢把简单明了的动词分解成「万能动词 + 抽象名词」的片词。目前最流行的万能动词，是「作出」和「进行」，恶势力之大，几乎要吃掉一半的正规动词。请看下面的例子：</p> <blockquote> <p>(一) 本校的校友对社会作出了重大的贡献。</p> <p>(二) 昨晚的听众对访问教授作出了十分热烈的反应。</p> <p>(三) 我们对国际贸易的问题已经进行了详细的研究。</p> <p>(四) 心理学家在老鼠的身上进行试验。</p> </blockquote> <p>不管是直接或间接的影响，这样的语法都是日渐西化的现象，因为中文原有的动词都分解成上述的繁琐词组了。前面的四句话本来可以分别说成</p> <blockquote> <p>(一) 本校的校友对社会贡献很大。</p> <p>(二) 昨晚的听众对访问教授反应十分热烈。</p> <p>(三) 我们对国际贸易的问题已经详加研究。</p> <p>(四) 心理学家用老鼠来做试验。(或：心理学家用老鼠试验。)</p> </blockquote> <p>巴仁等学者感概现代英文喜欢化简为繁、化动为静、化具体为抽象、化直接为迂回，到了「名词成灾」(noun-plague) 的地步。学问分工日细，各种学科的行话术语，尤其是科学与社会科学的「夹杠」，经过本行使用，外行借用，加上「新闻体」(journalese) 的传播，一方面固然使现代英文显得多彩多姿，另一方面却也造成混乱，使日常用语斑驳不堪。英国诗人格雷夫斯 (Robert Graves, 1895-1986) 在短诗 (耕田) (Tilth) 里批评这现象说：</p> <blockquote> <p>Gone are the sad monosyllabic days</p> <p>When “agricultural labour”still was tilth.</p> <p>And “00% approbation”, praise;</p> <p>And “pornographic modernism”, filth-</p> <p>And still I stand by tilth and filth and praise.</p> </blockquote> <p>「名词成灾」的流行病里，灾情最严重的该是所谓「科学至上」(scientism)。在现代的工业社会里，科学早成显贵，科技更是骄子，所以知识分子的口头与笔下，有意无意，总爱用一些「学术化」的抽象名词，好显得客观而精确。有人称之为「伪术语」(pseudo-jargon)。例如：明明是 firstst step，却要说成 initial phase：明明是 letter，却要说成 communication，都属此类。</p> <p>中文也是如此。本来可以说「名气」，却凭空造出一个「知名度」来，不说「很有名」，却要迂回作态，貌若高雅，说成「具有很高的知名度」，真是酸腐可笑。另一个伪术语是「可读性」，同样活跃于书评和出版广告。明明可以说「这本传记很动人」，「这本传记引人入胜」，或者干脆说「这本传记很好看」，却要说成「这本传记的可读性颇高」。我不明白这字眼怎么来的，因为这观念在英文里也只用形容词 readable 而不用抽象名词 readability。英文会说：The biography is highly readable，却不说 The biography has high readability。此风在台湾日渐嚣张。在电视上，记者早已在说「昨晚的演奏颇具可听性」。在书评里，也已见过这样的句子：「传统写实作品只要写得好，岂不比一篇急躁的实验小说更具可看性？」</p> <p>我实在不懂那位书评家以不能说「岂不比一篇……更耐看 (更动人)？」同理，「更具前瞻性」难道真比「更有远见」要高雅吗？长此以往，岂不要出现「他讲的这件趣事可笑性很高」一类的怪句？此外，「某某主义」之类抽象名词也使用过度，英美有心人士都主张少用为妙。中国大陆文章很爱说「富于爱国主义的精神」，其实颇有语病。爱国只是单纯的情感，何必学术化为主义？如果爱国也成主义，我们不是也可以说「亲日主义」、「仇美主义」、「怀乡主义」？其次，主义也就是一种精神，不必重复，所以只要说「富于爱国精神」就够了。</p> <p>名词而分单数与复数，是欧语文的惯例。英文文法的复数变化，比起其它欧洲语文来，单纯得多。请看「玫瑰都很娇小」这句话在英文、法文、德文、西班牙文、意大利文里的各种说法：</p> <blockquote> <p>The roses are small.</p> <p>Les roses sont petites.</p> <p>Die Rosen sind klein.</p> <p>Las rosas son chiquitas.</p> <p>Le rose sono piccole.</p> </blockquote> <p>每句话都是四个字，次序完全一样，都是冠词、名词、动词、形容词。英文句里，只有动词跟着名词变化，其它二字则不分单、复数。德文句里，只有形容词不变。法文、西班牙文、意大利文的三句里，因为做主词的名词是复数，其它的字全跟着变化。</p> <p>幸而中文的名词没有复数的变化，也不区分性别，否则将不胜其繁琐。旧小说的对话里确有「爷们」、「娘们」、「ㄚ头们」等复数词，但是在叙述的部分，仍用「诸姐妹」、「众ㄚ鬟」。中文要表多数的时候，也会说「民众」、「徒众」、「观众」、「听众」，所以「众」也有点「们」的作用。但是「众」也好，「们」也好，在中文里并非处处需要复数语尾。往往，我们说「文武百官」，不说「官们」，也不说「文官们」、「武官们」。同理「全国的同胞」、「全校的师生」、「所有的顾客」、「一切乘客」当然是复数，不必再画蛇添足，加以标明。不少国人惑于西化的意识，常爱这么添足，于是「人们」取代原有的「人人」、「大家」、「大众」、「众人」、「世</p> <p>人」。「人们」实在是丑陃的西化词，林语堂绝不使用，希望大家也不要使用。电视上也有人说「民众们」、「听众们」、「球员们」，实在累赘。尤其「众、们」并用，已经不通。</p> <p>中文词不分数量，有时也会陷入困境。例如「一位观众」显然不通，但是「观众之一」却嫌累赘，也欠自然。「一位观者」毕竟不像「一位读者」那么现成，所以，「一位观众来信说……」之类的句子，也只好由它去了。</p> <p>可是「……之一」的泛滥，却不容忽视。「……之一」虽然是单数，但是背景的意识却是多数。和其它欧洲语文一样，英文也爱说 one of my favorite actresses, oneof those who believe……, one of the most active promoters。中文原无「……之一」的句法，现在我们说「观众之一」实在是不得已。至于这样的句子：</p> <blockquote> <p>刘伶是竹林七贤之一。</p> <p>作为竹林七贤之一的刘伶……</p> </blockquote> <p>目前已经非常流行。前一句虽然西化，但不算冗赘。后一句却恶性西化的畸婴，不但「作为」二字纯然多余，「之一的」也文白来杂，读来破碎，把主词「刘伶」压在底下，更是扭捏作态。其实，后一句的意思跟前一句完全一样，却把英文的语法 as oneof the Seven Worthies of Bamboo Grove, Liu Ling……生吞活剥地搬到中文里来。所以，与其说「作为竹林七贤之一的刘伶以嗜酒闻名」，何不平平实实地说「刘伶是竹林七贤之一，以嗜酒闻名」？其实前一句也尽有办法不说「之一」。中文本来可以说「刘伶乃竹林七贤之同侪」；「刘伶列于竹林七贤」；「刘伶跻身竹林七贤」；「刘伶是竹林七贤的同人」。</p> <p>「竹林七贤之一」也好，「文房四宝之一」也好，情况都不严重，因为七和四范围明确，同时逻辑上也不能径说「刘伶是竹林七贤」，「砚乃文房四宝」。目前的不良趋势，是下列这样的句子：</p> <blockquote> <p>红楼梦是中国文学的名著之一。</p> <p>李广乃汉朝名将之一。</p> </blockquote> <p>两句之中。「之一」都是蛇足。世间万事万物都有其同俦同类，每次提到其一，都要照顾到其它，也未免太周到了。中国文学名著当然不止一部，汉朝名将当然也不会祇有一人，不加上这死心眼的「之一」，绝对没有人会误会你孤陋寡闻，或者挂一漏万。一旦养成了这种恶习，只怕笔下的句子都要写成「小张是我的好朋太之一」，「我不过是您的平庸的学生之一」，「他的嗜好之一是收集茶壸」了。</p> <p>「之一」之病到了香港，更变本加厉，成为「其中之一」。在香港的报刊上，早已流行「我是听王家的兄弟其中之一说的」或者「戴维连一直以来都是我最喜欢的导演其中之一」这类怪句。英文复数观念为害中文之深，由此可见。</p> <p>这就说到「最……之一」的语法来了。英文最喜欢说「他是当代最伟大的思想家之一」，好像真是精确极了，其实未必。「最伟大的」是抬到至高，「之一」却稍加低抑，结果只是抬高，并未真正抬到至高。你并不知道「最伟大的思想家」究竟是几位，四位吗，还是七位，所以弹性颇大。兜了一个大圈子回来，并无多大不同。所以，只要说「他是一个大名人」或「他是赫赫有名的人物」就够了，不必迂而回之，说什么「他是最有名气的人物之一」吧。</p> <h2 id="三">三</h2> <p>在英文里，词性相同的字眼常用 and 来连接：例如 man and wife, you and I, back and forth。但在中文里，类似的场合往往不用连接词，所以只要说「夫妻」、「你我」、「前后」就够了。同样地，一长串同类词在中文里，也任其并列，无须连接：例如「东南西北」、「金木水火土」、「礼乐射御书数」、「柴米油盐酱醋茶」皆是。中国人绝不说「开门七件事，柴、米、油、盐、酱、醋以及茶。」谁要这么说，一定会惹笑。同理，中文只说「思前想后」、「说古道今」。可是近来 and 的意识已经潜入中文，到处作怪。港报上有过这样的句子：</p> <p>在政治民主化与经济自由化的发展道路，台北显然比北京起步更早及迈步更快，致在政经体制改革的观念、行动、范围及对象，更为深广更具实质……</p> <p>这样的文笔实在不很畅顺，例如前半句中，当做连接词的「与」、「及」都不必要。「与」还可以说不必要，「及」简直就要不得。后半句的「更为深广更具实质」才像中文，「起步更早及迈步更快」简直是英文。「及」字破坏了中文生态，因为中文没有这种用法。此地一定要用连接词的话，也只能用「而」，不可用「及」。正如 slow but sure 在中文里该说「慢而可靠」或者「缓慢而有把握」，却不可说「慢及可靠」或者「缓慢与有把握」。「而」之为连接词，不但可表更进一步，例如「学而时习之」，还可表后退或修正，例如「国风好色而不淫，小雅怨诽而不乱」，可谓兼有 and 与 but 之功用。</p> <p>目前的不良趋势，是原来不用连接词的地方，在 and 意识的教唆下，都装上了连接词；而所谓连接词都由「和」、「与」、「及」、「以及」包办，可是灵活而宛转的「而」、「并」、「而且」等词，几乎要绝迹了。(※英：但也不要不当而而而！）</p> <h2 id="四">四</h2> <p>介词在英文里的用途远比中文里重要，简直成了英文的润滑剂。英文的不及物动词加上介词，往往变成了及物动词，例如 look after, take in 皆是。介词词组 (prepositional phrase) 又可当作形容词或助词使用，例如 a friend in need,said it in earnest。所以英文简直离不了介词。中文则不尽然。「扬州十日、嘉定三屠」两个词组不用一个介词，换了英文，非用不可。</p> <p>「欢迎王教授今天来到我们的中间，在有关环境污染的各种问题上，为我们作一次学术性的演讲。」这样不中不西的开场白，到处可以听见。其实「中间」、「有关」等介词，都是画蛇添足。有一些圣经的中译，牧师的传道，不顾中文的生态，会说成「神在你的里面」。意思懂，却不像中文。</p> <p>「有关」、「关于」之类，大概是用得最滥的介词了。「有关文革的种种，令人不能置信」；「今天我们讨论有关台湾交通的问题」；「关于他的申请，你看过了没有？」在这句子里，「有关」、「关于」完全多余。最近我担任「全国学生文学奖」评审，有一篇投稿的题目很长，叫「关于一个河堤孩子的成长故事」。十三个字里，「关于」两字毫无作用，「一个」与「故事」也可有可无。「关于」有几个表兄弟，最出风的是「由于」。这字眼在当代中文里，往往用得不妥：</p> <blockquote> <p>由于秦末天下大乱，(所以) 群雄四起。</p> <p>由于好奇心的驱使，我向窗内看了一眼。</p> <p>由于他的家境贫穷，使得他只好休学。</p> </blockquote> <p>英文在形式上重逻辑，喜欢交代事物物的因果关系。中文则不尽然。「清风徐来，水波不兴」，其中当然有因果关系，但是中文只用上下文作不言之喻。换了是英文，恐怕会说「因为清风徐来，所以水波不兴」，或者「清风徐来，而不兴起水波」。上列的第一句，其实删掉「由于」与「所以」，不但无损文意，反而可使文章干净。第二句的「由于好奇心的驱使」并没有什么大毛病 (注四)，可是有点啰嗦，更犯不着动用「驱使」一类的正式字眼。如果简化为「出于好奇，我向窗内看了一眼」或者「为了好奇，我向窗内看了一眼」，就好多了。第三句的不通，犯者最多。「由于他的家境贫穷」这种片语，只能拿来修饰动词，却不能当做主词。这一句如果删掉「由于」，「使得」一类交代因果的冗词，写成「他家境贫穷，只好休学」，反觉眉清目秀。</p> <h2 id="五">五</h2> <p>英文的副词形式对中文为害尚不显著，但也已经开始了。例如这样的句子：</p> <blockquote> <p>他苦心孤诣地想出一套好办法来。</p> <p>老师苦口婆心地劝了他半天。</p> <p>大家苦中作乐地竟然大唱其民谣。</p> </blockquote> <p>「苦」字开头的三句成语，本来都是动词，套上副词语尾的「地」就降为副词了。这么一来，文章仍然清楚，文法上却主客分明，太讲从属的关系，有点呆板。若把「地」一律删去，代以逗点，不但可以摆脱这主客的关系，语气也会灵活一些。</p> <p>有时这样的西化副词词组太长，例如「他知其不可为而为之地还是去赴了约」，就更应把「地」删掉，代之以逗点，使句法松松筋骨。目前最滥的副词是「成功地」。有一次我不该为入学试出了这么一个作文题目：〈国父诞辰的感想〉，结果十个考生里至少有六个都说：「国父孙中山先生成功地推翻了满清。」这副词「成功地」在此毫无意义，因为既然推而翻之，就是成功了，何待重复。同理，「成功地发明了相对论」、「成功地泳渡了直布罗陀海峡」也都是饶舌之说。天下万事，凡做到的都要加上「成功地」，岂不累人？</p> <h2 id="六">六</h2> <p>白话文一用到形容词，似乎就离不开「的」，简直无「的」不成句了。在白话文里，这「的」字成了形容词除不掉的尾巴，至少会出现在这些场合：</p> <blockquote> <p>好的，好的，我就来。是的，没问题。</p> <p>快来看这壮丽的落日！</p> <p>你的笔干了，先用我的笔吧。</p> <p>也像西湖的有里外湖一样，丽芒分为大湖小湖两部分。</p> <p>他当然是别有用心的。你不去是对的。</p> </blockquote> <p>喜欢用「的」或者无力拒「的」之人，也许还有更多的场合要偏劳这万能「的」字。我说「偏劳」，因为在英文里，形容词常用的语尾有-tive, -able, -ical, -ous 等多种，不像在中文里全由「的」来担任。英文句子里常常连用几个形容词，但因语尾变化颇大，不会落入今日中文的公式。例如雪莱的句子：</p> <blockquote> <p>An old, mad, blind, despised, and dying king──</p> <p>一连五个形容词，直译过来，就成了：</p> <p>一位衰老的、疯狂的、瞎眼的、被人蔑视的、垂死的君王──</p> </blockquote> <p>一碰到形容词，就不假思索，交给「的」去组织，正是流行的白话文所以僵化的原因。白话文所以啰嗦而软弱，虚字太多是一大原因，而用得最滥的虚字正是「的」。学会少用「的」字之道，恐怕是白话文作家的第一课吧。其实许多名作家在这方面都很随便，且举数例为证：</p> <blockquote> <p>(一) 月光是隔了树照过来的，高处丛生的灌木，落下参差的斑驳的黑影，峭楞楞如鬼一般；弯弯的杨柳的稀疏的倩影，却又像是画在荷叶上。</p> <p>(二) 最后的鸽群……也许是误认这灰暗的凄冷的天空为夜色的来袭，或是也预感到风雨的将至，遂过早地飞回它们温暖的木舍。</p> <p>(三) 白色的鸭也似有一点烦躁了，有不洁的颜色的都市的河沟里传出它们焦急的叫声。</p> </blockquote> <p>第一句的「参差的斑驳的黑影」和「弯弯的杨柳的稀疏的倩影」，都是单调而生硬的重迭。用这么多「的」，真有必要吗？为什么不能说「参差而斑驳」呢？后面半句的原意本是「弯弯的杨柳投下稀疏的倩影」，却不分层次，连用三个「的」，读者很自然会分成「弯弯的、杨柳的、稀疏的、倩影」。第二句至少可以省掉三个「的」。就是把「灰暗的凄冷的天空」改成「灰暗而凄冷的天空」，再把「夜色的来袭」和「风雨的将至」改成「夜色来袭」、「风雨将至」。前文说过，中文好用短句，英文好用名词，尤其是抽象名词。「夜色来袭」何等有力，「夜色的来袭」就松软下来了。最差的该是第三句了。「白色的鸭」跟「白鸭」有什么不同呢？「有不洁的颜色的都市的河沟」，乱用「的」字，最是惑人。此句原意应是「颜色不洁的都市河沟」(本可简化为)「都市的脏河沟」，但读者同样会念成「有不洁的、颜色的、都市的、河沟」。</p> <p>目前的形容词又有了新的花样，那便是用学术面貌的抽象名词来打扮。再举数例为证：</p> <blockquote> <p>这是难度很高的技巧。</p> <p>他不愧为热情型的人。</p> <p>太专业性的字眼恐怕查不到吧。</p> </blockquote> <p>「难度很高的」是什么鬼话呢？原意不就是「很难的」吗？同理，「热情型的人」就是「热情的人」；「太专业性的字眼」就是「太专门的字眼」。到抽象名词里去兜了一圈回来，门面像是堂皇了，内容仍是空洞的。</p> <p>形容词或修饰语 (modifier) 可以放在名词之前，谓之前饰，也可以跟在名词之后，谓之后饰。法文往往后饰，例如纪德的作品 La Symphonie pastorale 与 LesNourritures terrestres，形容词都跟在名词之后；若译成英文，例如 The Pastoral Symphony，便是前饰了。中文译为「田园交响乐」，也是前饰。</p> <p>英文的形容词照例是前饰，例如前引雪莱的诗句，但有时也可以后饰，例如雪莱的另一诗句：One too like thee–tameless, and swift, and proud。至于形容词片或子句，则往往后饰，例如：man of action, I saw a man who looked like yourbrother。（※英：此例极佳，请注意！）</p> <p>目前的白话文，不知何故，几乎一律前饰，似乎不懂后饰之道。例如前引的英文句，若用中文来说，一般人会不假思索说成：「我见到一个长得像你兄弟的男人。」却很少人会说：「我见到一个男人，长得像你兄弟。」如果句短，前饰也无所谓。如果句长，前饰就太生硬了。例如下面这句：「我见到一个长得像你兄弟说话也有点像他的陌生男人。」就冗长得尾大不掉了。要是改为后饰，就自然得多：「我见到一个陌生男人，长得像你兄弟，说话也有点像他。」其实文言文的句子往往是后饰的，例如司马迁写项羽与李广的这两句：</p> <blockquote> <p>籍长八尺余，力能扛鼎，才气过人。</p> <p>广为人长，猿臂，其善射亦天性也。</p> </blockquote> <p>这两句在当代白话文里，很可能变成：</p> <blockquote> <p>项籍是一个身高八尺，力能扛鼎，同时才气过人的汉子。</p> <p>李广是一个高个子，手臂长得好像猿臂，天性就会射箭的人。</p> </blockquote> <p>后饰句可以一路加下去，虽长而不失自然，富于弹性。前饰句以名词压底，一长了，就显得累赘，紧张，不胜负担。所以前饰句是关闭句，后饰句是开放句。</p> <h2 id="七">七</h2> <p>动词是英文文法的是非之地，多少纠纷，都是动词惹出来的。英文时态的变化，比起其它欧洲语文来，毕竟单纯得多。若是西班牙文，一个动词就会变出七十八种时态。中文的名词不分单复与阴阳，动词也不变时态，不知省了多少麻烦。(阿房宫赋) 的句子：「秦人不暇自哀，而后人哀之。后人哀之而不鉴之，亦使后人而复哀后人也。」就这么一个「哀」字，若用西文来说，真不知要玩出多少花样来。</p> <p>中文本无时态变化，所以在这方面幸而免于西化。中国文化这么精妙，中文当然不会拙于分别时间之先后。散文里说：「人之将死，其言也善」；「议论未定，而兵已渡河。」诗里说：「已凉天气未寒时」。这里面的时态够清楚的了。苏轼的七绝：「荷尽已无擎雨盖，菊残犹有傲霜枝。一年好景君须记，最是橙黄橘绿时。」里面的时序，有已逝，有将逝，更有正在发生，区别得准确而精细。</p> <p>中文的动词既然不便西化，一般人最多也只能写出「我们将要开始比赛了」之类的句子，问题并不严重。动词西化的危机另有两端：一是单纯动词分解为「弱动词 + 抽象名词」的复合动词，前文已经说过。不说「一架客机失事，死了九十八人」，却说「一架客机失事，造成九十八人死亡」，实在是迂回作态。另一端是采用被动词语气。凡是及物动词，莫不发于施者而及于受者。所以用及物动词叙述一件事，不出下列三种方式：</p> <blockquote> <p>(一) 哥伦布发现了新大陆。</p> <p>(二) 新大陆被哥伦布发现了。</p> <p>(三) 新大陆被发现了。</p> </blockquote> <p>第一句施者做主词，乃主动语气。第二句受者做主词，乃被动语气。第三句仍是受者做主词，仍是被动，却不见施者。这三种句子在英文里都很普遍，但在中文里却以第一种最常见，第二、第三种就少得多。第三种在中文里常变成主动语气，例如「糖都吃光了」，「戏看完了」，「稿写了一半」，「钱已经用了」。</p> <p>目前西化的趋势，是在原来可以用主动语气的场合改用被动语气。请看下列的例句</p> <blockquote> <p>(一) 我不会被你这句话吓倒。</p> <p>(二) 他被怀疑偷东西。</p> <p>(三) 他这意见不被人们接受。</p> <p>(四) 他被升为营长。</p> <p>(五) 他不被准许入学。</p> </blockquote> <p>这些话都失之生硬，违反了中文的生态。其实，我们尽可还原为主动语气如下：</p> <blockquote> <p>(一) 你这句话吓不倒我。</p> <p>(二) 他有偷东西的嫌疑。</p> <p>(三) 他这意见大家都不接受。</p> <p>(四) 他升为营长。</p> <p>(五) 他未获准入学。</p> </blockquote> <p>同样，「他被选为议长」不如「他当选为议长」。「他被指出许多错误」也不如「有人指出他许多错误」。「他常被询及该案的真相」也不如「常有人问起他该案的真相」。</p> <p>目前中文的被动语气有两个毛病。一个是用生硬的被动语气来取代自然的主动语气。另一个是千篇一律只会用「被」字，似乎因为它发音近于英文的 by，却不解从「受难」到「遇害」，从「挨打」到「遭殃」，从「轻人指点」到「为世所重」，可用的字还有许多，不必套一个公式。</p> <h2 id="八">八</h2> <p>中文的西化有重有轻，有暗有明，但其范围愈益扩大，其现象愈益昭彰，颇有加速之势。以上仅就名词、连接词、介词、副词、形容词、动词等西化之病稍加分析，希望读者能举一反三，知所防范。</p> <p>常有乐观的人士说，语言是活的，有如河流，不能阻其前进，所谓西化乃必然趋势。语言诚然是活的，但应该活得健康，不应带病延年。至于河流的比喻，也不能忘了两岸，否则泛滥也会成灾。西化的趋势当然也无可避免，但不宜太快、太甚，应该截长补短，而非以短害长。</p> <p>颇有前卫作家不以杞人之忧为然，认为坚持中文的常规，会妨碍作家的创新。这句话我十分同情，因为我也是「过来人」了。「语法岂为我辈而设哉！」诗人本有越界的自由。我在本文强调中文的生态，原为一般写作说法，无意规范文学的创作。前卫作家大可放心去追逐缪思，不用碍手碍脚，作语法之奴。</p> <p>不过有一点不可不知。中文发展了好几千年，从清通到高妙，自有千锤百炼的一套常态。谁要是不知常态为何物而贸然自诩为求变，其结果也许只是献拙，而非生巧。变化之妙，要有常态衬托才显得出来。一旦常态不存，余下的只是乱，不是变了。</p>]]></content><author><name></name></author><category term="Writing"/><category term="Chinese"/><category term="Expression"/><category term="Article"/><summary type="html"><![CDATA[剪辑自余光中先生的文章「中文的常态与变态」，并不代表完全认同其所有观点]]></summary></entry><entry><title type="html">信息时代是平庸者的坟墓</title><link href="https://waynexucn.github.io//blog/2024/%E4%BF%A1%E6%81%AF%E6%97%B6%E4%BB%A3%E6%98%AF%E5%B9%B3%E5%BA%B8%E8%80%85%E7%9A%84%E5%9D%9F%E5%A2%93/" rel="alternate" type="text/html" title="信息时代是平庸者的坟墓"/><published>2024-11-20T20:15:23+00:00</published><updated>2024-11-20T20:15:23+00:00</updated><id>https://waynexucn.github.io//blog/2024/%E4%BF%A1%E6%81%AF%E6%97%B6%E4%BB%A3%E6%98%AF%E5%B9%B3%E5%BA%B8%E8%80%85%E7%9A%84%E5%9D%9F%E5%A2%93</id><content type="html" xml:base="https://waynexucn.github.io//blog/2024/%E4%BF%A1%E6%81%AF%E6%97%B6%E4%BB%A3%E6%98%AF%E5%B9%B3%E5%BA%B8%E8%80%85%E7%9A%84%E5%9D%9F%E5%A2%93/"><![CDATA[<blockquote> <p>剪辑自 <a href="https://www.nytimes.com/2012/01/25/opinion/friedman-average-is-over.html">Average Is Over</a></p> </blockquote> <p>在《大西洋月刊》最新一期中，亚当·戴维森（Adam Davidson）发表了一篇题为《在美国成功》（Making It in America）的文章，其中提到一个来自棉花种植区的笑话，生动地说明了现代纺织厂的高度自动化：如今，平均每家纺织厂只有两名员工，「一个人和一条狗。那个人的职责是喂狗，而狗的职责是防止那个人靠近机器。」</p> <p>戴维森的文章是最近众多讨论失业率居高不下和中产阶级收入下降原因的文章之一。这些文章普遍认为，当前的这些经济困境主要归因于大衰退导致的需求大幅下降，但也不可忽视全球化和信息技术革命的飞跃性进步。正是这些进步以前所未有的速度，用机器或海外劳动力替代了本地劳动者。</p> <p>过去，拥有普通技能、从事普通工作的工人，能够过上普通的生活。但如今，「普通」已经正式不再奏效了。仅仅是普通，已经无法为你带来过去的那种收入，尤其在现在这个时代，越来越多的雇主能够轻松获得大量高水平且廉价的外国劳动力、廉价的机器人、廉价的软件、廉价的自动化技术和廉价的天才人才。因此，每个人都需要找到自己的「额外价值」——即在其职业领域中让自己脱颖而出的独特价值贡献。「普通」时代已经结束了。</p> <p>是的，新技术一直在取代工作岗位，并且这种趋势将永远持续下去。正如人们常说的那样，如果马可以投票，汽车可能永远都不会出现。然而，这种趋势近年来正在加速发展。正如戴维森指出的那样：「在截至 2009 年的十年间，美国工厂裁员的速度如此之快，以至于几乎抹去了过去 70 年的所有就业增长；大约每三个制造业岗位中就有一个消失，总数约为 600 万个。」</p> <p>而这还只是冰山一角。去年 4 月，Slate 的安妮·洛瑞（Annie Lowrey）报道了一家名为「E la Carte」的初创公司，该公司致力于减少对服务员的需求。文章提到，这家公司「开发了一种增强版的 iPad，让顾客可以直接在餐桌上点单和支付。这项被称为‘Presto’的巧妙发明，是一群麻省理工学院工程师的创意结晶，很快可能会出现在你附近的餐厅中。……顾客可以选择自己想吃的菜品并将其添加到购物车中。根据餐厅的设置，设备还可以显示营养信息、成分表和菜品照片。你还可以提出特别要求，比如‘酱料放旁边’或者‘五倍培根’。完成点单后，订单会直接传送到厨房，而 Presto 会告诉你餐点需要多长时间准备。……觉得和同伴聊得无聊？可以在机器上玩游戏。用餐结束后，你可以直接在设备上结账，甚至可以逐项分摊账单，并选择任何你喜欢的支付方式。还可以选择将收据通过电子邮件发送给自己。……每台设备的租金为每月 100 美元。如果一家餐厅每天营业 8 小时、一周 7 天，那么每小时每张桌子的成本仅为 42 美分——比最便宜的服务员还便宜。」</p> <p>当 iPad 无法以超越平均水平的方式完成某些工作时，一个中国工人就会顶上。《纽约时报》在周日刊登了一篇由查尔斯·杜希格（Charles Duhigg）和基思·布拉德舍尔（Keith Bradsher）撰写的精彩文章，探讨了苹果为何将如此多的制造环节放在中国。在文章中，有这样一段描述：</p> <p>「苹果在最后一刻重新设计了 iPhone 的屏幕，迫使生产线进行全面调整。新的屏幕在午夜前后运抵位于中国工厂的仓库。一名主管立即唤醒了住在公司宿舍的 8000 名工人。每名员工都被分发了一块饼干和一杯茶，然后被带到工作岗位上，并在半小时内开始了为期 12 小时的轮班，负责将玻璃屏幕装配到带斜边的框架中。96 小时内，这家工厂每天就能生产超过 1 万部 iPhone。一位高管表示：‘这种速度和灵活性令人叹为观止。没有任何一家美国工厂能与之相比。’」</p> <p>自动化不仅仅局限于制造业，它正在渗透到更多领域。正如硅谷创意实验室 SRI International 的首席执行官柯蒂斯·卡尔森（Curtis Carlson）所解释的，这家实验室正是发明苹果 iPhone 数字个人助理程序 Siri 的地方。他表示：「Siri 只是一个开端，它标志着我们与银行、保险公司、零售商店、医疗服务提供商、信息检索服务和产品服务互动方式的巨大变革的开始。」</p> <p>变革将永远存在——新的工作、新的产品和新的服务将不断涌现。但我们可以确定的一点是，随着全球化和信息技术革命的每一次推进，最好的工作将需要劳动者拥有更高水平和更优质的教育，使自己能够超越平均水平。</p> <p>以下是美国劳工统计局（Bureau of Labor Statistics）提供的最新失业率数据，针对 25 岁以上的美国人：</p> <ul> <li>没有高中学历的人：13.8%；</li> <li>拥有高中学历但未接受大学教育的人：8.7%；</li> <li>上过一些大学或获得副学士学位的人：7.7%；</li> <li>拥有学士学位或更高学历的人：4.1%。</li> </ul> <p>在一个「普通」已经不再适用的世界里，我们需要采取多种措施来巩固就业，但最重要的一件事莫过于制定某种适合 21 世纪的「退伍军人法案」（G.I. Bill）。这种新法案应确保每个美国人都能获得高中以后的教育机会。</p> <hr/> <blockquote> <p>在信息技术飞速发展的浪潮中，「普通」已成为无法立足的过往代名词。这个时代，不再奖励平庸的重复，而是推崇创新、适应与差异化。全球化和自动化正以前所未有的速度重塑劳动市场，淘汰标准化技能，迫使每个人寻找独特的价值贡献。教育不再是锦上添花，而是生存的必要条件；学习不再是阶段性的任务，而是贯穿一生的使命。在这个时代，唯有超越「普通」，才能在不确定的未来中找到确定的方向。</p> </blockquote>]]></content><author><name></name></author><category term="Life"/><category term="Blogging"/><category term="Thoughts"/><category term="Discussion"/><summary type="html"><![CDATA[Average Is Over]]></summary></entry><entry><title type="html">多设备项目代码同步</title><link href="https://waynexucn.github.io//blog/2024/%E5%9F%BA%E4%BA%8EVHDX%E7%9A%84%E5%A4%9A%E8%AE%BE%E5%A4%87%E4%BB%A3%E7%A0%81%E5%90%8C%E6%AD%A5/" rel="alternate" type="text/html" title="多设备项目代码同步"/><published>2024-11-05T17:26:00+00:00</published><updated>2024-11-05T17:26:00+00:00</updated><id>https://waynexucn.github.io//blog/2024/%E5%9F%BA%E4%BA%8EVHDX%E7%9A%84%E5%A4%9A%E8%AE%BE%E5%A4%87%E4%BB%A3%E7%A0%81%E5%90%8C%E6%AD%A5</id><content type="html" xml:base="https://waynexucn.github.io//blog/2024/%E5%9F%BA%E4%BA%8EVHDX%E7%9A%84%E5%A4%9A%E8%AE%BE%E5%A4%87%E4%BB%A3%E7%A0%81%E5%90%8C%E6%AD%A5/"><![CDATA[<p>先讲需求。我有 4 台电脑，按使用频率排序分别是台式电脑、联想笔记本、微软 Surface Pro7 和迷你主机。台式机占据了 95% 的使用时间，用于日常办公和开发；迷你主机用于长时间运行且低性能要求的任务；笔记本和 Surface 则用于外出携带。为了实现跨设备的无缝工作流，需要高效同步代码和文件。</p> <p>目前，OneDrive 已完全满足除代码外的文件实时同步需求，特别是在 Windows 11 环境下。但代码同步始终存在问题。</p> <hr/> <h2 id="onedrive-同步代码的局限">OneDrive 同步代码的局限</h2> <p>我的代码分为两类备份：</p> <ul> <li><strong>Code</strong>文件夹：存储零散的原型代码，OneDrive 同步表现良好。</li> <li><strong>CodeSpace</strong>文件夹：存储系统性项目代码，包括科研原型、小型项目和开源代码。这类代码同步存在以下问题： <ul> <li><strong>同步慢</strong>。JavaScript/TypeScript 的<code class="language-plaintext highlighter-rouge">node_modules</code> 文件夹往往巨大且文件层级深，这会让云盘同步机制捉襟见肘。每个小文件都需要单独上传、处理和版本控制。</li> <li><strong>冲突多</strong>。当在多设备间频繁切换修改时，文件锁和冲突的概率大幅提升。OneDrive 会生成文件名 - 冲突副本，而我还需要花时间手动对比和解决。</li> <li><strong>完整性风险</strong>。在频繁修改的开发场景下，云盘可能因为未完成同步或网络中断导致文件损坏。直接同步源码文件容易出现版本冲突问题，特别是当多个设备同时访问和编辑代码时。</li> <li><strong>环境依赖问题</strong>。将代码直接放在云盘，只解决了代码的「搬运」问题，但没有解决运行环境的迁移。切换设备后，仍需手动重建环境、安装依赖库等。</li> </ul> </li> </ul> <p>同步网盘，比如坚果云官方建议，不要使用坚果云同步代码，用 git。但 git 是版本控制工具，又不是同步工具，代码可以托管平台，但快速迭代中频繁 push/pull 既麻烦又低效。同时，项目临时文件无法轻松清理，增加版本库体积。这些所有问题在我快速迭代代码或者开发大型项目时尤其明显。因此，现有方案无法满足 <strong>CodeSpace</strong> 文件夹的复杂需求，亟需新的同步方案。</p> <hr/> <h2 id="选择-vhdx--云盘同步动机">选择 VHDX + 云盘同步动机</h2> <p>VHDX 是一种虚拟硬盘文件，可以把它看作一个独立的硬盘设备。把项目的所有代码、依赖环境和一些开发工具（比如常用的脚本和测试数据）都存放在 VHDX 文件里。这样，所有内容都集中在一个文件中，从而实现以下效果：</p> <ul> <li>避免同步大量小文件的低效问题，只需同步一个大文件。</li> <li>所有代码和相关依赖都存储在 VHDX 中，无需担心遗漏关键文件。</li> <li>VHDX 的整体备份非常方便，可以直接复制到外部硬盘或另一个云盘服务。</li> <li>VHDX 本质上是虚拟硬盘，可以用作块存储的抽象层，持差分磁盘文件，这使得它可以结合块级同步技术，例如存储级快照和增量同步</li> <li>VHDX 可以存放任何特定于项目的目录、文件和包缓存。在你切换设备时，只需挂载同步好的 VHDX 文件，设置相同的盘符和缓存路径（如 npm、pip），即可获得完整的项目和环境，无需重新安装依赖。</li> <li>VHDX 支持动态扩展，随着数据被写入磁盘，虚拟硬盘文件会增长到其最大大小。</li> <li>VHDX 支持最大 64 TB，并针对因停电等问题导致的意外 IO 故障提供更具弹性的保护。</li> <li>如果项目发生严重问题，可以通过 OneDrive 的历史版本功能恢复 VHDX 文件的任意版本。</li> </ul> <p>比如 VHDX 驱动器的目录结构可以设计成：</p> <div class="language-makefile highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">X</span><span class="o">:</span>\
<span class="nf">├── PythonProjects</span>\
<span class="nf">│   ├── ProjectA</span>\
<span class="nf">│   ├── ProjectB</span>\
<span class="nf">│   └── VirtualEnvs</span>\
<span class="nf">├── JuliaProjects</span>\
<span class="nf">│   ├── ResearchProject</span>\
<span class="nf">│   └── SharedPackages</span>\
<span class="nf">├── JavaScriptProjects</span>\
<span class="nf">│   ├── FrontendApp</span>\
<span class="nf">│   ├── NodeModules</span>\
<span class="nf">│   └── Utils</span>\
<span class="nf">├── Tools</span>\
<span class="nf">│   ├── Scripts</span>\
<span class="nf">│   └── Templates</span>\
<span class="nf">└── packages</span>\
<span class="nf">    ├── nodejs</span>\
<span class="nf">    ├── npm</span>\
<span class="nf">    └── pip</span>\
</code></pre></div></div> <h2 id="实际使用">实际使用</h2> <p>Windows 11 新增的开发人员驱动器是一种新形式的存储卷，可用于提高关键开发人员工作负荷的性能。开发人员驱动器在 ReFS 技术基础上构建，采用有针对性的文件系统优化，并且可以更好地控制存储卷设置和安全性，包括信任指定、防病毒配置和对附加筛选器的管理控制。</p> <p>Windows 设置并导航到系统&gt;存储&gt;高级存储设置&gt;磁盘和卷。可以选择创建开发人员驱动器。系统会提供三个选项：</p> <ul> <li><strong>创建新的 VHD</strong> - 在新的虚拟硬盘上生成卷</li> <li><strong>调整现有卷的大小</strong> - 创建新的未分配空间以进行构建</li> <li><strong>磁盘上的未分配空间</strong> - 使用现有磁盘上的未分配空间。仅当之前在存储中设置了未分配的空间时，才会显示此选项。</li> </ul> <p>因此，在 Windows 11 中，可以方便的利用开发人员驱动器创建 VHDX。</p> <p>虽然由于管理虚拟磁盘层的开销，将开发人员驱动器存储在虚拟硬盘 (VHD) 中可能会稍微降低性能。权衡的是，VHD 可以选择格式为 VHDX，为动态调整大小（如果需要高效管理磁盘空间）、移动或备份数据提供了更大的灵活性。VHD 也高度可移植，允许将 VHD 文件传输到其他计算机或备份位置。具体创建 VHDX 的过程不再描述，<a href="https://learn.microsoft.com/zh-cn/windows/dev-drive/">Windows Learn</a>的讲解简洁明了。</p> <h2 id="很烦">很烦</h2> <p>项目一多 VHDX 占用空间就会很大，而 OneDrive 每次同步 VHDX 时都是全量的，没法增量同步。</p> <p>考虑到出门基本不会高强度迭代代码，就仅当弄了个新方案来备份项目代码。</p> <blockquote> <p>2024.12.15 我当时就是个傻逼，这玩意对我没什么用处，还浪费大半天时间了解，我是在哪儿看到 VHDX 可以增量备份的，nmd</p> </blockquote>]]></content><author><name></name></author><category term="Productivity"/><category term="VHDX"/><category term="CodeSync"/><summary type="html"><![CDATA[基于 VHDX 和同步盘的多设备的代码同步方案]]></summary></entry><entry><title type="html">工作环境系统实用配置记录</title><link href="https://waynexucn.github.io//blog/2024/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/" rel="alternate" type="text/html" title="工作环境系统实用配置记录"/><published>2024-09-24T19:36:53+00:00</published><updated>2024-09-24T19:36:53+00:00</updated><id>https://waynexucn.github.io//blog/2024/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95</id><content type="html" xml:base="https://waynexucn.github.io//blog/2024/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"><![CDATA[<blockquote> <p>2025.02.16：将工作环境迁移至 Mac Os，因为我用的软件大多为开源或多平台的，且 Scoop 的用法与 Homebrew 类似，各种配置可以很快速的从 Windows 迁移至 Mac OS，具体操作不再记录</p> </blockquote> <h3 id="scoop-包管理器">Scoop 包管理器</h3> <p><a href="https://scoop.sh/">Scoop</a> 是我在 Windows 平台上最顺手的软件（包）管理器，可以很方便的在命令行中安装我的熟悉的软件。它有以下特点：</p> <ul> <li>消除权限弹出窗口</li> <li>防止安装大量程序导致的 PATH 污染</li> <li>避免安装和卸载程序时出现意外的副作用</li> <li>自动查找并安装依赖项</li> <li>自动执行所有额外的设置步骤以获得一个可运行的程序</li> </ul> <p>我可以用它简单且直接的安装 oh-my-posh、nodejs、pipx、ffmpeg、7zip、aria2、fastfetch 等一系列小程序，仅需要以下命令：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scoop <span class="nb">install </span>nodejs-lts
</code></pre></div></div> <p>甚至可以用它安装 VS Code（需要添加 extras buckets）:</p> <pre><code class="language-poershell">scoop bucket add extras
scoop install vscode
</code></pre> <p>安装 nerd fonts 系列的字体（需要添加 nerd-fonts buckets）:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scoop bucket add nerd-fonts
scoop <span class="nb">install </span>Cascadia-Code
</code></pre></div></div> <p>需要注意，使用 Scoop 管理工具时，Scoop 会将已安装的多个版本的应用保存在各自的文件夹中，以便随时切换和回退到以前的版本。</p> <p>例如，可以通过文件管理器直接查看<code class="language-plaintext highlighter-rouge">C:\Users\Xu\scoop\apps\oh-my-posh</code>文件夹，里面应该有多个以版本号命名的子文件夹。当前激活的版本会显示在<code class="language-plaintext highlighter-rouge">current</code>目录中。可以通过文件管理器查看<code class="language-plaintext highlighter-rouge">C:\Users\Xu\scoop\apps\oh-my-posh\current</code>是指向哪个版本的符号链接。</p> <p>手动删除不需要的旧版本子文件夹。例如，如果看到有 7.68.0 和 7.69.1 两个文件夹，而只想保留最新的 7.69，可以进入<code class="language-plaintext highlighter-rouge">C:\Users\Xu\scoop\apps\oh-my-posh</code>目录 删除旧版本文件夹（如 7.68.0）。或者直接使用命令自动清理未使用的旧版本文件：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scoop cleanup oh-my-posh
<span class="c"># 清除所有软件的旧版本</span>
scoop cleanup <span class="k">*</span>
<span class="c"># 清楚安装包缓存</span>
scoop cache <span class="nb">rm</span> <span class="k">*</span>
</code></pre></div></div> <p>这样，每次更新后 Scoop 会自动删除旧版本。</p> <p>附上我使用 scoop 安装的软件：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Name                   Version            Source Updated             Info
<span class="nt">----</span>                   <span class="nt">-------</span>            <span class="nt">------</span> <span class="nt">-------</span>             <span class="nt">----</span>
7zip                   24.09              main   2024-12-02 16:34:26
aria2                  1.37.0-1           main   2024-11-11 21:58:04
btop                   1.0.4              main   2024-07-17 21:29:16
btop-lhm               1.0.4              main   2024-07-17 21:29:25
draw.io                25.0.2             extras 2024-12-05 15:24:34
everything             1.4.1.1026         extras 2024-12-04 14:25:38
fastfetch              2.33.0             main   2024-12-28 23:17:29
fd                     10.2.0             main   2024-12-22 12:47:35
ffmpeg                 7.1                main   2024-10-20 18:21:52
fzf                    0.57.0             main   2024-12-22 12:47:39
geekuninstaller        1.5.2.165          extras 2024-12-03 16:21:50
gh                     2.64.0             main   2024-12-22 12:57:21
ghostscript            10.04.0            main   2024-12-22 12:49:34
git                    2.47.1             main   2024-12-02 16:46:01
imagemagick            7.1.1-43           main   2024-12-25 22:26:47
innounp                1.76               main   2024-11-14 10:58:02
jid                    0.7.6              main   2024-12-22 12:49:50
jq                     1.7.1              main   2024-12-22 12:47:28
mingw                  14.2.0-rt_v12-rev0 main   2024-12-05 15:37:08
mongodb                8.0.4              main   2024-12-08 12:22:01
mongodb-compass        1.45.0             extras 2024-12-05 15:24:52
mongodb-database-tools 100.10.0           main   2024-12-02 17:10:50
mongosh                2.3.7              extras 2024-12-22 12:57:28
motrix                 1.8.19             extras 2024-12-02 17:45:13
nodejs-lts             22.12.0            main   2024-12-05 15:25:03
notepad3               6.24.1221.1        extras 2024-12-22 12:59:44
office-tool-plus       10.19.8.0          extras 2024-12-22 12:59:49
oh-my-posh             24.17.1            main   2024-12-25 22:26:58
openjdk21              21.0.2-13          java   2024-12-05 15:46:33
pandoc                 3.6.1              main   2024-12-25 22:27:12
picgo                  2.3.1              extras 2024-12-02 17:32:48
pipx                   1.7.1              main   2024-12-13 20:38:34
pnpm                   9.15.2             main   2024-12-28 23:17:37
poppler                24.08.0-0          main   2024-12-22 12:47:32
r                      4.4.2              main   2024-12-02 16:39:04
registry-finder        2.59.0.0           extras 2024-12-04 14:15:35
ripgrep                14.1.1             main   2024-12-22 12:47:37
rstudio                2024.12.0-467      extras 2024-12-22 13:00:34
rtools                 4.4.6335.6327      main   2024-12-02 14:16:57
<span class="nb">sudo                   </span>0.2020.01.26       main   2024-09-30 13:16:29
switchhosts            4.2.0.6119         extras 2024-12-02 17:38:16
texstudio              4.8.5              extras 2024-12-14 16:06:48
thorium                128.0.6613.189     extras 2024-12-02 17:36:29
typst                  0.12.0             main   2024-12-05 15:34:13
vcredist2022           14.42.34433.0      extras 2024-12-02 16:56:57
wixtoolset             5.0.2              main   2024-11-14 10:57:52
zoxide                 0.9.6              main   2024-12-22 12:47:42
</code></pre></div></div> <h3 id="fonts">Fonts</h3> <ul> <li>Powershell: ‘CaskaydiaMonoNerdFontMono’</li> <li>VS Code: ‘CaskaydiaMonoNerdFontMono’（英文）, ‘LXGW WenKai Mono’（中文）</li> <li>Office Word: ‘latinmodern-math’ （数学公式）。</li> </ul> <h3 id="nodejs">Node.js</h3> <h4 id="镜像源管理工具-nrm">镜像源管理工具 nrm</h4> <ul> <li>nrm 是一个 npm registry manager，可以帮助用户更方便地管理不同的镜像源。以下是 nrm 的基本使用方式：</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 安装nrm</span>
npm <span class="nb">install </span>nrm <span class="nt">-g</span>
<span class="c"># 列出所有配置的镜像源</span>
nrm <span class="nb">ls</span>
<span class="c"># 添加新的镜像源</span>
nrm add &lt;registry-name&gt; &lt;registry-url&gt;
<span class="c"># 删除镜像源</span>
nrm del &lt;registry-name&gt;
<span class="c"># 切换当前使用的镜像源</span>
nrm use &lt;registry-name&gt;
<span class="c"># 测试所有镜像源的速度</span>
nrm <span class="nb">test</span>
</code></pre></div></div> <h3 id="mongodb">MongoDB</h3> <h4 id="安装">安装</h4> <p>利用 scoop 自动安装 mongodb 及其一系列工具：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scoop bucket add main
scoop <span class="nb">install </span>main/mongodb
scoop <span class="nb">install </span>main/mongodb-database-tools

scoop bucket add extras
scoop <span class="nb">install </span>extras/mongosh
scoop <span class="nb">install </span>extras/mongodb-compass
</code></pre></div></div> <h4 id="配置">配置</h4> <p>通过 Scoop 安装的 MongoDB 默认不会配置为 Windows 服务，但可以手动设置 MongoDB 作为 Windows 服务来实现开机自启。</p> <p>使用 Scoop 检查 MongoDB 安装位置：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scoop prefix mongodb
</code></pre></div></div> <p>mongod shim 使用<code class="language-plaintext highlighter-rouge">$dir\bin\mongod.cfg</code>作为默认配置文件。要使用其他配置文件，请运行<code class="language-plaintext highlighter-rouge">$dir\bin\mongod.exe --config NEW_CONFIG_FILE</code>，<code class="language-plaintext highlighter-rouge">NEW_CONFIG_FILE</code>可以基于<code class="language-plaintext highlighter-rouge">mongod.cfg</code>进行修改，并存放在其他位置。</p> <p>手动启动 MongoDB，如果未创建<code class="language-plaintext highlighter-rouge">data\db</code>和<code class="language-plaintext highlighter-rouge">data\log</code>文件夹（路径可以在<code class="language-plaintext highlighter-rouge">mongod.cfg</code>中固定设置），请先手动创建：：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;路径&gt;<span class="se">\b</span><span class="k">in</span><span class="se">\m</span>ongod.exe <span class="nt">--dbpath</span> <span class="s2">"&lt;路径&gt;</span><span class="se">\d</span><span class="s2">ata</span><span class="se">\d</span><span class="s2">b"</span> <span class="nt">--logpath</span> <span class="s2">"&lt;路径&gt;</span><span class="se">\d</span><span class="s2">ata</span><span class="se">\l</span><span class="s2">og</span><span class="se">\m</span><span class="s2">ongo.log"</span> <span class="nt">--logappend</span>
</code></pre></div></div> <p>打开一个新终端，验证 MongoDB 是否正常启动：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mongosh
</code></pre></div></div> <p>注册 MongoDB 为 Windows 服务：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sc.exe create MongoDB <span class="nv">binPath</span><span class="o">=</span> <span class="s2">"&lt;路径&gt;</span><span class="se">\b</span><span class="s2">in</span><span class="se">\m</span><span class="s2">ongod.exe --service --config &lt;路径&gt;</span><span class="se">\m</span><span class="s2">ongod.cfg"</span> <span class="nv">DisplayName</span><span class="o">=</span> <span class="s2">"MongoDB"</span> <span class="nv">start</span><span class="o">=</span> <span class="s2">"auto"</span>
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">&lt;路径&gt;</code>：Scoop 安装的 MongoDB 路径。</li> <li><code class="language-plaintext highlighter-rouge">--service</code>：指定以服务模式运行。</li> <li><code class="language-plaintext highlighter-rouge">--config</code>：指定 MongoDB 的配置文件路径（可选）。</li> </ul> <p>启动 MongoDB 服务，如果服务启动成功，MongoDB 将在每次系统启动时自动运行：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>net start MongoDB
</code></pre></div></div>]]></content><author><name></name></author><category term="Productivity"/><category term="Windows"/><category term="Ubuntu"/><category term="Configuration"/><summary type="html"><![CDATA[工作环境的各类实用配置记录]]></summary></entry><entry><title type="html">部署用于学术研究的 Linux 服务器</title><link href="https://waynexucn.github.io//blog/2024/%E9%83%A8%E7%BD%B2%E7%94%A8%E4%BA%8E%E5%AD%A6%E6%9C%AF%E7%A0%94%E7%A9%B6%E7%9A%84Linux%E6%9C%8D%E5%8A%A1%E5%99%A8/" rel="alternate" type="text/html" title="部署用于学术研究的 Linux 服务器"/><published>2024-08-24T14:34:28+00:00</published><updated>2024-08-24T14:34:28+00:00</updated><id>https://waynexucn.github.io//blog/2024/%E9%83%A8%E7%BD%B2%E7%94%A8%E4%BA%8E%E5%AD%A6%E6%9C%AF%E7%A0%94%E7%A9%B6%E7%9A%84Linux%E6%9C%8D%E5%8A%A1%E5%99%A8</id><content type="html" xml:base="https://waynexucn.github.io//blog/2024/%E9%83%A8%E7%BD%B2%E7%94%A8%E4%BA%8E%E5%AD%A6%E6%9C%AF%E7%A0%94%E7%A9%B6%E7%9A%84Linux%E6%9C%8D%E5%8A%A1%E5%99%A8/"><![CDATA[<p>最近，我将一台 MiniPC 改造为一台基于 Ubuntu 操作系统的服务器，配置它以满足未来研究的潜在需求。</p> <p>鉴于我对 Linux 的了解有限，我花了一些时间学习并尝试完成部署，并记录配置步骤、可能出现的问题及其相应的解决方案。</p> <hr/> <h2 id="在-ubuntu-上创建具有管理员权限的新用户">在 Ubuntu 上创建具有管理员权限的新用户</h2> <p>当使用云服务、供应商提供或者自己配置的 Ubuntu 服务器时，会创建一个默认用户（default User）。通常，这个用户可以通过<code class="language-plaintext highlighter-rouge">sudo</code>命令临时提升权限来执行需要管理员权限的任务，但它本质上仍是一个普通用户（不是管理员账户）。如果需要创建一个拥有相同管理员权限的自定义用户，可以按照以下步骤进行：</p> <h3 id="1-创建新用户并指定主目录登录-shell">1. 创建新用户并指定主目录、登录 shell</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>useradd <span class="nt">-d</span> <span class="s2">"/home/&lt;user_name&gt;"</span> <span class="nt">-m</span> <span class="nt">-s</span> <span class="s2">"/bin/bash"</span> &lt;user_name&gt;
</code></pre></div></div> <p>参数说明：</p> <ul> <li><code class="language-plaintext highlighter-rouge">-d "/home/&lt;user_name&gt;"</code>：设置用户的主目录为 <code class="language-plaintext highlighter-rouge">/home/&lt;user_name&gt;</code>。</li> <li><code class="language-plaintext highlighter-rouge">-m</code>：自动创建主目录。</li> <li><code class="language-plaintext highlighter-rouge">-s "/bin/bash"</code>：指定用户的默认登录 shell 为 <code class="language-plaintext highlighter-rouge">/bin/bash</code>。</li> </ul> <h3 id="2-赋予新用户管理员权限">2. 赋予新用户管理员权限</h3> <p>要创建具有 sudo（管理员）权限的用户，运行以下命令：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>useradd <span class="nt">-d</span> <span class="s2">"/home/&lt;user_name&gt;"</span> <span class="nt">-m</span> <span class="nt">-s</span> <span class="s2">"/bin/bash"</span> <span class="nt">-G</span> <span class="nb">sudo</span> &lt;user_name&gt;
</code></pre></div></div> <p>其中：</p> <ul> <li><code class="language-plaintext highlighter-rouge">-G sudo</code>：将 <code class="language-plaintext highlighter-rouge">&lt;user_name&gt;</code> 添加到 <code class="language-plaintext highlighter-rouge">sudo</code> 用户组，使其具有管理员权限。</li> </ul> <h3 id="3-设置新用户的密码">3. 设置新用户的密码</h3> <p>新创建的用户默认没有密码。通过以下命令为 <code class="language-plaintext highlighter-rouge">&lt;user_name&gt;</code> 设置密码：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>passwd &lt;user_name&gt;
</code></pre></div></div> <p>运行此命令后，系统将提示输入两次密码。注意，出于安全考虑，在输入密码时不会有任何字符显示（不显示文本或提示符号）。只需输入密码并按 <code class="language-plaintext highlighter-rouge">Enter</code> 确认。</p> <p>通过以上步骤，可以成功创建一个新用户 <code class="language-plaintext highlighter-rouge">&lt;user_name&gt;</code>，该用户具备管理员权限，可以使用 <code class="language-plaintext highlighter-rouge">sudo</code> 执行命令。</p> <hr/> <h2 id="终端命令美化">终端命令美化</h2> <p>好看好用的终端提示符可以增加工作的愉悦感，这里使用<code class="language-plaintext highlighter-rouge">zsh</code>来美化终端，相关操作参考<a href="/blog/2022/Linux实用配置记录/">先前记录</a>。</p> <hr/> <h2 id="启用服务器的远程访问">启用服务器的远程访问</h2> <p>若要实现从非服务器物理位置远程访问 Ubuntu 服务器，可以通过安装并配置 SSH 服务来实现，并进行必要的防火墙配置。</p> <h3 id="1-安装和配置-ssh-服务">1. 安装和配置 SSH 服务</h3> <p>如果只需基本的 SSH 访问，安装<code class="language-plaintext highlighter-rouge">openssh-server</code>并开启 SSH 服务已足够。然而，在更高安全性需求的环境中，可以进一步优化 SSH 的配置文件<code class="language-plaintext highlighter-rouge">/etc/ssh/sshd_config</code>：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install </span>openssh-server
</code></pre></div></div> <p>在完成安装后，检查 SSH 服务的状态以确认其正常运行：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl status ssh
</code></pre></div></div> <ul> <li> <p><strong>配置建议</strong>：</p> <ul> <li> <p><strong>禁用 Root 用户直接登录</strong>（推荐）：避免直接以 root 身份登录服务器，增加安全性。在 <code class="language-plaintext highlighter-rouge">/etc/ssh/sshd_config</code> 中找到 <code class="language-plaintext highlighter-rouge">PermitRootLogin</code> 并将其设置为 <code class="language-plaintext highlighter-rouge">no</code>。</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nano /etc/ssh/sshd_config
</code></pre></div> </div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>PermitRootLogin no
</code></pre></div> </div> </li> <li> <p><strong>限制允许访问的用户</strong>：可以通过 <code class="language-plaintext highlighter-rouge">AllowUsers</code> 配置项指定允许通过 SSH 登录的用户，进一步强化安全性。</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>AllowUsers &lt;user_name&gt;
</code></pre></div> </div> </li> <li> <p><strong>使用非默认端口</strong>（可选）：将 SSH 端口从默认的 22 改为其他端口，比如 2200。此方法可以减少扫描攻击的可能性，但需同时更新防火墙规则。</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Port 2200
</code></pre></div> </div> </li> <li> <p><strong>启用自动断开空闲连接</strong>：为避免未使用的 SSH 会话长期占用资源，可在配置中添加以下行，以设置自动断开空闲连接。</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ClientAliveInterval 300
ClientAliveCountMax 2
</code></pre></div> </div> </li> </ul> </li> </ul> <p>更改完成后，重启 SSH 服务以应用配置：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl restart ssh
</code></pre></div></div> <h3 id="2-配置-ufw-防火墙">2. 配置 UFW 防火墙</h3> <p>如启用了 UFW 防火墙，确保开启 SSH 端口，并根据是否更改了端口号进行相应设置。若使用默认的 22 端口，可以直接使用：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>ufw allow ssh
</code></pre></div></div> <p>若更改了端口号，如设置为 2200，则需要如下命令：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>ufw allow 2200/tcp
</code></pre></div></div> <ul> <li> <p><strong>配置建议：</strong></p> <ul> <li> <p>启用防火墙后，进行状态检查以确保规则正确应用：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>ufw <span class="nb">enable
sudo </span>ufw status
</code></pre></div> </div> </li> </ul> </li> </ul> <h3 id="3-验证-ssh-连接">3. 验证 SSH 连接</h3> <p>在客户端系统（如 Windows）上测试与服务器的连接。Windows 下推荐使用 <a href="https://www.putty.org/">PuTTY</a> 或 <a href="https://aka.ms/terminal">Windows Terminal</a> 等支持 SSH 协议的终端工具，以确保连接的安全性和稳定性。</p> <p>要在 Windows 系统上测试与服务器的远程连接，可以使用 telnet 命令（注意：telnet 常用于测试连接，但生产环境中应使用更安全的 SSH 客户端）：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>telnet &lt;remote_ip&gt; &lt;remote_port&gt;
</code></pre></div></div> <p>将 <remote_ip> 替换为服务器的 IP 地址，<remote_port> 替换为服务器监听的 SSH 端口（默认是 22）。</remote_port></remote_ip></p> <h3 id="4-修复-xauthority-文件权限问题">4. 修复 .Xauthority 文件权限问题</h3> <p><code class="language-plaintext highlighter-rouge">/home/&lt;user_name&gt;/.Xauthority</code> 文件权限错误可能是因为在非 root 权限下创建了该文件。除了修改用户目录的所有权外，确保相关 SSH 会话目录的权限也正确：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo chown</span> &lt;user_name&gt;:&lt;user_name&gt; <span class="nt">-R</span> /home/&lt;user_name&gt;
</code></pre></div></div> <p>若问题仍然存在，可以试试创建一个新的 <code class="language-plaintext highlighter-rouge">.Xauthority</code> 文件：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo</span> <span class="nt">-u</span> &lt;user_name&gt; <span class="nb">touch</span> /home/&lt;user_name&gt;/.Xauthority
<span class="nb">sudo chown</span> &lt;user_name&gt;:&lt;user_name&gt; /home/&lt;user_name&gt;/.Xauthority
</code></pre></div></div> <h3 id="5-设置-fail2ban推荐">5. 设置 Fail2Ban（推荐）</h3> <p>为了进一步保护 SSH 服务免受暴力破解攻击，可以安装并配置 <code class="language-plaintext highlighter-rouge">fail2ban</code>。该工具会自动检测多次失败的登录尝试，并暂时禁用相应的 IP：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>fail2ban
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">fail2ban</code> 会自动启用 SSH 保护，也可以自定义 <code class="language-plaintext highlighter-rouge">/etc/fail2ban/jail.local</code> 文件以调整禁用时间、重试次数等参数：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[sshd]
enabled = true
port = 22
maxretry = 5
bantime = 600
</code></pre></div></div> <p>Fail2Ban 将自动识别多次失败的登录尝试并禁用相应 IP，从而进一步保障服务器安全。</p> <hr/> <h2 id="配置服务器与-github-的-ssh-连接">配置服务器与 GitHub 的 SSH 连接</h2> <p>以下是将 Ubuntu 服务器与 GitHub 配置为 SSH 连接的详细步骤，确保可以安全地克隆、推送和拉取 GitHub 上的仓库。</p> <h3 id="1-安装并验证-git">1. 安装并验证 Git</h3> <p>首先，安装 Git，并确认安装版本：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>git
git <span class="nt">--version</span>
</code></pre></div></div> <h3 id="2-配置-git-用户信息">2. 配置 Git 用户信息</h3> <p>使用 GitHub 用户名和电子邮箱配置 Git。确保填写与 GitHub 账户一致的信息，以便在提交代码时正确记录作者身份：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git config <span class="nt">--global</span> user.name <span class="s2">"&lt;github_account_name&gt;"</span>
git config <span class="nt">--global</span> user.email <span class="s2">"&lt;github_account_email&gt;"</span>
</code></pre></div></div> <p>以上配置会添加到 <code class="language-plaintext highlighter-rouge">~/.gitconfig</code> 文件中，是全局设置，即应用于该用户下所有 Git 仓库。</p> <h3 id="3-生成-ssh-密钥对">3. 生成 SSH 密钥对</h3> <p>为了在服务器上与 GitHub 建立安全连接，需要生成 SSH 密钥对：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-keygen <span class="nt">-C</span> <span class="s2">"&lt;github_account_email&gt;"</span> <span class="nt">-t</span> rsa
</code></pre></div></div> <ul> <li>说明： <ul> <li><code class="language-plaintext highlighter-rouge">-C "&lt;github_account_email&gt;"</code>：为密钥添加注释，一般是 GitHub 账户的邮箱地址。</li> <li><code class="language-plaintext highlighter-rouge">-t rsa</code>：指定密钥类型为 RSA（GitHub 支持的常用类型）。</li> </ul> </li> </ul> <p>运行命令后，按 <code class="language-plaintext highlighter-rouge">Enter</code> 三次（即保持默认文件名 <code class="language-plaintext highlighter-rouge">id_rsa</code> 和默认无密码的设置），密钥对会存储在 <code class="language-plaintext highlighter-rouge">~/.ssh</code> 目录中。</p> <h3 id="4-添加-ssh-公钥到-github">4. 添加 SSH 公钥到 GitHub</h3> <ol> <li> <p>使用以下命令打开生成的公钥文件，并复制其中的内容：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> ~/.ssh/id_rsa.pub
</code></pre></div> </div> <p>此命令会将公钥打印在终端上，可以选择性地使用文本编辑器打开并复制（例如使用 <code class="language-plaintext highlighter-rouge">vim ~/.ssh/id_rsa.pub</code>）。</p> </li> <li> <p>登录 GitHub 网站并导航到 <code class="language-plaintext highlighter-rouge">Settings</code> → <code class="language-plaintext highlighter-rouge">SSH and GPG keys</code> → <code class="language-plaintext highlighter-rouge">New SSH key</code>。</p> </li> <li> <p>将 <code class="language-plaintext highlighter-rouge">id_rsa.pub</code> 中的内容粘贴到 <code class="language-plaintext highlighter-rouge">New SSH key</code> 页面，并为此密钥设置一个描述性的名称（如 <code class="language-plaintext highlighter-rouge">Ubuntu Server Key</code>），然后保存。</p> </li> </ol> <h3 id="5-测试与-github-的-ssh-连接">5. 测试与 GitHub 的 SSH 连接</h3> <p>配置完成后，通过以下命令测试与 GitHub 的连接：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh <span class="nt">-T</span> git@github.com
</code></pre></div></div> <p>执行该命令时，GitHub 会返回一条信息确认连接成功，例如：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Hi &lt;github_account_name&gt;! You've successfully authenticated, but GitHub does not provide shell access.
</code></pre></div></div> <p>此信息表明 SSH 连接已成功建立，可以在服务器上与 GitHub 进行代码的推送和拉取操作。</p> <h3 id="6-常见问题和解决方法">6. 常见问题和解决方法</h3> <ol> <li> <p><strong>SSH 密钥权限问题</strong>：确保 SSH 密钥对文件的权限正确，以防连接问题。检查和设置密钥的权限：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod </span>600 ~/.ssh/id_rsa
<span class="nb">chmod </span>644 ~/.ssh/id_rsa.pub
</code></pre></div> </div> </li> <li> <p><strong>添加密钥到 SSH Agent</strong>（推荐）：若密钥在服务器启动后未自动加载，可以将其添加到 SSH Agent，以便每次重启后自动加载：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">eval</span> <span class="s2">"</span><span class="si">$(</span>ssh-agent <span class="nt">-s</span><span class="si">)</span><span class="s2">"</span>
ssh-add ~/.ssh/id_rsa
</code></pre></div> </div> </li> </ol> <hr/> <h2 id="python-环境配置与管理">Python 环境配置与管理</h2> <hr/> <h3 id="miniforge">Miniforge</h3> <p>在服务器上管理 Python Scientific 环境，我选择轻量、高效的 Miniforge 作为包管理工具，代替 Anaconda。Miniforge 默认配置 conda-forge 频道并集成了 Mamba，为包管理提供了更快的解决方案。下面是安装和配置 Miniforge 以及创建和删除环境的步骤。</p> <h4 id="1-安装-miniforge">1. 安装 Miniforge</h4> <p>首先，按照 <code class="language-plaintext highlighter-rouge">Miniforge</code> 的 <a href="https://github.com/conda-forge/miniforge">GitHub 项目页面</a> 中的安装说明进行下载和安装。以下是核心安装命令：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget <span class="s2">"https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-</span><span class="si">$(</span><span class="nb">uname</span><span class="si">)</span><span class="s2">-</span><span class="si">$(</span><span class="nb">uname</span> <span class="nt">-m</span><span class="si">)</span><span class="s2">.sh"</span>
bash Miniforge3-<span class="si">$(</span><span class="nb">uname</span><span class="si">)</span>-<span class="si">$(</span><span class="nb">uname</span> <span class="nt">-m</span><span class="si">)</span>.sh
</code></pre></div></div> <ul> <li> <p>配置建议：</p> <ul> <li>建议将 Miniforge 安装在 <code class="language-plaintext highlighter-rouge">/usr/local/miniforge3</code>，这样可以让多个用户共享环境，但只有 root 用户可以进行修改。安装过程中，可以选择安装目录，系统会自动创建所需文件夹。</li> <li> <p>如果使用 ZSH，应确认 Miniforge 的路径被添加到<code class="language-plaintext highlighter-rouge">.zshrc</code>文件中。</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"</span><span class="nv">$usr</span><span class="s2">/local/miniforge3/bin:</span><span class="nv">$PATH</span><span class="s2">"</span>
</code></pre></div> </div> </li> <li>重新加载<code class="language-plaintext highlighter-rouge">.zshrc</code>配置：<code class="language-plaintext highlighter-rouge">source ~/.zshrc</code></li> </ul> </li> </ul> <h4 id="2-初始化-mamba-环境">2. 初始化 Mamba 环境</h4> <p>安装完成后，初始化 Mamba 以便在终端使用该命令。假设 Miniforge 安装在 <code class="language-plaintext highlighter-rouge">/usr/local/miniforge3</code>，执行以下命令：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/usr/local/miniforge3/bin/mamba init
</code></pre></div></div> <p>此命令将初始化环境变量，需要重新启动终端以应用更改</p> <p>若使用 ZSH 无法，可以将<code class="language-plaintext highlighter-rouge">.bashrc</code>中的<code class="language-plaintext highlighter-rouge">mamba</code>配置复制到<code class="language-plaintext highlighter-rouge">.zshrc</code>，或者其他方式配置。</p> <h4 id="3-创建和管理环境">3. 创建和管理环境</h4> <p>在多用户服务器环境中，建议使用 root 权限（通过 <code class="language-plaintext highlighter-rouge">sudo su</code> 切换）创建和管理环境。这种方式可以避免普通用户意外或不受控地更改环境配置。</p> <h5 id="创建新环境">创建新环境</h5> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 以指定名称创建新环境</span>
mamba create <span class="nt">--name</span> &lt;new_env_name&gt; <span class="nv">python</span><span class="o">=</span>3.11 <span class="nt">--no-default-packages</span>
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">--name &lt;new_env_name&gt;</code>：为新环境命名。</li> <li><code class="language-plaintext highlighter-rouge">python=3.11</code>：设置 Python 版本为 3.11。</li> <li><code class="language-plaintext highlighter-rouge">--no-default-packages</code>：仅安装 Python，不自动安装其他包。</li> <li>普通用户可以在其主目录中创建私有环境（例如 <code class="language-plaintext highlighter-rouge">/home/username/myenv</code>），执行如下命令：</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mamba create <span class="nt">--prefix</span> /home/username/myenv <span class="nv">python</span><span class="o">=</span>3.11 <span class="nt">--no-default-packages</span>
</code></pre></div></div> <h5 id="删除环境">删除环境</h5> <p>若要删除某个环境（包括所有关联的包），可以使用以下命令：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 通过环境名称删除</span>
mamba remove <span class="nt">--name</span> &lt;env_name&gt; <span class="nt">--all</span>
<span class="c"># 通过路径删除</span>
mamba remove <span class="nt">--prefix</span> /path/to/directory <span class="nt">--all</span>
</code></pre></div></div> <h4 id="4-安装常用包">4. 安装常用包</h4> <p>通常建议不直接修改 <code class="language-plaintext highlighter-rouge">base</code> 环境，而是根据实际需求创建专门环境。例如，可能需要安装 <code class="language-plaintext highlighter-rouge">JupyterHub</code>，它为多个用户提供 Jupyter notebook 服务。</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 创建 Machine Learning 环境</span>
mamba create <span class="nt">--name</span> ml_env <span class="nv">python</span><span class="o">=</span>3.12 jupyterhub jupyterlab notebook notebook scipy numpy numpy
<span class="c"># 激活环境</span>
mamba activate ml_env
<span class="c"># 下载其他包</span>
mamba <span class="nb">install </span>jupyter-lsp-python jupyterlab-lsp jupyterlab-git jupyterlab_execute_time
</code></pre></div></div> <h4 id="5-防止未经授权的更新">5. 防止未经授权的更新</h4> <p>在多用户环境中，限制普通用户修改系统级环境有助于保持环境的稳定性。如果用户试图更新环境，将会遇到权限不足的错误。示例如下：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mamba update <span class="nt">--all</span>
</code></pre></div></div> <p>错误信息：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>EnvironmentNotWritableError: The current user does not have write permissions to the target environment.
  environment location: /usr/local/miniforge3
  uid: 1000
  gid: 1000
</code></pre></div></div> <p>这种设计可以确保环境的安全和一致性，避免因权限问题导致更新失败。</p> <p>如果需要临时给权限更新<code class="language-plaintext highlighter-rouge">base</code>环境，可以用<code class="language-plaintext highlighter-rouge">sudo</code>命令：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo</span> /usr/local/miniforge3/bin/mamba update <span class="nt">--all</span>
</code></pre></div></div> <hr/> <h3 id="poetry">Poetry</h3> <p>Poetry 是一种高效、便捷的 Python 项目依赖管理工具，适用于快速创建和管理虚拟环境、安装依赖库以及发布 Python 包。</p> <h4 id="1-安装-poetry">1. 安装 Poetry</h4> <p>在安装 Poetry 前，应确保已安装 Python 3.7 以上版本。</p> <ol> <li> <p>使用官方安装脚本：</p> <p>Poetry 的安装脚本可以自动将 Poetry 安装在 <code class="language-plaintext highlighter-rouge">$HOME/.local/bin</code> 目录下。运行以下命令下载并执行安装脚本：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-sSL</span> https://install.python-poetry.org | python3 -
</code></pre></div> </div> </li> <li> <p>将 Poetry 添加到 PATH：</p> <p>默认安装完成后，需要将 Poetry 添加到环境变量中。如果出现 <code class="language-plaintext highlighter-rouge">command not found</code> 错误，可以通过以下命令将其添加到当前会话的环境变量中：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"</span><span class="nv">$HOME</span><span class="s2">/.local/bin:</span><span class="nv">$PATH</span><span class="s2">"</span>
</code></pre></div> </div> </li> <li> <p>验证安装：</p> <p>安装完成后，可以通过以下命令检查安装版本，确认安装是否成功：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry <span class="nt">--version</span>
</code></pre></div> </div> </li> </ol> <h4 id="2-创建新项目">2. 创建新项目</h4> <p>Poetry 提供了简化的命令来快速生成新项目的基本结构。</p> <ol> <li> <p>创建新项目：</p> <p>使用以下命令创建新项目目录（例如 <code class="language-plaintext highlighter-rouge">my_project</code>），并生成默认的 <code class="language-plaintext highlighter-rouge">pyproject.toml</code> 文件。</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry new my_project
</code></pre></div> </div> <p>该命令将在项目目录中生成以下结构：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>my_project/
├── my_project/
│   └── __init__.py
├── pyproject.toml
└── tests/
    └── __init__.py
</code></pre></div> </div> </li> <li> <p>初始化现有项目（可选）：</p> <p>如果已存在项目并希望使用 Poetry 进行管理，可以通过 <code class="language-plaintext highlighter-rouge">poetry init</code> 初始化该项目。此命令将引导生成 <code class="language-plaintext highlighter-rouge">pyproject.toml</code> 文件，并配置初始依赖项：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>existing_project
poetry init
</code></pre></div> </div> </li> </ol> <h4 id="3-管理项目依赖">3. 管理项目依赖</h4> <p>Poetry 提供了便捷的依赖管理方式，区分了生产依赖和开发依赖。</p> <ol> <li> <p><strong>添加生产依赖</strong>：</p> <p>将依赖项添加到生产环境，例如 <code class="language-plaintext highlighter-rouge">requests</code> 库：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry add requests
</code></pre></div> </div> </li> <li> <p><strong>添加开发依赖</strong>：</p> <p>如果某些库仅用于开发和测试环境，可以使用 <code class="language-plaintext highlighter-rouge">--dev</code> 参数。此参数将依赖项添加到 <code class="language-plaintext highlighter-rouge">[tool.poetry.dev-dependencies]</code> 部分。例如，添加 <code class="language-plaintext highlighter-rouge">pytest</code> 作为开发依赖：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry add pytest <span class="nt">--dev</span>
</code></pre></div> </div> </li> <li> <p><strong>安装所有依赖</strong>：</p> <p>项目依赖项写入 <code class="language-plaintext highlighter-rouge">pyproject.toml</code> 文件后，可以使用以下命令安装所有依赖：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry <span class="nb">install</span>
</code></pre></div> </div> <p><code class="language-plaintext highlighter-rouge">poetry install</code> 会自动创建虚拟环境，并在虚拟环境中安装所需依赖。如果已存在 <code class="language-plaintext highlighter-rouge">poetry.lock</code> 文件，它将确保安装的依赖版本与锁定文件中的版本一致，以保证环境一致性。</p> </li> </ol> <hr/> <h4 id="4-管理虚拟环境">4. 管理虚拟环境</h4> <p>Poetry 在项目目录外创建虚拟环境，并自动激活和使用该虚拟环境。</p> <ol> <li> <p><strong>激活虚拟环境</strong>：</p> <p>可以通过以下命令激活 Poetry 创建的虚拟环境：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry shell
</code></pre></div> </div> </li> <li> <p><strong>退出虚拟环境</strong>：</p> <p>在虚拟环境中工作结束后，输入 <code class="language-plaintext highlighter-rouge">exit</code> 即可退出。</p> </li> <li> <p><strong>查看虚拟环境路径</strong>：</p> <p>若需查看虚拟环境的实际存储路径，可以使用：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry <span class="nb">env </span>info <span class="nt">--path</span>
</code></pre></div> </div> </li> <li> <p><strong>删除虚拟环境</strong>（可选）：</p> <p>如果需要重新创建虚拟环境或清理环境，可以删除虚拟环境：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry <span class="nb">env </span>remove python
</code></pre></div> </div> </li> </ol> <h4 id="5-管理依赖锁定文件">5. 管理依赖锁定文件</h4> <p>Poetry 使用 <code class="language-plaintext highlighter-rouge">poetry.lock</code> 文件锁定依赖的确切版本，以保证跨环境的一致性。</p> <ol> <li> <p><strong>更新依赖版本</strong>：</p> <p>当需要更新依赖版本时，可以使用以下命令重新解析依赖项并更新锁定文件：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry update
</code></pre></div> </div> </li> <li> <p><strong>安装指定的锁定版本</strong>：</p> <p>在协作项目中，团队成员可以基于 <code class="language-plaintext highlighter-rouge">poetry.lock</code> 文件安装项目的精确依赖项版本：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry <span class="nb">install</span>
</code></pre></div> </div> </li> </ol> <h4 id="6-运行脚本和命令">6. 运行脚本和命令</h4> <p>Poetry 支持直接在虚拟环境中运行脚本或命令，简化了命令管理。</p> <ol> <li> <p><strong>运行项目脚本</strong>：</p> <p>使用 <code class="language-plaintext highlighter-rouge">poetry run</code> 在虚拟环境中执行命令。例如，执行 Python 脚本：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry run python script.py
</code></pre></div> </div> </li> <li> <p><strong>直接运行单元测试</strong>：</p> <p>可以在虚拟环境中直接运行测试命令，如 <code class="language-plaintext highlighter-rouge">pytest</code>：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry run pytest
</code></pre></div> </div> </li> </ol> <h4 id="7-发布-python-包">7. 发布 Python 包</h4> <p>Poetry 可以将项目发布到 <a href="https://pypi.org/">PyPI</a> 或其他自定义包仓库。</p> <ol> <li> <p><strong>构建项目</strong>：</p> <p>Poetry 提供了一键构建项目的功能，将项目打包为 <code class="language-plaintext highlighter-rouge">.whl</code> 和 <code class="language-plaintext highlighter-rouge">.tar.gz</code> 文件，准备发布：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry build
</code></pre></div> </div> </li> <li> <p><strong>发布到 PyPI</strong>：</p> <p>将包发布到 PyPI，需要在 <code class="language-plaintext highlighter-rouge">~/.pypirc</code> 文件中配置 PyPI 凭据，或使用 Poetry 的 <code class="language-plaintext highlighter-rouge">publish</code> 命令交互输入：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry publish <span class="nt">--build</span>
</code></pre></div> </div> <blockquote> <p><strong>注意</strong>：要在测试环境中验证发布过程，可以使用 <code class="language-plaintext highlighter-rouge">--repository</code> 参数发布到 PyPI 测试仓库。</p> </blockquote> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry publish <span class="nt">--repository</span> testpypi
</code></pre></div> </div> </li> </ol> <hr/> <p>以下是针对计量经济学领域使用 R 环境的配置指南，包括安装 R 和 RStudio、常用的 R 包配置等。</p> <hr/> <h2 id="在-ubuntu-上配置-r-环境用于计量经济学分析">在 Ubuntu 上配置 R 环境用于计量经济学分析</h2> <p>在计量经济学领域，R 适合处理经济数据、执行回归分析、时间序列分析等任务。</p> <h3 id="1-安装-r">1. 安装 R</h3> <p>Ubuntu 默认的软件仓库包含 R，但可能不是最新版本。为了获取最新的 R 版本，可以使用 CRAN 仓库。</p> <ol> <li> <p><strong>添加 CRAN 仓库</strong>：</p> <p>更新软件包列表并安装必要的依赖项：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install </span>software-properties-common dirmngr <span class="nt">-y</span>
</code></pre></div> </div> </li> <li> <p><strong>添加 R 项目的 GPG 密钥</strong>：</p> <p>下载并添加 CRAN 的 GPG 公钥，以确保软件包的完整性：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget <span class="nt">-qO-</span> https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | <span class="nb">sudo tee</span> <span class="nt">-a</span> /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
</code></pre></div> </div> </li> <li> <p><strong>验证 GPG 密钥</strong>（可选）：</p> <p>验证密钥的指纹（<code class="language-plaintext highlighter-rouge">E298A3A825C0D65DFD57CBB651716619E084DAB9</code>）：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpg <span class="nt">--show-keys</span> /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
</code></pre></div> </div> </li> <li> <p><strong>添加 CRAN 仓库到源列表</strong>：</p> <p>将 CRAN 仓库添加到 apt 源列表中，以确保获取最新版本的 R：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>add-apt-repository <span class="s2">"deb https://cloud.r-project.org/bin/linux/ubuntu </span><span class="si">$(</span>lsb_release <span class="nt">-cs</span><span class="si">)</span><span class="s2">-cran40/"</span>
</code></pre></div> </div> </li> <li> <p><strong>安装 R 和开发包</strong>：</p> <p>安装最新版本的 R 和开发库：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>r-base r-base-dev <span class="nt">-y</span>
</code></pre></div> </div> </li> </ol> <h3 id="2-安装-rstudio">2. 安装 RStudio</h3> <p>RStudio 是一个功能强大的 IDE，适用于数据分析和可视化。RStudio 的安装过程简单，具体安装步骤可参考 <a href="https://posit.co/download/rstudio-server/">RStudio 官方安装指南</a>。</p> <p><strong>安装步骤</strong>：</p> <ol> <li>下载 RStudio Server 的最新版本。</li> <li> <p>使用 <code class="language-plaintext highlighter-rouge">dpkg</code> 命令进行安装：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dpkg <span class="nt">-i</span> rstudio-server-&lt;version&gt;.deb
</code></pre></div> </div> </li> <li> <p>检查安装状态：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl status rstudio-server
</code></pre></div> </div> </li> </ol> <p>RStudio Server 安装成功后，可以通过 <code class="language-plaintext highlighter-rouge">http://&lt;your-server-ip&gt;:8787</code> 在浏览器中访问。</p> <h3 id="3-安装计量经济学相关的-r-包">3. 安装计量经济学相关的 R 包</h3> <p>计量经济学分析通常需要专门的数据处理、回归分析和时间序列分析包。</p> <ol> <li> <p><strong>安装系统依赖</strong>：</p> <p>安装系统级的开发包，以确保 R 包安装顺利（特别是对一些需要编译的包，如 <code class="language-plaintext highlighter-rouge">tidyverse</code> 和 <code class="language-plaintext highlighter-rouge">data.table</code>）：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get <span class="nb">install </span>build-essential libssl-dev libcurl4-openssl-dev libxml2-dev
</code></pre></div> </div> </li> <li> <p><strong>安装计量经济学和数据处理包</strong>：</p> <p>启动 R 控制台并安装常用的计量经济学包：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>R
</code></pre></div> </div> <p>在 R 控制台中执行以下命令：</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">chooseCRANmirror</span><span class="p">(</span><span class="n">graphics</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"tidyverse"</span><span class="p">,</span><span class="w"> </span><span class="s2">"data.table"</span><span class="p">,</span><span class="w"> </span><span class="s2">"broom"</span><span class="p">,</span><span class="w"> </span><span class="s2">"plm"</span><span class="p">,</span><span class="w"> </span><span class="s2">"forecast"</span><span class="p">,</span><span class="w"> </span><span class="s2">"lmtest"</span><span class="p">,</span><span class="w"> </span><span class="s2">"sandwich"</span><span class="p">,</span><span class="w"> </span><span class="s2">"stargazer"</span><span class="p">))</span><span class="w">
</span></code></pre></div> </div> <ul> <li><code class="language-plaintext highlighter-rouge">tidyverse</code>：包含 <code class="language-plaintext highlighter-rouge">dplyr</code>、<code class="language-plaintext highlighter-rouge">ggplot2</code>、<code class="language-plaintext highlighter-rouge">tidyr</code> 等数据处理和可视化包。</li> <li><code class="language-plaintext highlighter-rouge">data.table</code>：用于快速数据处理。</li> <li><code class="language-plaintext highlighter-rouge">broom</code>：将回归分析结果整理成易于分析的表格。</li> <li><code class="language-plaintext highlighter-rouge">plm</code>：用于面板数据回归分析。</li> <li><code class="language-plaintext highlighter-rouge">forecast</code>：用于时间序列预测和分析。</li> <li><code class="language-plaintext highlighter-rouge">lmtest</code> 和 <code class="language-plaintext highlighter-rouge">sandwich</code>：提供计量经济学的测试工具和稳健标准误差。</li> <li><code class="language-plaintext highlighter-rouge">stargazer</code>：用于将回归结果输出为易于理解的表格，适合论文或报告。</li> </ul> </li> <li> <p><strong>安装高级计量经济学工具</strong>：</p> <ul> <li><code class="language-plaintext highlighter-rouge">AER</code>（Applied Econometrics with R）：包含用于经济学研究的常用函数和数据集。</li> <li><code class="language-plaintext highlighter-rouge">urca</code>：提供单根和协整检验。</li> <li><code class="language-plaintext highlighter-rouge">vars</code>：用于向量自回归（VAR）分析。</li> </ul> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"AER"</span><span class="p">,</span><span class="w"> </span><span class="s2">"urca"</span><span class="p">,</span><span class="w"> </span><span class="s2">"vars"</span><span class="p">))</span><span class="w">
</span></code></pre></div> </div> </li> <li> <p><strong>安装金融时间序列分析包</strong>（可选）：</p> <ul> <li><code class="language-plaintext highlighter-rouge">quantmod</code> 和 <code class="language-plaintext highlighter-rouge">TTR</code>：用于金融市场数据分析和技术指标计算。</li> <li><code class="language-plaintext highlighter-rouge">zoo</code> 和 <code class="language-plaintext highlighter-rouge">xts</code>：处理不规则时间序列数据。</li> </ul> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"quantmod"</span><span class="p">,</span><span class="w"> </span><span class="s2">"TTR"</span><span class="p">,</span><span class="w"> </span><span class="s2">"zoo"</span><span class="p">,</span><span class="w"> </span><span class="s2">"xts"</span><span class="p">))</span><span class="w">
</span></code></pre></div> </div> </li> </ol> <h3 id="4-使用-github-令牌安装私有包">4. 使用 GitHub 令牌安装私有包</h3> <p>如果需要从 GitHub 安装某些实验性或定制的包，建议使用 GitHub 令牌，以免受到 API 速率限制。</p> <p><strong>生成 GitHub 令牌</strong>：</p> <ol> <li> <p>在 R 控制台中生成令牌：</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">usethis</span><span class="o">::</span><span class="n">create_github_token</span><span class="p">()</span><span class="w">
</span></code></pre></div> </div> </li> <li> <p>在 GitHub 网站上生成一个新的 Personal Access Token（路径：<code class="language-plaintext highlighter-rouge">Settings</code> → <code class="language-plaintext highlighter-rouge">Developer settings</code> → <code class="language-plaintext highlighter-rouge">Personal access token</code> → <code class="language-plaintext highlighter-rouge">Tokens (classic)</code>）。</p> </li> <li> <p><strong>配置 GitHub 令牌</strong>：</p> <p>将生成的令牌添加到 R 环境中：</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">gitcreds</span><span class="o">::</span><span class="n">gitcreds_set</span><span class="p">()</span><span class="w">
</span></code></pre></div> </div> </li> </ol> <p>在此设置下，可以安全地从 GitHub 安装私有包，避免 API 限制。</p> <h3 id="5-示例安装和使用-plm-包进行面板数据回归">5. 示例：安装和使用 <code class="language-plaintext highlighter-rouge">plm</code> 包进行面板数据回归</h3> <p>假设要使用面板数据进行回归分析，下面是如何安装 <code class="language-plaintext highlighter-rouge">plm</code> 并执行固定效应模型的示例：</p> <ol> <li> <p><strong>安装 <code class="language-plaintext highlighter-rouge">plm</code></strong>（如果未安装）：</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"plm"</span><span class="p">)</span><span class="w">
</span></code></pre></div> </div> </li> <li> <p><strong>加载并使用 <code class="language-plaintext highlighter-rouge">plm</code></strong>：</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">plm</span><span class="p">)</span><span class="w">

</span><span class="c1"># 创建示例面板数据集</span><span class="w">
</span><span class="n">data</span><span class="p">(</span><span class="s2">"Produc"</span><span class="p">,</span><span class="w"> </span><span class="n">package</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"plm"</span><span class="p">)</span><span class="w">
</span><span class="n">pdata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pdata.frame</span><span class="p">(</span><span class="n">Produc</span><span class="p">,</span><span class="w"> </span><span class="n">index</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"state"</span><span class="p">,</span><span class="w"> </span><span class="s2">"year"</span><span class="p">))</span><span class="w">

</span><span class="c1"># 固定效应模型回归</span><span class="w">
</span><span class="n">fe_model</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">plm</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="n">gsp</span><span class="p">)</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="nf">log</span><span class="p">(</span><span class="n">pcap</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nf">log</span><span class="p">(</span><span class="n">hwy</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nf">log</span><span class="p">(</span><span class="n">water</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nf">log</span><span class="p">(</span><span class="n">util</span><span class="p">),</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pdata</span><span class="p">,</span><span class="w"> </span><span class="n">model</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"within"</span><span class="p">)</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">fe_model</span><span class="p">)</span><span class="w">
</span></code></pre></div> </div> <p>以下是整理优化后的指南，以帮助更有效地同步数据、安装字体、并处理 Nvidia 驱动程序和库的相关问题。</p> </li> </ol> <hr/> <h2 id="其他问题">其他问题</h2> <hr/> <h3 id="1-同步数据">1. 同步数据</h3> <p>要将本地数据同步到远程服务器，建议使用 <code class="language-plaintext highlighter-rouge">rsync</code>，这是一种高效且可靠的同步方法。更多细节应参考<a href="https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories">此教程</a>。</p> <ul> <li> <p><strong>同步命令</strong>：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rsync <span class="nt">-r</span> /path/to/sync/ &lt;username&gt;@&lt;remote_host&gt;:&lt;destination_directory&gt;
</code></pre></div> </div> <p>上述命令会将本地目录 <code class="language-plaintext highlighter-rouge">/path/to/sync/</code> 的所有内容「推送」到远程服务器的 <code class="language-plaintext highlighter-rouge">&lt;destination_directory&gt;</code>。</p> </li> <li> <p><strong>监控大文件的传输进度</strong>：</p> <p>如果同步的是较大文件，可以用 <code class="language-plaintext highlighter-rouge">watch</code> 命令来监控同步进度：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>watch <span class="nt">-n</span> &lt;time_interval&gt; <span class="nb">du</span> <span class="nt">-sh</span> /path/to/large/file
</code></pre></div> </div> <p>该命令会每隔 <code class="language-plaintext highlighter-rouge">&lt;time_interval&gt;</code> 秒刷新一次文件的大小变化。</p> </li> </ul> <hr/> <h3 id="2-安装常用字体">2. 安装常用字体</h3> <p>Linux 系统默认不带有一些 Windows 中的常用字体（例如 <code class="language-plaintext highlighter-rouge">Arial</code> 和 <code class="language-plaintext highlighter-rouge">Times New Roman</code>）。安装这些字体可以改善文档和网站的显示效果，特别是那些依赖这些字体的图形输出。安装 Microsoft TrueType 核心字体包并刷新缓存：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>msttcorefonts
<span class="nb">rm</span> <span class="nt">-rf</span> ~/.cache/matplotlib
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">msttcorefonts</code> 包括多种 Microsoft 字体，如 Arial 和 Times New Roman。</li> <li>第二个命令删除了 <code class="language-plaintext highlighter-rouge">matplotlib</code> 缓存目录，以确保更新后的字体正确加载。</li> </ul> <hr/> <h3 id="3-驱动程序库版本不匹配">3. 驱动程序/库版本不匹配</h3> <p>在运行 <code class="language-plaintext highlighter-rouge">nvidia-smi</code> 时，如果出现以下错误：</p> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failed to initialize NVML: Driver/library version mismatch
</code></pre></div></div> <p>可以参考 <a href="https://stackoverflow.com/questions/43022843/nvidia-nvml-driver-library-version-mismatch/45319156#45319156">Stack Overflow 上的解决方案</a>。简要的步骤如下：</p> <ol> <li> <p><strong>重启服务器</strong>：<br/> 某些情况下，重启服务器即可解决问题：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>reboot
</code></pre></div> </div> </li> <li> <p><strong>卸载并重新安装 Nvidia 驱动程序</strong>：</p> <p>如果重启无效，尝试以下命令清除现有的 Nvidia 驱动程序并重新安装：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt purge nvidia<span class="k">*</span> libnvidia<span class="k">*</span>
<span class="nb">sudo </span>ubuntu-drivers <span class="nb">install
sudo </span>reboot
</code></pre></div> </div> </li> </ol> <hr/> <h3 id="4升级-nvidia-驱动程序">4.升级 Nvidia 驱动程序</h3> <p>要升级 Nvidia 驱动程序，可以按照以下步骤进行：</p> <ol> <li> <p><strong>卸载旧驱动程序</strong>：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt purge <span class="k">*</span>nvidia<span class="k">*</span> <span class="nt">-y</span>
<span class="nb">sudo </span>apt remove <span class="k">*</span>nvidia<span class="k">*</span> <span class="nt">-y</span>
<span class="nb">sudo rm</span> /etc/apt/sources.list.d/cuda<span class="k">*</span>
<span class="nb">sudo </span>apt autoremove <span class="nt">-y</span> <span class="o">&amp;&amp;</span> <span class="nb">sudo </span>apt autoclean <span class="nt">-y</span>
<span class="nb">sudo rm</span> <span class="nt">-rf</span> /usr/local/cuda<span class="k">*</span>
</code></pre></div> </div> </li> <li> <p><strong>查找并安装推荐的驱动程序</strong>：</p> <p>运行以下命令来查找推荐的 Nvidia 驱动程序版本：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ubuntu-drivers devices
</code></pre></div> </div> <p>或者通过以下命令安装指定版本（例如 <code class="language-plaintext highlighter-rouge">550</code>，根据系统需求调整版本号）：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>libnvidia-common-550-server libnvidia-gl-550-server nvidia-driver-550-server <span class="nt">-y</span>
</code></pre></div> </div> </li> <li> <p><strong>重启并检查</strong>：</p> <p>重启服务器并使用 <code class="language-plaintext highlighter-rouge">nvidia-smi</code> 检查新驱动是否正常运行：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>reboot now
</code></pre></div> </div> <p>如果 <code class="language-plaintext highlighter-rouge">nvidia-smi</code> 返回以下错误：</p> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>NVIDIA-SMI has failed because it couldn't communicate with the NVIDIA driver.
</code></pre></div> </div> <p>尝试重新安装内核头文件并重启。</p> </li> </ol> <hr/> <h3 id="5内核头文件安装和-gcc-配置">5.内核头文件安装和 GCC 配置</h3> <p>如遇到内核头文件或 GCC 版本问题，按以下步骤操作：</p> <ol> <li> <p><strong>重新安装内核头文件</strong>：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install</span> <span class="nt">--reinstall</span> linux-headers-<span class="si">$(</span><span class="nb">uname</span> <span class="nt">-r</span><span class="si">)</span>
<span class="nb">sudo </span>reboot
</code></pre></div> </div> </li> <li> <p><strong>更新 GCC 版本</strong>：</p> <p>如果内核头文件安装过程中遇到 GCC 错误，可以升级到 <code class="language-plaintext highlighter-rouge">gcc-12</code>：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get <span class="nb">install </span>gcc-12
<span class="nb">sudo </span>update-alternatives <span class="nt">--install</span> /usr/bin/gcc gcc /usr/bin/gcc-12 12
</code></pre></div> </div> <p>重新安装内核头文件并重启服务器后，<code class="language-plaintext highlighter-rouge">nvidia-smi</code> 应该能够正常工作。</p> </li> </ol>]]></content><author><name></name></author><category term="Productivity"/><category term="Ubuntu"/><category term="Productivity"/><category term="Deployment"/><category term="Server"/><summary type="html"><![CDATA[如何部署一个 Linux 服务器]]></summary></entry><entry><title type="html">Python 项目中高效管理路径的范式</title><link href="https://waynexucn.github.io//blog/2024/Python%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%AB%98%E6%95%88%E7%AE%A1%E7%90%86%E8%B7%AF%E5%BE%84%E7%9A%84%E8%8C%83%E5%BC%8F/" rel="alternate" type="text/html" title="Python 项目中高效管理路径的范式"/><published>2024-07-15T22:18:35+00:00</published><updated>2024-07-15T22:18:35+00:00</updated><id>https://waynexucn.github.io//blog/2024/Python%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%AB%98%E6%95%88%E7%AE%A1%E7%90%86%E8%B7%AF%E5%BE%84%E7%9A%84%E8%8C%83%E5%BC%8F</id><content type="html" xml:base="https://waynexucn.github.io//blog/2024/Python%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%AB%98%E6%95%88%E7%AE%A1%E7%90%86%E8%B7%AF%E5%BE%84%E7%9A%84%E8%8C%83%E5%BC%8F/"><![CDATA[<h1 id="python-项目中高效管理路径的范式">Python 项目中高效管理路径的范式</h1> <p>在 Python 项目中，代码需要频繁读取数据文件、配置文件或输出日志文件。如果直接使用硬编码路径或者频繁拼接相对路径，不仅代码冗长，还容易因路径错误而导致程序崩溃。为了解决这些问题，记录一套规范的路径管理方法，可以提升代码的可读性、维护性和跨平台兼容性。</p> <h2 id="路径管理的四种方法">路径管理的四种方法</h2> <h3 id="1-设置项目的根目录">1. 设置项目的根目录</h3> <p>将项目的根目录（Project Root）作为路径管理的基准，所有其他路径都从这个基准出发，而不是依赖每个文件的相对路径。通过动态计算项目根目录的位置，例如：</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">pathlib</span> <span class="kn">import</span> <span class="n">Path</span>

<span class="c1"># 通过当前文件（如 paths.py）定位到项目根目录，叠加多个 parent
</span><span class="n">PROJECT_ROOT</span> <span class="o">=</span> <span class="nc">Path</span><span class="p">(</span><span class="n">__file__</span><span class="p">).</span><span class="nf">resolve</span><span class="p">().</span><span class="n">parent</span><span class="p">.</span><span class="n">parent</span>
<span class="c1"># PROJECT_ROOT = Path.cwd().resolve().parent.parent
</span></code></pre></div></div> <h4 id="优点">优点</h4> <ul> <li>不依赖环境变量，适应不同开发环境。</li> <li>路径管理从统一基准出发，逻辑清晰。</li> </ul> <hr/> <h3 id="2-使用环境变量配置项目根目录">2. 使用环境变量配置项目根目录</h3> <p>通过环境变量（如 <code class="language-plaintext highlighter-rouge">PYTHONPATH</code>​）配置项目根目录，所有路径的计算基于该环境变量。</p> <ol> <li> <p>在环境变量中添加项目根目录路径。</p> <ul> <li> <p><strong>Linux/MacOS</strong>：</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PYTHONPATH</span><span class="o">=</span>/path/to/your/project
</code></pre></div> </div> </li> <li> <p><strong>Windows</strong>：</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">set</span><span class="w"> </span><span class="nx">PYTHONPATH</span><span class="o">=</span><span class="n">C:\path\to\your\project</span><span class="w">
</span></code></pre></div> </div> </li> </ul> </li> <li> <p>在代码中使用 <code class="language-plaintext highlighter-rouge">os.environ</code>​ 读取环境变量：</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">osfrom</span> <span class="n">pathlib</span> <span class="kn">import</span> <span class="n">Path</span><span class="c1"># 从环境变量中获取项目根目录 PROJECT_ROOT = Path(os.environ["PYTHONPATH"])
</span></code></pre></div> </div> </li> </ol> <h4 id="优点-1">优点</h4> <ul> <li>解耦代码与文件系统结构，路径管理更加灵活。</li> <li>特别适合跨环境（开发/生产）的部署场景。</li> </ul> <hr/> <h3 id="3-集中管理路径常用">3. 集中管理路径（常用）</h3> <p>创建一个专门的路径管理模块，将项目中所有重要的路径集中定义。在 <code class="language-plaintext highlighter-rouge">config/paths.py</code>​ 中定义常用路径：</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">pathlib</span> <span class="kn">import</span> <span class="n">Path</span>

<span class="c1"># 项目根目录
</span><span class="n">PROJECT_ROOT</span> <span class="o">=</span> <span class="nc">Path</span><span class="p">(</span><span class="n">__file__</span><span class="p">).</span><span class="nf">resolve</span><span class="p">().</span><span class="n">parent</span><span class="p">.</span><span class="n">parent</span>

<span class="c1"># 数据文件夹
</span><span class="n">DATA_RAW</span> <span class="o">=</span> <span class="n">PROJECT_ROOT</span> <span class="o">/</span> <span class="sh">"</span><span class="s">data</span><span class="sh">"</span> <span class="o">/</span> <span class="sh">"</span><span class="s">raw</span><span class="sh">"</span>
<span class="n">DATA_PROCESSED</span> <span class="o">=</span> <span class="n">PROJECT_ROOT</span> <span class="o">/</span> <span class="sh">"</span><span class="s">data</span><span class="sh">"</span> <span class="o">/</span> <span class="sh">"</span><span class="s">processed</span><span class="sh">"</span>

<span class="c1"># 日志文件夹
</span><span class="n">LOGS</span> <span class="o">=</span> <span class="n">PROJECT_ROOT</span> <span class="o">/</span> <span class="sh">"</span><span class="s">logs</span><span class="sh">"</span>

<span class="c1"># 结果文件夹
</span><span class="n">RESULTS</span> <span class="o">=</span> <span class="n">PROJECT_ROOT</span> <span class="o">/</span> <span class="sh">"</span><span class="s">results</span><span class="sh">"</span>
</code></pre></div></div> <p>在其他模块中引用：</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">config.paths</span> <span class="kn">import</span> <span class="n">DATA_RAW</span>

<span class="n">file_path</span> <span class="o">=</span> <span class="n">DATA_RAW</span> <span class="o">/</span> <span class="sh">"</span><span class="s">data.txt</span><span class="sh">"</span>
<span class="k">with</span> <span class="n">file_path</span><span class="p">.</span><span class="nf">open</span><span class="p">(</span><span class="sh">"</span><span class="s">r</span><span class="sh">"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">"</span><span class="s">utf-8</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">content</span> <span class="o">=</span> <span class="nb">file</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span>
</code></pre></div></div> <h4 id="优点-2">优点</h4> <ul> <li>路径定义集中管理，修改目录结构时无需逐个调整代码。</li> <li>增强代码的可读性和模块化程度。</li> </ul> <hr/> <h3 id="4-使用动态路径管理工具">4. 使用动态路径管理工具</h3> <p>利用 Python 标准库或第三方工具（如 <code class="language-plaintext highlighter-rouge">importlib.resources</code>​）来动态管理项目内的文件路径，尤其适合读取静态资源文件。</p> <ul> <li> <p><strong>​<code class="language-plaintext highlighter-rouge">importlib.resources</code>​</strong>​（适用于 Python 3.9+）：</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">importlib.resources</span> <span class="kn">import</span> <span class="n">files</span>

<span class="c1"># 获取文件路径
</span><span class="n">file_path</span> <span class="o">=</span> <span class="nf">files</span><span class="p">(</span><span class="sh">"</span><span class="s">data.raw</span><span class="sh">"</span><span class="p">)</span> <span class="o">/</span> <span class="sh">"</span><span class="s">data.txt</span><span class="sh">"</span>

<span class="c1"># 读取文件
</span><span class="k">with</span> <span class="n">file_path</span><span class="p">.</span><span class="nf">open</span><span class="p">(</span><span class="sh">"</span><span class="s">r</span><span class="sh">"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">"</span><span class="s">utf-8</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">content</span> <span class="o">=</span> <span class="nb">file</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span>
</code></pre></div> </div> </li> <li> <p><strong>​<code class="language-plaintext highlighter-rouge">pkg_resources</code>​</strong>​（传统方法）：</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">pkg_resources</span> <span class="kn">import</span> <span class="n">resource_filename</span>

<span class="c1"># 获取文件路径
</span><span class="n">file_path</span> <span class="o">=</span> <span class="nf">resource_filename</span><span class="p">(</span><span class="sh">"</span><span class="s">data.raw</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">data.txt</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># 读取文件
</span><span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="sh">"</span><span class="s">r</span><span class="sh">"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">"</span><span class="s">utf-8</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">content</span> <span class="o">=</span> <span class="nb">file</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span>
</code></pre></div> </div> </li> </ul> <h4 id="优点-3">优点</h4> <ul> <li>文件路径动态计算，支持打包和分发。</li> <li>避免直接硬编码路径，增强代码的通用性。</li> </ul> <hr/> <h2 id="路径管理的高级实践使用env文件管理环境变量">路径管理的高级实践：使用<code class="language-plaintext highlighter-rouge">.env</code>文件管理环境变量</h2> <p>通过 <code class="language-plaintext highlighter-rouge">.env</code>​ 文件集中管理路径配置，并使用 <code class="language-plaintext highlighter-rouge">dotenv</code>​ 库在代码中加载这些配置。</p> <h4 id="示例">示例</h4> <ol> <li> <p><strong>创建</strong> <strong>​<code class="language-plaintext highlighter-rouge">.env</code>​</strong>​ <strong>文件</strong>：</p> <div class="language-ini highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="py">PROJECT_ROOT</span><span class="p">=</span><span class="s">/path/to/your/project</span>
</code></pre></div> </div> </li> <li> <p><strong>在代码中加载</strong> <strong>​<code class="language-plaintext highlighter-rouge">.env</code>​</strong>​ <strong>文件</strong>：</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">dotenv</span> <span class="kn">import</span> <span class="n">load_dotenv</span><span class="p">,</span> <span class="n">find_dotenv</span>
<span class="kn">from</span> <span class="n">pathlib</span> <span class="kn">import</span> <span class="n">Path</span>
<span class="kn">import</span> <span class="n">os</span>

<span class="c1"># 自动找到项目根目录中的 .env 文件
# find_dotenv() 会从当前工作目录向上搜索 .env 文件，直到找到为止。
# 只需要确保 .env 文件在项目根目录下，代码会自动定位。
</span><span class="n">dotenv_path</span> <span class="o">=</span> <span class="nf">find_dotenv</span><span class="p">()</span>
<span class="nf">load_dotenv</span><span class="p">(</span><span class="n">dotenv_path</span><span class="p">)</span>

<span class="c1"># 从环境变量中获取项目根目录
</span><span class="n">PROJECT_ROOT</span> <span class="o">=</span> <span class="nc">Path</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="nf">getenv</span><span class="p">(</span><span class="sh">"</span><span class="s">PROJECT_ROOT</span><span class="sh">"</span><span class="p">))</span>

<span class="c1"># 拼接子目录
</span><span class="n">DATA_RAW</span> <span class="o">=</span> <span class="n">PROJECT_ROOT</span> <span class="o">/</span> <span class="sh">"</span><span class="s">data</span><span class="sh">"</span> <span class="o">/</span> <span class="sh">"</span><span class="s">raw</span><span class="sh">"</span>
</code></pre></div> </div> </li> </ol> <h4 id="优点-4">优点</h4> <ul> <li><code class="language-plaintext highlighter-rouge">.env</code>​ 文件方便版本控制和跨环境配置。</li> <li>避免将路径硬编码到代码中。</li> </ul> <h2 id="其他">其他</h2> <ol> <li> <p>为了统一路径中的斜杠，可以使用<code class="language-plaintext highlighter-rouge">os.path.normpath</code>函数将路径标准化。这个函数会将路径中的斜杠统一为当前操作系统的标准分隔符（在 Windows 中是反斜杠<code class="language-plaintext highlighter-rouge">\</code>，在 Linux/macOS 中是斜杠<code class="language-plaintext highlighter-rouge">/</code>）。</p> </li> <li>可以使用<code class="language-plaintext highlighter-rouge">os.path.relpath(file, root_path)</code>提取<code class="language-plaintext highlighter-rouge">file</code>相对文件根目录<code class="language-plaintext highlighter-rouge">root_path</code>的相对路径，<code class="language-plaintext highlighter-rouge">file</code>应该是包含<code class="language-plaintext highlighter-rouge">root_path</code>的完整路径。</li> <li>确保目标目录存在<code class="language-plaintext highlighter-rouge">os.makedirs(path exist_ok=True)</code>，不存在即创建。</li> </ol>]]></content><author><name></name></author><category term="Code"/><category term="Python"/><category term="AdvancedTips"/><summary type="html"><![CDATA[规范的路径管理方法]]></summary></entry><entry><title type="html">为什么还在写博客</title><link href="https://waynexucn.github.io//blog/2024/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%98%E5%9C%A8%E5%86%99%E5%8D%9A%E5%AE%A2/" rel="alternate" type="text/html" title="为什么还在写博客"/><published>2024-07-14T12:44:14+00:00</published><updated>2024-07-14T12:44:14+00:00</updated><id>https://waynexucn.github.io//blog/2024/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%98%E5%9C%A8%E5%86%99%E5%8D%9A%E5%AE%A2</id><content type="html" xml:base="https://waynexucn.github.io//blog/2024/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%98%E5%9C%A8%E5%86%99%E5%8D%9A%E5%AE%A2/"><![CDATA[<blockquote> <p>剪辑自 <a href="http://nathanmarz.com/blog/you-should-blog-even-if-you-have-no-readers.html">You should blog even if you have no readers</a></p> </blockquote> <p>Spencer Fry 写了一篇关于「为什么创业者应该写作」的优秀文章。我想进一步补充，其实写作的好处远远超出想象，即使你没有读者（不论你是否是创业者），也依然值得写一个博客。</p> <p>我现在有 50 多个未完成的草稿。有些只是我随意写下的一些点子，记录着自我辩论的过程。大多数草稿可能永远不会发布，但每一篇写作都带给我了独特的价值。</p> <h3 id="写作让你成为更好的读者">写作让你成为更好的读者</h3> <p>写博客改变了我阅读他人作品的方式。</p> <p>在努力寻找适合的结构和表达方式的过程中，我更敏锐地察觉到什么样的论点是好的，什么样的论点是不足的。我也更擅长发现他人推理中的漏洞。</p> <p>与此同时，在阅读时我不再轻易被一些表面上反驳文章的弱势反例所误导。几乎每篇文章中都会有一些反例，这些反例可能基于个别的特例。网络评论者们很喜欢指出这些反例。然而，这些特例常常会忽略文章主要的论点。通过理解文章背后的隐含背景，我从阅读中获得了更多价值。</p> <p>我也更注重优秀作家的写作风格。我会在脑海中记录好作家表达想法的方式。我一直很喜欢 Paul Graham 的文章，但现在我更欣赏他如何组织文章。他有一种令人入迷的能力，能将读者带入他的世界，让人从他的视角来看待问题。我还从阅读 Bradford Cross 的博客中学到了很多好的写作技巧；他的文章结构清晰，短小的段落使阅读非常流畅。</p> <h3 id="写作让你更聪明">写作让你更聪明</h3> <p>写作能揭示出思维中的漏洞。当你的想法写下来并回看时，它们远不如在脑海中那么有说服力。写作迫使你通过思考反驳来使自己的观点更加成熟。</p> <p>写作帮助你将思路组织得更加连贯。这让你在相关话题上成为更好的对话者。我无法数清有多少次，因为提前通过写作整理了想法，从而与他人展开了更深入的交流。</p> <h3 id="其他的好处都是附加的">其他的好处都是附加的</h3> <p>写作带来的其他好处——个人品牌、建立人脉、获得更多机会——这些只是附加的好处。虽然这些好处可能会非常大，但它们并不是你应该写作的主要原因。</p> <p>你应该写作，因为写作会让你成为一个更好的人。</p>]]></content><author><name></name></author><category term="Collection"/><category term="Discussion"/><category term="Thoughts"/><category term="Blogging"/><summary type="html"><![CDATA[You should blog even if you have no readers]]></summary></entry><entry><title type="html">Word 排版记录</title><link href="https://waynexucn.github.io//blog/2024/Word%E6%8E%92%E7%89%88%E8%AE%B0%E5%BD%95/" rel="alternate" type="text/html" title="Word 排版记录"/><published>2024-06-23T21:35:00+00:00</published><updated>2024-06-23T21:35:00+00:00</updated><id>https://waynexucn.github.io//blog/2024/Word%E6%8E%92%E7%89%88%E8%AE%B0%E5%BD%95</id><content type="html" xml:base="https://waynexucn.github.io//blog/2024/Word%E6%8E%92%E7%89%88%E8%AE%B0%E5%BD%95/"><![CDATA[<h2 id="word-宏">Word 宏</h2> <h3 id="交叉引用颜色">交叉引用颜色</h3> <p>用于将 word 中的交叉引用、Endnote/Zotero 交叉引用自动格式化，默认颜色为蓝色。</p> <pre><code class="language-basic">Sub CitingColor()
    For i = 1 To ActiveDocument.Fields.Count '遍历文档所有域
        If Left(ActiveDocument.Fields(i).Code, 4) = " REF" Or Left(ActiveDocument.Fields(i).Code, 14) = " ADDIN EN.CITE" Or Left(ActiveDocument.Fields(i).Code, 31) = " ADDIN ZOTERO_ITEM CSL_CITATION" Then 'Word自带的交叉引用的域代码起始4位是" REF"（注意空格），EndNote插入的引用域代码的起始14位是" ADDIN EN.CITE"，Zotero插入的引用域代码的起始31位是" ADDIN ZOTERO_ITEM CSL_CITATION"。根据需求可添加其他类型。
        ActiveDocument.Fields(i).Select '选中上述几类域
        Selection.Font.Color = RGB(31, 77, 160) '设置字体颜色
        End If
    Next
End Sub
</code></pre> <h3 id="mathtype-统一缩放">Mathtype 统一缩放</h3> <p>用于处理 Mathtype 公式更新后部分公式高度不一致的问题，重新统一缩放代码。</p> <pre><code class="language-basic">Sub EqMathtype_100()
'
' EqMathtype_100 Macro
''
Dim i As Integer
Dim total As Integer
total = ActiveDocument.InlineShapes.Count
i = 0
For Each s In ActiveDocument.InlineShapes
i = i + 1
On Error Resume Next
Application.StatusBar = "Progress: " &amp; i &amp; " of " &amp; total
If s.Type = msoAutoShape Then
If s.OLEFormat.ClassType = "Equation.DSMT4" Then
With s
.ScaleHeight = 100
.ScaleWidth = 100
End With
End If
End If
Next
End Sub
</code></pre>]]></content><author><name></name></author><category term="Writing"/><category term="Word"/><category term="Typesetting"/><summary type="html"><![CDATA[常用的 Word 排版经验和宏工具]]></summary></entry><entry><title type="html">机箱风扇控制</title><link href="https://waynexucn.github.io//blog/2024/%E6%9C%BA%E7%AE%B1%E9%A3%8E%E6%89%87%E6%8E%A7%E5%88%B6/" rel="alternate" type="text/html" title="机箱风扇控制"/><published>2024-05-26T19:06:14+00:00</published><updated>2024-05-26T19:06:14+00:00</updated><id>https://waynexucn.github.io//blog/2024/%E6%9C%BA%E7%AE%B1%E9%A3%8E%E6%89%87%E6%8E%A7%E5%88%B6</id><content type="html" xml:base="https://waynexucn.github.io//blog/2024/%E6%9C%BA%E7%AE%B1%E9%A3%8E%E6%89%87%E6%8E%A7%E5%88%B6/"><![CDATA[<h2 id="碎碎念">碎碎念</h2> <p>之前一直不觉得自己 ATX 主机的风扇很吵，但在新装了台 ITX 小主机后，愈发觉得 ATX 主机是真的吵。尤其是把它和另一个 mini 主机放在一起时，被我认为非常吵 mini 主机都显得很安静了。</p> <p>主板自带的风扇调速功能，只提供了两种方式：依赖于主板温度或 CPU 温度，但我将 CPU 低温时的风扇转速调到极低后，似乎并没有效果。可能是铭瑄的 BIOS 太差劲了，也可能是我的机箱风扇不行。</p> <p>机箱风扇什么时候需要高速运转呢？一般是在显卡高负载时。而主板自带的风扇调速依赖于主板的温度传感器，但主板并不是主要发热源，只是间接受热，这之间存在误差。根据显卡温度调节机箱风扇速度才是正解，但 BIOS 里无法这样设置。</p> <p>我在 GitHub 上找到个小软件<code class="language-plaintext highlighter-rouge">FanControl</code>，功能还挺强的，特此记录下来。</p> <h2 id="转速控制">转速控制</h2> <p>总共有三个模块 <strong>Controls(控制)</strong>、<strong>Speeds(速度)</strong>、<strong>Curves(曲线)</strong>。</p> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/image-20240620182749451.png" alt="image-20240620182749451" style="zoom: 33%;"/></p> <p>上来先随便调了调，突然就发现了问题，我的机箱风扇没法通过这个软件控制，CPU 风扇可以。另外一个问题是，原来我的两个机箱风扇一直是跑在最高转速（1350 rpm），我人都傻了，我说怎么那么吵。原来有四个机箱风扇，得亏我拆了两个。顺手查了查风扇信息，Arctic F12 3Pin，风扇风评还是不错的，没有买错。但也有人指出，1000 转一下很安静，1000 转以上就很吵。</p> <p>再仔细查一查风扇参数，好家伙，原来不支持 PWM 调节。我说怎么主板上调整后也没有用。再进 BIOS 瞧一瞧，两个机箱风扇只有一个可以选择 DC 调节，另一个不知道为什么无法调整，有空拆下来看看是不是接口不支持。保存 BIOS 设置后，机箱外侧的风扇已经支持调节转速了。现在可以根据需求调节转速了。</p> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/image-20240620184306186.png" alt="image-20240620184306186" style="zoom: 33%;"/></p> <h2 id="参数设置">参数设置</h2> <ul> <li><strong>Curves 是需要我们手动制定的转速规则</strong>，第一次打开的并没有 Curves。点击右下角加号进行添加规则，Linear 或者 Graph 都是很容易配置的。 <ul> <li>Hysteresis、Response time 是设置灵敏度、响应速度相关的，维持默认即可。Temperature source 温度源设置成 GPU 显卡。</li> <li>我简单看了看，觉得 Graph 式的 Curves 比较直观，且方便理解。大概设置了三档，来控制机箱风扇： <ul> <li>低温阶段（CPU/GPU 温度低于 40°C）；风扇转速：10-20%；保持低噪音，足够的散热以应对轻度负载。</li> <li>中温阶段（CPU/GPU 温度在 40°C 到 60°C 之间）；风扇转速：20-40%；适应中等负载，如上网、看视频或轻度游戏，同时保持适中的噪音水平。</li> <li>高温阶段（CPU/GPU 温度高于 60°C）；风扇转速：40-100%；在高负载时（如大型游戏或重度渲染任务），提供最大的散热效能，风扇转速随温度上升而非线性增加，以有效控制温度。</li> </ul> </li> </ul> </li> </ul> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/image-20240620185657196.png" alt="image-20240620185657196" style="zoom: 50%;"/></p> <ul> <li><strong>Speeds 里面的一个个框，代表当前系统里所有的风扇。</strong>默认情况下显示的是 Fan #1、Fan #2、Fan #3 …，可以重命名。</li> <li><strong>Controls 负责把 Speeds 和 Curves 关联起来</strong>。 <ul> <li>点击 Control 右上角的设置、Select matching fan 进行风扇绑定。</li> <li>Control 的参数也很好理解：Enable：开关；Fan curve：转速规则，选择此前配置好的即可；offset：抵消参数，用于平衡多个风扇的转速，让它们尽可能相等</li> </ul> </li> </ul> <hr/> <p>最后，调整参数后的风扇控制结果如下：</p> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/image-20240620190508654.png" alt="image-20240620190508654" style="zoom: 33%;"/></p>]]></content><author><name></name></author><category term="Tools"/><category term="Hardware"/><category term="Optimization"/><summary type="html"><![CDATA[设定温度曲线控制机箱风扇速度]]></summary></entry><entry><title type="html">滑坡谬误</title><link href="https://waynexucn.github.io//blog/2024/%E6%BB%91%E5%9D%A1%E8%B0%AC%E8%AF%AFSlipperySlop/" rel="alternate" type="text/html" title="滑坡谬误"/><published>2024-03-04T17:42:00+00:00</published><updated>2024-03-04T17:42:00+00:00</updated><id>https://waynexucn.github.io//blog/2024/%E6%BB%91%E5%9D%A1%E8%B0%AC%E8%AF%AFSlipperySlop</id><content type="html" xml:base="https://waynexucn.github.io//blog/2024/%E6%BB%91%E5%9D%A1%E8%B0%AC%E8%AF%AFSlipperySlop/"><![CDATA[<blockquote> <p>滑坡谬误（Slippery slope）是一种非形式谬误。从形式逻辑上是属于假言三段论，使用连串的因果推论，却夸大了每个环节中的因果强度，将「可能性」转化为「必然性」，从而得到不合理的结论，然而事实不一定会按照线性推论而发生，而有其他的可能性<sup id="fnref:1"><a href="#fn:1" class="footnote" rel="footnote" role="doc-noteref">1</a></sup>。</p> </blockquote> <p>滑坡谬误的典型形式为：</p> <ul> <li>如果发生\(A_1\)，接着就会发生\(A_2\)，接着就会发生\(A_3\)，接着就会发生\(A_4\)，接着就会发生\(A_n\)。</li> <li>而后，通常会明示或暗示地推论：\(A_n\)不应该发生，因此我们不应允许\(A_1\)。</li> </ul> <p>\(A_1\)至\(A_2\)、\(A_2\)至\(A_3\)等因果关系好似一个个「坡」，从\(A_1\)推论至\(A_n\)的过程就像一个滑坡。</p> <p><strong>滑坡谬误的问题在于，每个「坡」的因果强度不一，有些因果关系只是可能、而非必然，有些因果关系相当微弱，有些因果关系甚至是未知或缺乏证据的。</strong>若有充足证据显示每个「坡」都有合理、强烈的因果连结，即不构成滑坡谬误。</p> <p>例如在抖音评论区中，各路人士对我的评论的反应，可以按照滑坡谬误的典型形式分析：</p> <ol> <li>\(A_1\)：我在抖音评论区上发表评论，指出视频中的偏差：华为 AI 芯片虽然有所进步，但并未全面超越 NVIDIA。</li> <li>\(A_2\)：某些群体解读这种评论为我是对国内产品持有偏见的人。</li> <li>\(A_3\)：这些群体因此推断我不支持华为乃至中国的科技进步。</li> <li>\(A_4\)：进一步推断，这种偏见表明我支持外国产品或外国观点。</li> <li>\(A_n\)：最终，这些人将你标记为「公知」、「反贼特务」、「诋毁民族产业」等，把我视为反对国家和民族利益的人。</li> </ol> <p>在这个例子中，从\(A_1\)到\(A_n\)​的每个阶段，因果关系逐渐弱化，并且充满了假设和误读。这些假设缺乏证据支持，往往基于情绪反应而非事实分析。</p> <ul> <li><strong>\(A_1\)至\(A_2\)</strong>的因果关系假定了所有批评都是负面的，而忽略了建设性批评的可能性。</li> <li><strong>\(A_2\)至\(A_3\)和\(A_3\)至\(A_4\)</strong>之间的连结是基于对你个人立场的臆断，而非你评论的内容。</li> <li><strong>到达\(A_n\)</strong>，即完全将你视为反国家的行为，是一个巨大的逻辑跳跃，没有实际证据支持这一最终的负面标签。</li> </ul> <hr/> <p>滑坡谬误的挑战性在于它们往往藏在看似合理的逻辑连贯性中，这使得它们不容易被立刻识别或反驳。举几个例子，值得深入探讨：</p> <ul> <li>如果继续发展和依赖人工智能来执行日常任务，很快人类的决策能力将会退化。随着时间的推移，人类将完全依赖于机器来做出生活中的每一个选择，最终导致人类丧失自主性。</li> <li>如果不限制网络上的煽动性言论，这可能会使社会价值观逐渐丧失，最终导致社会道德的完全崩溃。</li> </ul> <p>滑坡谬误具有隐蔽性和挑战性，它们在无声无息地引导我做出过度或错误的推断。即使在表达专业意见时，我也可能无意中采用了「如果…那么…」的推论模式，而这往往忽视了事件发展的多种可能性和复杂性。我一直认为，持续对自己的思维方式进行反思和批判至关重要。因此，我将记录下以上内容，告诫自己，通过理解滑坡谬误，可以更清晰地识别和避免这种思维误区。</p> <div class="footnotes" role="doc-endnotes"> <ol> <li id="fn:1"> <p><a href="https://en.wikipedia.org/wiki/Slippery_slope">https://en.wikipedia.org/wiki/Slippery_slope</a> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p> </li> </ol> </div>]]></content><author><name></name></author><category term="Life"/><category term="Discussion"/><category term="Philosophy"/><summary type="html"><![CDATA[Slippery Slop]]></summary></entry><entry><title type="html">Conda-Pyenv-Poetry 多轨管理 Python 环境</title><link href="https://waynexucn.github.io//blog/2024/%E5%A4%9A%E8%BD%A8%E7%AE%A1%E7%90%86Python%E7%8E%AF%E5%A2%83%E7%AE%A1%E7%90%86/" rel="alternate" type="text/html" title="Conda-Pyenv-Poetry 多轨管理 Python 环境"/><published>2024-02-09T13:08:36+00:00</published><updated>2024-02-09T13:08:36+00:00</updated><id>https://waynexucn.github.io//blog/2024/%E5%A4%9A%E8%BD%A8%E7%AE%A1%E7%90%86Python%E7%8E%AF%E5%A2%83%E7%AE%A1%E7%90%86</id><content type="html" xml:base="https://waynexucn.github.io//blog/2024/%E5%A4%9A%E8%BD%A8%E7%AE%A1%E7%90%86Python%E7%8E%AF%E5%A2%83%E7%AE%A1%E7%90%86/"><![CDATA[<h2 id="背景">背景</h2> <p>Python 项目类型很多：从简单的数据分析、深度学习到 Web 开发和应用构建，每种类型对版本、环境和依赖的要求各不相同。</p> <p>对于简单的项目，pip 就可以满足需求。但随着数据科学项目或应用构建项目的扩大，各项目的 Python 版本和环境间的差异越来越大，conda 虽然可以实现很好的环境管理，但它太「重」了，过于臃肿。无论是 Anaconda 还是 miniconda 都存在安装依赖库过于激进的问题，使得项目环境占用空间动辄 5-6G，出现不必要膨胀。</p> <p>因此，我将我的需求分为两类。一类是用 Python 写一些数据科学相关的项目，可以使用 conda 让多个类似的项目共用一个虚拟环境，这对动辄几个 G 的机器学习依赖的管理，非常重要。另一类，是用 Python 写一些小项目，可能是 Web、爬虫，也可能是纯 Python 实现，这个时候我仅仅需要安装我需要的依赖，同时不同项目可能对 Python 的版本有要求。这时候再用 conda 就很不明智了。</p> <p>为了满足以上需求，经过一系列调研，最终确定了三个工具共同来管理我的 Python 环境：<code class="language-plaintext highlighter-rouge">Conda</code>、<code class="language-plaintext highlighter-rouge">Pyenv</code>、<code class="language-plaintext highlighter-rouge">Poetry</code>。</p> <p>最终的目标为：</p> <ul> <li><code class="language-plaintext highlighter-rouge">Pyenv</code>管理系统全局的 Python 版本，新 shell-session 的 Python 由<code class="language-plaintext highlighter-rouge">Pyenv</code>接管。</li> <li><code class="language-plaintext highlighter-rouge">Conda</code>负责建立可以让多个类似项目公用的虚拟环境，新 shell-session 不再默认激活 base 或者其他 Conda 环境。</li> <li><code class="language-plaintext highlighter-rouge">Poetry</code>为不同项目建立轻便独立的虚拟环境，其 Python 版本依赖 Pyenv。</li> </ul> <blockquote> <p>2024.11.08 更新：使用<code class="language-plaintext highlighter-rouge">Rust</code>编写的 Python 包管理器 <code class="language-plaintext highlighter-rouge">uv</code> 替代了<code class="language-plaintext highlighter-rouge">Pyenv</code>和<code class="language-plaintext highlighter-rouge">Poetry</code>的所有功能，更加快捷。</p> <p>2024.12.05 更新：<code class="language-plaintext highlighter-rouge">uv</code> 有点难用，还是用回<code class="language-plaintext highlighter-rouge">Pyenv</code>和<code class="language-plaintext highlighter-rouge">Poetry</code>。</p> </blockquote> <h2 id="组合优势">组合优势</h2> <h3 id="pyenv灵活切换-python-版本">Pyenv：灵活切换 Python 版本</h3> <ul> <li><strong>安装多个 Python 版本</strong>：不管是 Python 2 还是 Python 3，不同版本的 Python 在项目中的需求各不相同。通过 Pyenv，可以安装多个版本，选择一个作为全局版本，并在不同项目间快速切换。</li> <li><strong>项目独立版本控制</strong>：在每个项目的根目录下创建 <code class="language-plaintext highlighter-rouge">.python-version</code> 文件，设置每个项目专属的 Python 版本。这样，即使在不同项目间切换，也可以保证每个项目使用对应的 Python 版本。</li> </ul> <h4 id="安装与配置">安装与配置</h4> <ul> <li> <p><strong>PowerShell</strong> - easiest way （for windows）</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Invoke-WebRequest</span><span class="w"> </span><span class="nt">-UseBasicParsing</span><span class="w"> </span><span class="nt">-Uri</span><span class="w"> </span><span class="s2">"https://raw.githubusercontent.com/pyenv-win/pyenv-win/master/pyenv-win/install-pyenv-win.ps1"</span><span class="w"> </span><span class="nt">-OutFile</span><span class="w"> </span><span class="s2">"./install-pyenv-win.ps1"</span><span class="p">;</span><span class="w"> </span><span class="o">&amp;</span><span class="s2">"./install-pyenv-win.ps1"</span><span class="w">
</span></code></pre></div> </div> </li> <li>运行<code class="language-plaintext highlighter-rouge">pyenv --version</code>检查安装是否成功。</li> <li>运行<code class="language-plaintext highlighter-rouge">pyenv install --list</code>检查 pyenv-win 支持的 Python 版本列表。</li> <li>运行<code class="language-plaintext highlighter-rouge">pyenv install &lt;version&gt;</code>以安装支持的版本。</li> <li>运行<code class="language-plaintext highlighter-rouge">pyenv global &lt;version&gt;</code>以设置全局 Python 版本。</li> <li>在当前路径下运行<code class="language-plaintext highlighter-rouge">pyenv local &lt;version&gt;</code>以设置 Python 本地版本，将版本号写入当前目录下的<code class="language-plaintext highlighter-rouge">.python-version</code>文件的方式（优先级高于<code class="language-plaintext highlighter-rouge">global</code>）。</li> <li> <p>检查正在使用的 Python 版本及其路径。</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;</span><span class="w"> </span><span class="n">pyenv</span><span class="w"> </span><span class="nx">version</span><span class="w">
</span><span class="err">&lt;</span><span class="n">version</span><span class="err">&gt;</span><span class="w"> </span><span class="p">(</span><span class="n">set</span><span class="w"> </span><span class="nx">by</span><span class="w"> </span><span class="nx">\path\to\.pyenv\pyenv-win\.python-version</span><span class="p">)</span><span class="w">
</span></code></pre></div> </div> </li> <li> <p>检查 Python 是否允许正常。</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">&gt;</span><span class="w"> </span><span class="n">python</span><span class="w"> </span><span class="nt">-c</span><span class="w"> </span><span class="s2">"import sys; print(sys.executable)"</span><span class="w">
</span><span class="n">\path\to\.pyenv\pyenv-win\versions\</span><span class="err">&lt;</span><span class="nx">version</span><span class="err">&gt;</span><span class="nx">\python.exe</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <h3 id="conda适合数据科学和深度学习的环境管理工具">Conda：适合数据科学和深度学习的环境管理工具</h3> <ul> <li><strong>环境隔离</strong>：Conda 可以创建完全隔离的环境，每个环境中的依赖互不影响，避免了包版本冲突的问题。</li> <li><strong>科学计算和深度学习</strong>：Conda 在这些领域有专门优化的库版本，比如 GPU 支持的 TensorFlow 和 PyTorch。</li> <li><strong>多语言支持</strong>：不仅可以管理 Python 包，也支持 R、Ruby 等语言的包。</li> </ul> <h4 id="安装与配置-1">安装与配置</h4> <p>这里使用的是针对 conda-forge 的 Conda 和 Mamba 的最小安装程序 Miniforge，预配置了以下功能：</p> <ul> <li>基础环境中的包来自 conda-forge 频道。</li> <li>conda-forge 频道被设置为默认（也是唯一）的频道。</li> </ul> <p>Miniforge 安装程序在此处可用：<a href="https://github.com/conda-forge/miniforge/releases">https://github.com/conda-forge/miniforge/releases</a></p> <p>在 Windows 上，Miniforge 默认不会添加到系统路径中。</p> <ul> <li>在这种情况下，从普通命令提示符中无法使用 conda / mamba，除非提供可执行文件的完整路径，例如<code class="language-plaintext highlighter-rouge">C:\Users\myusername\miniforge3\condabin\conda</code>。相反，建议使用从开始菜单可用的 Miniforge Prompt。</li> <li>如果需要，在安装后可以手动将<code class="language-plaintext highlighter-rouge">C:\Users\myusername\miniforge3\condabin</code>文件夹添加到路径环境变量中，以便更方便地从任何命令提示符中使用该软件，并尽可能减少软件冲突的机会。</li> </ul> <blockquote> <p><strong>注意一</strong>：</p> <p>环境配置还需要关闭自动激活 base 环境 <code class="language-plaintext highlighter-rouge">conda config --set auto_activate_base false</code>。 这样每次打开终端默认的都是 pyenv 提供的 Python，而非 conda 的 base 环境了。</p> </blockquote> <blockquote> <p><strong>注意二</strong>：</p> <p>默认情况下，Windows PowerShell 在启动时会加载 conda 的路径。因此，我们需要确保 pyenv 的 Python 在 PATH 中优先于 conda。 即将 pyenv 的路径移动到 Path 的最前面，确保它优先于 conda 的路径。</p> </blockquote> <h3 id="poetry依赖管理和项目打包的理想工具">Poetry：依赖管理和项目打包的理想工具</h3> <p>Poetry 轻便且强大，使用 pyproject.toml 和 poetry.lock 文件来管理依赖，类似于 JavaScript/Node.js 的 Npm 和 Rust 的 Cargo，这俩都是非常成熟好用的依赖管理方案。 因其本身并不具有管理 Python 解释器的功能，因此推荐和 pyenv/pyenv-win 一起使用，可以轻松下载和设置不同版本的 Python 解释器。</p> <ul> <li><strong>依赖解析和锁定</strong>：Poetry 会自动解析和锁定依赖，避免不同版本之间的兼容性问题。</li> <li><strong>项目打包和发布</strong>：可以直接把项目打包并发布到 PyPI，适合需要发布的小型工具或 Web 应用。</li> <li><strong>自动创建虚拟环境</strong>：Poetry 可以在项目目录中自动创建虚拟环境，简化了环境配置过程。</li> </ul> <h4 id="安装与配置-2">安装与配置</h4> <p><a href="https://github.com/pypa/pipx">pipx</a> 用于全局安装 Python CLI 应用程序，同时仍将它们隔离在虚拟环境中。pipx 当用于安装 Poetry 时将管理升级和卸载。</p> <ul> <li>如果 pipx 还未安装，您可以按照官方 pipx 安装说明中的任何一种选项进行操作。任何非古老版本的 pipx 都可以。</li> <li> <p>使用 pipx 安装 Portry</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pipx</span><span class="w"> </span><span class="nx">install</span><span class="w"> </span><span class="nx">poetry</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <h2 id="总结">总结</h2> <ul> <li><strong>Pyenv</strong>：负责 Python 版本管理，解决不同项目对 Python 版本的需求。</li> <li><strong>Conda</strong>：适合数据科学、深度学习等依赖复杂的项目，确保环境隔离和依赖兼容。</li> <li><strong>Poetry</strong>：用于依赖管理和打包，适合 Web 开发和小型应用项目，支持依赖锁定和发布。</li> </ul>]]></content><author><name></name></author><category term="Productivity"/><category term="Python"/><category term="Ubuntu"/><category term="Windows"/><summary type="html"><![CDATA[不同需求下的 Python 环境管理方法]]></summary></entry><entry><title type="html">我的表达欲在递减</title><link href="https://waynexucn.github.io//blog/2023/%E9%9A%8F%E7%AC%94%E6%88%91%E7%9A%84%E8%A1%A8%E8%BE%BE%E6%AC%B2%E5%9C%A8%E9%80%92%E5%87%8F/" rel="alternate" type="text/html" title="我的表达欲在递减"/><published>2023-12-28T23:02:00+00:00</published><updated>2023-12-28T23:02:00+00:00</updated><id>https://waynexucn.github.io//blog/2023/%E9%9A%8F%E7%AC%94%E6%88%91%E7%9A%84%E8%A1%A8%E8%BE%BE%E6%AC%B2%E5%9C%A8%E9%80%92%E5%87%8F</id><content type="html" xml:base="https://waynexucn.github.io//blog/2023/%E9%9A%8F%E7%AC%94%E6%88%91%E7%9A%84%E8%A1%A8%E8%BE%BE%E6%AC%B2%E5%9C%A8%E9%80%92%E5%87%8F/"><![CDATA[<p>近年，我的表达欲在递减。体现在微信朋友圈的是，从 2020 年的 12 条动态，到 2021 年和 2022 年的每年 6 条，2023 年略有回升至 10 条。体现在博客中的是，2020 年发表了 30 多篇编程笔记和算法文章，吸引了近千名粉丝。2021 年发布了十几篇关于模型算法的文章。然而，2022 年和 2023 年无任何更新。</p> <p>随着知识和经验的积累，我发现自己的表达欲在减弱。我常感觉自己像个旁观者，难以真正投入周遭的事。曾经令我兴奋的事物，似乎成为生活日常。这种淡漠感让我困惑，但并非对生活失去热情。成就带来的激动感也仍存在，只是持续时间变短。我开始思考这种心理变化的本质。</p> <h2 id="对内容质量的担忧">对内容质量的担忧</h2> <p>过去收集的见解，在几年后常显得过时，这让我担心自己的内容也会如此。为避免这种情况，我倾向于写一些基础理论或技术性内容。然而，我更多地是在收集而非表达。我希望表现得学识渊博，却又觉得自己的知识和阅历有限，难以深入探讨。尽管有丰富的实践经验，但这些经验往往只适用于特定条件和环境。</p> <p>我对分享笔记或编写教程感到忐忑。一方面，回顾我过去发布的笔记内容，发现它们大多内容浅显，质量不高，直接阅读官方文档或许更有效。另一方面觉得教程的技术含量不足。尽管如此，在发布前我仍会仔细审核，查阅大量资料，努力使内容更加丰富全面。这种追求表面全面的做法，也使我难以深入探讨问题。我曾阅读一些技术专家的文章，他们可以根据针对一个具体的小问题给出多样化的解决思路，同时详细分析不同技术的优劣；或以独到的视角给出深入且精辟的见解，常常能启发读者，给某一问题带来深刻的科学理解和启示。而我往往难以跳脱出已有内容，我不希望读者看到我的内容后，感受仅是「吧啦吧啦写了一大堆，就这啊。」</p> <p>此外，我对”一致性”的执着也成为了一种负担。我希望我的写作都遵循一定范式，习惯于为文章设定明确的段落和标题，整理内容以清晰地呈现思路，标记出重要信息并给出参考来源以便读者阅读。但这种做法反而成为了一种额外的负担，让我不断质疑：我真的想要这样的写作吗？我到底是写给谁看？虽然我内心渴望自由地写作，但总感到一种难以言喻的约束，不敢完全放开手脚。这大概也是近两年我不再将自己写的内容上传到公共平台上原因。</p> <h2 id="怕不被理解">怕「不被理解」</h2> <p>除了前述因素，我常常担心自己的观点发布后」不被理解「。我看了很多，思考了很多，我发现自己对某些问题的关注点经常与周围人有所不同，但我更倾向于通过阅读寻找共鸣，而不是主动表达。有时也想分享这些想法，但我不明确自己的知识储备是否能够支撑我去充分合理的表达，这让我有些力不从心。久而久之，这种感觉逐渐让我失去了表达的欲望。</p> <p>不断地表达和分享，其实是一种筛选过程，通过这个过程我们可以找到与自己灵魂相似的人。如果我们停止了表达和分享，可能有两种原因：要么是已经绝望，不再期待能遇到这样的人；要么是已经找到了心灵的归属。对于我来说，我并不认为自己已经找到了那样的人。</p> <h2 id="缺乏分享的心态">缺乏分享的心态</h2> <p>我逐渐远离了分享的心态。在雁栖湖的某个傍晚，我被夕阳景象吸引。虽然拍下了照片，但我并没有想法去发到朋友圈，或者发给某个群，某个人。这与我高中时期和刚上大学时的心态相反，这让我感到困惑。</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/life/YanQiHu20240630-480.webp 480w,/assets/img/life/YanQiHu20240630-800.webp 800w,/assets/img/life/YanQiHu20240630-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/life/YanQiHu20240630.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/life/YanQiHu20240530-480.webp 480w,/assets/img/life/YanQiHu20240530-800.webp 800w,/assets/img/life/YanQiHu20240530-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/life/YanQiHu20240530.jpg.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="人格特征">人格特征</h2> <p>之前常听到到别人讨论性格分类，比如将自己划分为 I 人（内向型）或 E 人（外向型）。于是某天我也决定花点时间来测试一下自己的性格，结果显示我属于「INTP-A / 逻辑学家」。</p> <p>INTP-A 中的「A」代表 Assertive（自信的）。这个后缀反映了一种相对稳定、自信和自我驱动的态度，这与 INTP-T（Turbulent，动荡的）形成对比。INTP-A 类型的人在面对挑战和压力时通常表现出更加平静和自信的态度。他们倾向于对自己的能力和决策过程有更高的自信，不太受外界评价的干扰。这种个性类型也倾向于高度分析和批判，有时会导致决策过程显得过于复杂和缓慢。他们在面对需要快速反应的情况时可能表现得不那么果断。这样的性格特征在我的日常生活和工作中表现得非常明显，尤其是在需要做出重要决策或在社交场合中。</p> <p>我对这种标签持怀疑态度，不太愿意接受这种将复杂的个体性格归纳为几个字母的方式。但也许它们并不是将人简单地框定在某个模式中，而是提供了一种自我认识和理解的工具，帮助我更好地认识自己。</p>]]></content><author><name></name></author><category term="Life"/><category term="Thoughts"/><category term="Blogging"/><category term="Psychology"/><summary type="html"><![CDATA[闲言碎语]]></summary></entry><entry><title type="html">关于成长</title><link href="https://waynexucn.github.io//blog/2023/%E9%9A%8F%E7%AC%94%E5%85%B3%E4%BA%8E%E6%88%90%E9%95%BF/" rel="alternate" type="text/html" title="关于成长"/><published>2023-11-05T18:02:00+00:00</published><updated>2023-11-05T18:02:00+00:00</updated><id>https://waynexucn.github.io//blog/2023/%E9%9A%8F%E7%AC%94%E5%85%B3%E4%BA%8E%E6%88%90%E9%95%BF</id><content type="html" xml:base="https://waynexucn.github.io//blog/2023/%E9%9A%8F%E7%AC%94%E5%85%B3%E4%BA%8E%E6%88%90%E9%95%BF/"><![CDATA[<p>回顾这些年的经历，像自己这样出身普通家庭的年轻人，最大的劣势并非经济条件的差距，而是成长中缺乏可靠的引领，是认知和经验上的缺失。许多关键的事情往往要靠自己闭门造车、反复琢磨。有时候，费尽心思得出的结论，不过是自以为是的「想当然」。</p> <p>书本知识曾是为数不多可以依赖的资源，但遗憾的是，自己常常难以分辨书本内容的对错和实际应用的价值。一方面，缺乏对书本知识的深入理解，机械地记忆与模仿，难以将其转化为解决现实问题的能力；另一方面，部分知识随着时代的发展已经过时，但却将它当作指导人生的准绳，错误地套用在当下的环境中。</p> <p>相比于那些出身优渥的孩子，我的父母或长辈由于生活阅历有限，无法提供具有前瞻性的建议或策略。他们甚至自己都未曾摆脱经济和知识的束缚，在指导我时，难免显得局限甚至错误。这种指引的缺乏，直接导致自己在关键节点上需要独自摸索——从学业选择到职业发展，从人际关系处理到长远规划，都不得不靠自己试探前行。而试探的代价，往往是用青春和机会换来的教训。人生重要的节点一旦错过，就难以回头。</p> <p>成长中的隐患，莫过于那些别有用心之人的误导。他们往往自称「过来人」，用自己的所谓经验教训来为我们指路，却殊不知这些所谓的「建议」其实充满了投机性和短视思维。例如，职场上的「野路子」、办公室主任口中的「人情世故」。更令人唏嘘的是，有时候连家人也可能在无意中成为这种误导的一部分——他们虽然出于爱护，却因为视野和经验的局限，传递的是一些已经过时甚至是错误的观念。这些看似「精明」的指导，往往利用我们经验不足的弱点，向我们灌输一套似是而非的逻辑。结果，我们浪费了宝贵的时间去学习和践行错误的思维方式，甚至在关键决策上因误导而彻底走偏。等到回过神时，才发现自己已经付出了惨重的代价。</p> <p>成长的路上，我曾犯过数次重大错误，但幸运的是，在人生的分岔口上，我似乎做出了当时情景下的较优决策。同时，学会了从失败中提炼经验。每一次错误，都是提醒我重新审视自身判断的契机。不再迷信外界的声音，而是开始主动验证和筛选信息，从多角度分析问题，避免盲目跟随。通过不断试探和调整，明确自己的价值观，不再轻易受外界干扰，以更广的视野和理性的方式规划未来，而不是困于眼前的小得失。一个人的出身无法选择，但通往未来的路，永远掌握在自己手中。</p>]]></content><author><name></name></author><category term="Life"/><category term="Thoughts"/><category term="Discussion"/><summary type="html"><![CDATA[闲言碎语]]></summary></entry><entry><title type="html">如何撰写被引用的论文和获得资助的提案</title><link href="https://waynexucn.github.io//blog/2023/%E5%A6%82%E4%BD%95%E6%92%B0%E5%86%99%E8%A2%AB%E5%BC%95%E7%94%A8%E7%9A%84%E8%AE%BA%E6%96%87%E5%92%8C%E8%8E%B7%E5%BE%97%E8%B5%84%E5%8A%A9%E7%9A%84%E6%8F%90%E6%A1%88/" rel="alternate" type="text/html" title="如何撰写被引用的论文和获得资助的提案"/><published>2023-10-24T22:02:00+00:00</published><updated>2023-10-24T22:02:00+00:00</updated><id>https://waynexucn.github.io//blog/2023/%E5%A6%82%E4%BD%95%E6%92%B0%E5%86%99%E8%A2%AB%E5%BC%95%E7%94%A8%E7%9A%84%E8%AE%BA%E6%96%87%E5%92%8C%E8%8E%B7%E5%BE%97%E8%B5%84%E5%8A%A9%E7%9A%84%E6%8F%90%E6%A1%88</id><content type="html" xml:base="https://waynexucn.github.io//blog/2023/%E5%A6%82%E4%BD%95%E6%92%B0%E5%86%99%E8%A2%AB%E5%BC%95%E7%94%A8%E7%9A%84%E8%AE%BA%E6%96%87%E5%92%8C%E8%8E%B7%E5%BE%97%E8%B5%84%E5%8A%A9%E7%9A%84%E6%8F%90%E6%A1%88/"><![CDATA[<blockquote> <p>摘录自<em>Writing science: how to write papers that get cited and proposals that get funded</em></p> </blockquote> <h2 id="writing-in-science">Writing in Science</h2> <h6 id="作为一名科学家你也是一名职业作家"><i>作为一名科学家，你也是一名职业作家</i></h6> <p><strong><u>科学家的成功不仅取决于脑海中的创意品质或手中的数据，更依赖于描述它们的语言。</u></strong>你的成功，通过让人们引用你的论文来实现，关键在于影响力。然而，成功并非仅靠写作本身，而是靠有效的写作。事实上，许多领域的领军人物之所以能够脱颖而出，正是因为他们用清晰有效的语言阐述了观点，与读者建立了连结。</p> <hr/> <h4 id="清晰写作与清晰思考谁先谁后">清晰写作与清晰思考：谁先谁后？</h4> <p>常见的误区是：要写得清晰，你必须先思考清楚。但是无论你对特定问题的思考多么合理（或看起来多么合理），无论你的意图和计划多么详尽，写作行为几乎总是会显得反叛，充满了意料之外的困难、岔道、死胡同和启示。好的、清晰的写作——教育并且不引起混淆的写作——是从一系列斗争中浮现出来的，如果你愿意的话，也可以称之为诉讼。通常情况下，需要颠倒上述公式中的术语：<strong><u>从清晰的写作中可以浮现出清晰的思考</u></strong>。</p> <p><strong><u>专注于清晰的写作能迫使你更清晰地思考</u></strong>。提高写作水平将有助于你取得成功，这不仅是因为它能让你更有效地表达自己的想法，让更多的人了解你的想法，还因为它能让你的思维更清晰，从而让你的科学更出色。</p> <h4 id="写作的价值让科学发声">写作的价值：让科学发声</h4> <p>我们的事业是逐步建立起来的–<strong>我们的同行阅读我们的论文，使用我们的观点；我们发表的论文越多，被引用的次数越多，我们就越成功</strong>。但是，我们的工作之所以被阅读和引用，是因为我们的观点说得足够好，读者能够理解我们的意思。<strong>我们的提案之所以能获得资助，是因为我们能够向评审者清晰、有力和令人信服地表达我们的想法。</strong></p> <p>因此，<strong><u>我们的成功不仅来源于这些想法本身的内在质量，还来源于我们传达想法的能力</u></strong>。</p> <h4 id="写作科学研究中的重要工具">写作：科学研究中的重要工具</h4> <p>尽管撰写论文非常重要，但对大多数科学家来说，撰写论文是我们事后才做的事情。拿到数据后，我们就 “写 “论文。这种做法令人遗憾。</p> <p>写作不仅是沟通的手段，更是一项需要精心打磨的工具，与分子生物学等技术同样复杂且微妙。科学家应深入研究和开发这一技能，像对待实验工具一样对待写作。</p> <h4 id="让读者的工作变得轻松">让读者的工作变得轻松</h4> <p><span style="color: #A80000;"> <b>作为作者，你的任务是让读者的工作变得轻松</b></span>。这一点可能是所有其他原则的基础，所以再重复一遍，更响亮一些。<span style="color: #A80000;"> <b>作为作者，你的任务是让读者的工作变得轻松</b></span>。</p> <p>清晰的写作能够帮助读者迅速理解你的观点，而不是在复杂的表达中迷失。你提供的不是艰难的解谜任务，而是直接有效的科学信息。</p> <h4 id="写作是反复雕琢的过程">写作是反复雕琢的过程</h4> <p>糟糕的初稿是每位优秀作家的起点。优秀的作品往往来源于不断地重写和修改。正如一位艺术家永远无法真正完成作品，而只能在某一刻选择放手，写作也是如此。重写的过程不仅磨练写作技巧，还能提升你的思考深度。</p> <p><strong><u>改写是写作的本质</u></strong>。专业作家一遍又一遍地修改句子，不断调整结构。<strong><u>写作是痛苦但必要的</u></strong>。从糟糕的初稿到优秀的第三稿，需要无数次的重写。这种重写循环既发展了你的写作技巧，也提升了你的思考，使两者都朝向清晰和力量迈进。</p> <h2 id="science-writing-as-storytelling">Science Writing as Storytelling</h2> <h6 id="好的故事无法设计出来它必须被提炼"><i>好的故事无法设计出来，它必须被提炼</i></h6> <p>科学家在讲故事时，采用的是一种形式化的结构，与记者的叙事方式截然不同。然而，许多科学家对「讲故事」这一概念感到不适。原因在于「故事」一词常与虚构联系在一起，而科学需要保持客观和冷静。这种误解使得科学家们在呈现成果时，在突出故事方面做得很差，仅仅「介绍他们的工作」。结果是，即使是科学记者，也可能难以从中感受到一个故事。</p> <hr/> <h4 id="从科学数据到科学故事">从科学数据到科学故事</h4> <p><strong><u>论文从数据中构建故事，但数据本身并不是故事</u></strong>。科学故事的核心是从数据中提炼出意义，而非在收集数据前设定框架。故事需要从数据中自然生成，而不是被强加。科学故事并不是虚构，而是对数据的客观评估和解释。被引用最多的论文和获得资助的提案都是那些讲述了最引人入胜的故事的。</p> <h4 id="为什么科学需要讲故事">为什么科学需要讲故事</h4> <p>科学影响公众生活和政策决策的能力正在成为一场危机。科学常被误解甚至歪曲，而科学家通常选择通过「陈述事实」与政策制定者交流，这种方法与游客试图用大声的英语与不懂英语的当地人交流并无不同。 <strong><u>科学写作的目标是将数据转化为理解</u></strong>，科学家的职责不仅是收集数据，还需要以清晰的方式呈现这些数据所蕴含的故事。论文中的数据只是配角，主角是你要解决的问题及其重要性。有效的科学传播需要故事化的表达，以更有吸引力的方式帮助读者和决策者理解。</p> <h4 id="从数据边界中发现新故事精雕细琢得到好的故事">从数据边界中发现新故事，精雕细琢得到好的故事</h4> <p><strong><u>探索数据边界往往能发现更重要的科学故事</u></strong>。例如，比尔·迪特里希在研究土壤深度与山坡陡度的关系时，关注了数据中的异常值，这些数据揭示了地质结构中的隐藏问题，并启发了新的研究方向。探索数据的极限虽然困难，但能带来全新的视角和发现。</p> <p>写作是一个从复杂到简单的过程。尽管最终呈现的是一个简洁的故事，但这一过程需要经历数据边界的探索和反复推敲。如果从一开始就强加一个简单的故事，你可能会忽略数据中的深刻含义。与数据进行深度对话不仅能找到答案，还能拓宽问题的背景，激发更深层次的思考。</p> <p>科学写作的最终目标是帮助读者理解复杂问题。通过认真聆听数据，科学家能够发掘其中潜藏的故事。而在撰写过程中，反复修改不仅会打磨文字，还能促进科学家自身的思考能力和学术成长。因此，与其急于发表论文，不如花时间思考和写作，让论文讲述一个有意义的故事。一个好的故事可以开启职业生涯，而平庸的故事只能让人湮没在人群中。</p> <h4 id="科学写作的三个关键要素">科学写作的三个关键要素</h4> <ul> <li>内容：什么样的故事吸引人且令人难忘？</li> <li>结构：如何组织内容，使其更易于理解？</li> <li>语言：怎样用引人入胜的表达形式编写故事？</li> </ul> <p>这三个要素构成了科学写作的基础。当科学家认识到写论文就是讲故事，他们不仅会成为更好的作家，还会成为更出色的科学家。</p> <h2 id="making-a-story-sticky">Making a Story Sticky</h2> <h6 id="让故事黏住人心一个黏性想法更有可能产生影响"><i>让故事「黏住人心」，一个「黏性」想法更有可能产生影响。</i></h6> <p>评价一个故事是否成功，关键是问自己：这个故事让我记住了多久？</p> <p>有些故事在阅读时吸引人，但转眼就被遗忘，比如飞机上的轻松读物。有些故事却能在心中扎根，甚至成为世代相传的经典。在科学领域，我们的目标是撰写能够经久不衰的论文——那些能引发长期引用的「长效」论文。正如有人形容，一篇好论文「有腿」，可以跨越时间依然保持影响力。</p> <hr/> <h4 id="为什么有些想法更有黏性">为什么有些想法更有「黏性」</h4> <p>在《让创意更有粘性》（Made to Stick）一书中，奇普·希思和丹·希思提出了一个关键问题：为什么有些想法令人难忘，而另一些则转瞬即逝？他们总结了让想法具有「黏性」的六大要素，并用记忆口诀「SUCCES」归纳：</p> <ul> <li>S：简单（Simple）：好的想法不需要复杂难懂，而是清晰明了。一句话的核心思想比长篇大论更能触动人心。</li> <li>U：意外（Unexpected）：出人意料的元素能打破常规认知，激发好奇心。例如，科学发现中的反直觉现象往往能吸引更多的关注。</li> <li>C：具体（Concrete）：抽象的概念难以引发共鸣，而具体的例子和细节则能让人更容易理解和记住。</li> <li>C：可信（Credible）通过数据、权威引用或亲身经历，增强故事的说服力，使其令人信服。</li> <li>E：情感（Emotional）：引发情感共鸣是让人记住故事的强大武器。即使在科学写作中，也可以通过与人类福祉相关的主题触动读者的情感。</li> <li>S：故事（Stories）：最后，故事本身就是传播信息的最佳工具。通过叙事，将复杂的科学问题转化为读者容易吸收的形式。</li> </ul>]]></content><author><name></name></author><category term="Writing"/><category term="AcademicWriting"/><category term="Clarity"/><category term="Expression"/><summary type="html"><![CDATA[摘录自「Writing science - Joshua Schime」]]></summary></entry><entry><title type="html">可以多认识人，但要少交朋友</title><link href="https://waynexucn.github.io//blog/2023/%E9%9A%8F%E7%AC%94%E5%8F%AF%E4%BB%A5%E5%A4%9A%E8%AE%A4%E8%AF%86%E4%BA%BA-%E4%BD%86%E8%A6%81%E5%B0%91%E4%BA%A4%E6%9C%8B%E5%8F%8B/" rel="alternate" type="text/html" title="可以多认识人，但要少交朋友"/><published>2023-07-05T18:02:00+00:00</published><updated>2023-07-05T18:02:00+00:00</updated><id>https://waynexucn.github.io//blog/2023/%E9%9A%8F%E7%AC%94%E5%8F%AF%E4%BB%A5%E5%A4%9A%E8%AE%A4%E8%AF%86%E4%BA%BA%EF%BC%8C%E4%BD%86%E8%A6%81%E5%B0%91%E4%BA%A4%E6%9C%8B%E5%8F%8B</id><content type="html" xml:base="https://waynexucn.github.io//blog/2023/%E9%9A%8F%E7%AC%94%E5%8F%AF%E4%BB%A5%E5%A4%9A%E8%AE%A4%E8%AF%86%E4%BA%BA-%E4%BD%86%E8%A6%81%E5%B0%91%E4%BA%A4%E6%9C%8B%E5%8F%8B/"><![CDATA[<p>可以多认识人，但要少交朋友。</p> <p>现在的人总喜欢把关系走得很近，信奉「多一个朋友多一条路」。近年接触的同龄人，在认识有社会价值地位的「大人物」后，会尝试热情交流，会尽量「约会拜访」，会竭力把关系走近，希望短期内就成为关系「亲近的朋友」。</p> <p>但是，人际关系本身就是阶段性的，必然经历生疏、亲近、淡漠三个阶段。回顾人生，除亲人外，即使是曾经海誓山盟的情侣、两肋插刀的至交，最终也会归于平淡。一个有长远智慧的人要明白，过早的亲近、过热的亲密，是人际关系的毒药，难以为继、过犹不及。</p> <p>要学会慢热，学会把亲近的阶段后延。社交，是为了在关键时刻能够获得充足的支持，那么在自己充分成长，人生的关键机遇到来之前，要学会按耐自已交朋友的欲望，平时多展现自已的成长，在圈子里积累向上的「势」。等到时机到来，「携大势而起」，大多数人都愿意与你亲近，并不急于一时。</p> <p>要学会持久，学会把亲密的程度降低。朋友，本质是一种责任，其实是一种负担。那么自已要能够把握人际关系的热度，既是给他人一个舒适的交往距离，也是帮助自已更长久的维系这一份善意。</p>]]></content><author><name></name></author><category term="Life"/><category term="Thoughts"/><category term="Discussion"/><summary type="html"><![CDATA[闲言碎语]]></summary></entry><entry><title type="html">Windows 实用配置记录</title><link href="https://waynexucn.github.io//blog/2022/Windows%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/" rel="alternate" type="text/html" title="Windows 实用配置记录"/><published>2022-11-21T08:15:00+00:00</published><updated>2022-11-21T08:15:00+00:00</updated><id>https://waynexucn.github.io//blog/2022/Windows%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95</id><content type="html" xml:base="https://waynexucn.github.io//blog/2022/Windows%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"><![CDATA[<p>自己整理一下 Windows 系统软件配置和常见错误解决方案的记录，避免每次都要搜索。</p> <h2 id="右键菜单">右键菜单</h2> <ul> <li>桌面右键</li> </ul> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>计算机\HKEY_CLASSES_ROOT\Directory\Background\shell
</code></pre></div></div> <ul> <li>文件夹右键菜单</li> </ul> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>计算机\HKEY_CLASSES_ROOT\Directory\shell
计算机\HKEY_CLASSES_ROOT\Directory\shellex\ContextMenuHandlers
计算机\HKEY_CLASSES_ROOT\Folder\shell
计算机\HKEY_CLASSES_ROOT\Folder\shellex\ContextMenuHandlers
</code></pre></div></div> <ul> <li>文件右键菜单</li> </ul> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>计算机\HKEY_CLASSES_ROOT\*\shellex\ContextMenuHandlers
</code></pre></div></div> <h2 id="远程桌面">远程桌面</h2> <ul> <li>使用微软账号作为凭据登录远程桌面时，始终提示密码错误。可能由于微软账号密码修改后电脑未及时更新。可以用自己的这个账户权限执行一次 <code class="language-plaintext highlighter-rouge">winver</code> 查看系统版本，将微软账户密码刷新一下。</li> </ul> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">runas</span><span class="w"> </span><span class="nx">/u:MicrosoftAccount\wenjie.xu.cn</span><span class="err">@</span><span class="nx">outlook.com</span><span class="w"> </span><span class="nx">winver</span><span class="w">
</span></code></pre></div></div> <h2 id="系统功能">系统功能</h2> <ul> <li>使虚拟内存可以设置在非系统盘 (修复报错”由于启动计算机时出现了页面文件配置问题，Windows 在你的计算机上创建了一个临时页面文件”)</li> </ul> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">reg</span><span class="w"> </span><span class="nx">add</span><span class="w"> </span><span class="s2">"HKLM\System\CurrentControlSet\Control\Session Manager\Memory Management"</span><span class="w"> </span><span class="nx">/v</span><span class="w"> </span><span class="nx">PagefileOnOsVolume</span><span class="w"> </span><span class="nx">/t</span><span class="w"> </span><span class="nx">REG_DWORD</span><span class="w"> </span><span class="nx">/d</span><span class="w"> </span><span class="nx">0</span><span class="w"> </span><span class="nx">/f</span><span class="w">
</span></code></pre></div></div> <ul> <li>将每个资源管理器窗口作为独立的实例以提高稳定性</li> </ul> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">reg</span><span class="w"> </span><span class="nx">add</span><span class="w"> </span><span class="s2">"HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced"</span><span class="w"> </span><span class="nx">/v</span><span class="w"> </span><span class="nx">SeparateProcess</span><span class="w"> </span><span class="nx">/t</span><span class="w"> </span><span class="nx">REG_DWORD</span><span class="w"> </span><span class="nx">/d</span><span class="w"> </span><span class="nx">1</span><span class="w"> </span><span class="nx">/f</span><span class="w">
</span></code></pre></div></div> <ul> <li>不要将驱动程序和内核模式系统代码放进虚拟内存（可能解决一些诡异的驱动稳定性问题）</li> </ul> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">reg</span><span class="w"> </span><span class="nx">add</span><span class="w"> </span><span class="s2">"HKLM\System\CurrentControlSet\Control\Session Manager\Memory Management"</span><span class="w"> </span><span class="nx">/v</span><span class="w"> </span><span class="nx">DisablePagingExecutive</span><span class="w"> </span><span class="nx">/t</span><span class="w"> </span><span class="nx">REG_D</span><span class="w">
</span></code></pre></div></div> <h2 id="系统界面">系统界面</h2> <ul> <li>桌面、资源管理器等的字体缩放异常且无法通在设置中恢复，修改注册表重置缩放</li> </ul> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Windows</span><span class="w"> </span><span class="nx">Registry</span><span class="w"> </span><span class="nx">Editor</span><span class="w"> </span><span class="nx">Version</span><span class="w"> </span><span class="nx">5.00</span><span class="w">

</span><span class="p">[</span><span class="n">HKEY_CURRENT_USER\Control</span><span class="w"> </span><span class="nx">Panel\Desktop\WindowMetrics</span><span class="p">]</span><span class="w">
</span><span class="s2">"IconTitleWrap"</span><span class="o">=</span><span class="s2">"1"</span><span class="w">
</span><span class="s2">"Shell Icon Size"</span><span class="o">=</span><span class="s2">"32"</span><span class="w">
</span><span class="s2">"BorderWidth"</span><span class="o">=</span><span class="s2">"-15"</span><span class="w">
</span><span class="s2">"CaptionFont"</span><span class="o">=</span><span class="n">hex</span><span class="p">:</span><span class="n">f4</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">90</span><span class="p">,</span><span class="mi">01</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="n">\</span><span class="w">
  </span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">01</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">05</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">53</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">65</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">67</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">6f</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">65</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">20</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">55</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">49</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">\</span><span class="w">
  </span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="n">\</span><span class="w">
  </span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="w">
</span><span class="s2">"CaptionHeight"</span><span class="o">=</span><span class="s2">"-330"</span><span class="w">
</span><span class="s2">"CaptionWidth"</span><span class="o">=</span><span class="s2">"-330"</span><span class="w">
</span><span class="s2">"IconFont"</span><span class="o">=</span><span class="n">hex</span><span class="p">:</span><span class="n">f4</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">90</span><span class="p">,</span><span class="mi">01</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="n">\</span><span class="w">
  </span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">01</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">05</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">53</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">65</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">67</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">6f</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">65</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">20</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">55</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">49</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">\</span><span class="w">
  </span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="n">\</span><span class="w">
  </span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="w">
</span><span class="s2">"MenuFont"</span><span class="o">=</span><span class="n">hex</span><span class="p">:</span><span class="n">f4</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">90</span><span class="p">,</span><span class="mi">01</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="n">\</span><span class="w">
  </span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">01</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">05</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">53</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">65</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">67</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">6f</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">65</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">20</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">55</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">49</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">\</span><span class="w">
  </span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="n">\</span><span class="w">
  </span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="w">
</span><span class="s2">"MenuHeight"</span><span class="o">=</span><span class="s2">"-285"</span><span class="w">
</span><span class="s2">"MenuWidth"</span><span class="o">=</span><span class="s2">"-285"</span><span class="w">
</span><span class="s2">"MessageFont"</span><span class="o">=</span><span class="n">hex</span><span class="p">:</span><span class="n">f4</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">90</span><span class="p">,</span><span class="mi">01</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="n">\</span><span class="w">
  </span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">01</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">05</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">53</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">65</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">67</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">6f</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">65</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">20</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">55</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">49</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">\</span><span class="w">
  </span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="n">\</span><span class="w">
  </span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="w">
</span><span class="s2">"ScrollHeight"</span><span class="o">=</span><span class="s2">"-255"</span><span class="w">
</span><span class="s2">"ScrollWidth"</span><span class="o">=</span><span class="s2">"-255"</span><span class="w">
</span><span class="s2">"SmCaptionFont"</span><span class="o">=</span><span class="n">hex</span><span class="p">:</span><span class="n">f4</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">90</span><span class="p">,</span><span class="mi">01</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="n">\</span><span class="w">
  </span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">01</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">05</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">53</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">65</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">67</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">6f</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">65</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">20</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">55</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">49</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">\</span><span class="w">
  </span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="n">\</span><span class="w">
  </span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="w">
</span><span class="s2">"SmCaptionHeight"</span><span class="o">=</span><span class="s2">"-330"</span><span class="w">
</span><span class="s2">"SmCaptionWidth"</span><span class="o">=</span><span class="s2">"-330"</span><span class="w">
</span><span class="s2">"StatusFont"</span><span class="o">=</span><span class="n">hex</span><span class="p">:</span><span class="n">f4</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="n">ff</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">90</span><span class="p">,</span><span class="mi">01</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="n">\</span><span class="w">
  </span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">01</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">05</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">53</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">65</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">67</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">6f</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">65</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">20</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">55</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">49</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">\</span><span class="w">
  </span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="mi">00</span><span class="p">,</span><span class="n">\</span><span class="w">
  </span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="p">,</span><span class="nx">00</span><span class="w">
</span><span class="s2">"AppliedDPI"</span><span class="o">=</span><span class="n">dword</span><span class="p">:</span><span class="mi">00000060</span><span class="w">
</span><span class="s2">"PaddedBorderWidth"</span><span class="o">=</span><span class="s2">"-60"</span><span class="w">
</span><span class="s2">"IconSpacing"</span><span class="o">=</span><span class="s2">"-1125"</span><span class="w">
</span><span class="s2">"IconVerticalSpacing"</span><span class="o">=</span><span class="s2">"-1125"</span><span class="w">
</span><span class="s2">"MinAnimate"</span><span class="o">=</span><span class="s2">"0"</span><span class="w">
</span></code></pre></div></div> <h2 id="powershell-7">PowerShell 7</h2> <ol> <li>oh-my-posh 主题</li> </ol> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">oh-my-posh</span><span class="w"> </span><span class="nx">init</span><span class="w"> </span><span class="nx">pwsh</span><span class="w"> </span><span class="nt">--config</span><span class="w"> </span><span class="s2">"</span><span class="nv">$</span><span class="nn">env</span><span class="p">:</span><span class="nv">POSH_THEMES_PATH</span><span class="s2">\1_shell.omp.json"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Invoke-Expression</span><span class="w">
</span></code></pre></div></div>]]></content><author><name></name></author><category term="Tools"/><category term="Windows"/><category term="Configuration"/><summary type="html"><![CDATA[Windows 系统软件配置和常见错误解决方案的记录]]></summary></entry><entry><title type="html">Linux 实用配置记录</title><link href="https://waynexucn.github.io//blog/2022/Linux%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/" rel="alternate" type="text/html" title="Linux 实用配置记录"/><published>2022-10-14T19:36:53+00:00</published><updated>2022-10-14T19:36:53+00:00</updated><id>https://waynexucn.github.io//blog/2022/Linux%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95</id><content type="html" xml:base="https://waynexucn.github.io//blog/2022/Linux%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"><![CDATA[<h2 id="zsh-安装及配置">Zsh 安装及配置</h2> <ol> <li>安装 zsh</li> </ol> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install </span>zsh
</code></pre></div></div> <ol> <li>将 zsh 设置为默认 shell，这条命令会在下次登录时生</li> </ol> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 查看zsh的版本</span>
zsh <span class="nt">--version</span>
chsh <span class="nt">-s</span> <span class="si">$(</span>which zsh<span class="si">)</span>
</code></pre></div></div> <ol> <li>安装 Zimfw</li> </ol> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 查看当前shell</span>
<span class="nb">echo</span> <span class="nv">$SHELL</span>
<span class="c"># Install zim via curl</span>
curl <span class="nt">-fsSL</span> https://raw.githubusercontent.com/zimfw/install/master/install.zsh | zsh
<span class="nb">echo</span> <span class="nv">$ZSH</span>
</code></pre></div></div> <blockquote> <p>2025.02.16 使用 Zimfw 代替 Oh My Zsh，集成度和效率更高</p> </blockquote> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 备份 .zshrc</span>
<span class="nb">cp</span> ~/.zshrc ~/.zshrc.bak
<span class="c"># 移除 Oh My Zsh 的配置，打开 .zshrc 文件，删除或注释掉与 Oh My Zsh 相关的行</span>
<span class="c"># 清理 Oh My Zsh</span>
<span class="nb">rm</span> <span class="nt">-rf</span> ~/.oh-my-zsh
</code></pre></div></div> <ol> <li>通过编辑 <code class="language-plaintext highlighter-rouge">~/.zshrc</code> 文件来自定义 zim，并检查可以添加到 <code class="language-plaintext highlighter-rouge">~/.zimrc</code> 中的可用模块和主题。</li> </ol> <div class="language-ssh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">nano</span> ~/.zshrc
<span class="k">nano</span> ~/.zimrc
<span class="c1"># 更改各种配置</span>
<span class="k">source</span> ~/.zshrc
</code></pre></div></div> <ol> <li><code class="language-plaintext highlighter-rouge">.zimrc</code> 配置</li> </ol> <blockquote> <p>大部分 Oh My Zsh 需要手动配置的插件（如 compinit、SHARE_HISTORY、CORRECT 等）在 Zim 中已经默认启用 只需要手动添加需要的模块和主题，使用 <code class="language-plaintext highlighter-rouge">zimfw install</code> 即可自动安装</p> </blockquote> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># zoxide 模块不通过 zim 安装</span>
<span class="c"># curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh</span>

<span class="c"># 添加 powerlevel10k 模块</span>
zmodule romkatv/powerlevel10k

zimfw <span class="nb">install
</span>zimfw update
zimfw upgrade
</code></pre></div></div>]]></content><author><name></name></author><category term="Tools"/><category term="Linux"/><category term="Configuration"/><summary type="html"><![CDATA[Linux 系统软件配置和常见错误解决方案的记录]]></summary></entry><entry><title type="html">建立你的记录</title><link href="https://waynexucn.github.io//blog/2022/%E5%BB%BA%E7%AB%8B%E4%BD%A0%E7%9A%84%E8%AE%B0%E5%BD%95/" rel="alternate" type="text/html" title="建立你的记录"/><published>2022-09-01T12:00:00+00:00</published><updated>2022-09-01T12:00:00+00:00</updated><id>https://waynexucn.github.io//blog/2022/%E5%BB%BA%E7%AB%8B%E4%BD%A0%E7%9A%84%E8%AE%B0%E5%BD%95</id><content type="html" xml:base="https://waynexucn.github.io//blog/2022/%E5%BB%BA%E7%AB%8B%E4%BD%A0%E7%9A%84%E8%AE%B0%E5%BD%95/"><![CDATA[<blockquote> <p>剪辑自<a href="https://mp.weixin.qq.com/s/8gvq--Hsb4dpIAHCleH-oQ">饶毅科学公众号</a></p> </blockquote> <p>在年轻的时候，建立好的记录非常重要。</p> <p>年老的人，人们难以误解，因为有很多记录。有人想造谣，无法得逞，因为你有记录。有人批评你某方面不够，但你有记录反驳或说明你还有其他方面的优点。</p> <p>越是年轻，经历越少，建立记录越重要。</p> <p>研究生是你进入半工作状态的第一步。还有考试，但不那么重要。而更重要的是记录。</p> <p><strong>你的记录，是你逐渐积累的事业、人生。</strong></p> <p>怎么留下记录？</p> <p>一：<strong>用科研笔记本记录你的科学想法</strong>、实验设计、实验结果、实验分析、研究结论，包括反反复复记录自己的错误、纠错过程等等。 几十年后，你可以从在笔记本上，看自己怎么从热情幼稚的研究生，从经常遇到各种困难需要求教的年轻人，逐渐成为独立的、成熟的科学家。</p> <p>二：<strong>用你的言行在其他人那里留下人们对你的记录</strong>。你对科学是否有热情、悟性，对同学是否热心、友好，与老师是否能够建立科学的交流…你的同学、同事、老师都会有记录，没有印象也是一种记录。</p> <p><strong>几十年后，还有人按照自己脑海对你的记录而评价、回顾你。</strong></p> <p>对于记录，最值得你们学习的是从我们江西出发的中国工农红军</p> <p>1927 年到 1934 年，没多少人能够预计红军以后的成功。江西以外，有很多割据一方的军阀，红军的物质资源远不如一些大军阀。但红军有崇高的理想、全国性的组织、高度的自信。</p> <p>1934 年，红军被迫离开江西，进行后来称之为长征，一路不能带很多东西，只能是战略必需品。 在他们认为不能丢的物品中，有一项很特别：他们之间发的电报。</p> <p>在看完电报后、在电报相关的信息已经落实后，为什么不能丢掉电报、减轻担子里挑的东西？装食物、装枪、装子弹，或就减轻行军途中的压力？</p> <p>他们说，以后我们要查电报，看历史。</p> <p>红军队伍三十岁以上的人没多少，主要是二十几岁以及更年轻的。长征路上，缺乏理想、没有信心就会离开队伍。但是，这批年轻人中，有一些对自己有非常高的自尊、自信，认为自己在创造中国历史。</p> <p>他们保留电报，是因为他们对自己的未来充满信心，即使当时情况险恶。</p> <p>事实证明，认为自己记录很重要，需要好好保存的这些年轻的红军，创造了中国的历史，也影响了世界的历史。</p> <p>希望年轻的学生们，通过自己的科学笔记和言行，建立自己的记录、建立他人对自己的记录。</p> <hr/> <p>附：2021 年 8 月 2 日</p> <p>一直建议学生保留记录，不是为他人，是为学生自己：最关心自己历史的只可能是自己。</p> <p>最近，我读研究生的旧金山加州大学 Jan Lab 室有张照片，冰箱里面有以前在实验室待过的人的实验用品，有一个盒子标记是我，1991（离开时间）。</p> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/%E5%BB%BA%E7%AB%8B%E4%BD%A0%E7%9A%84%E8%AE%B0%E5%BD%95_1.png" alt="Image-1" style="zoom: 33%;"/></p> <p>我估计是 DNA。那时 DNA 是宝贝，克隆一个基因是我在美国六年研究生的主体工作（此前，我在上海还有两年研究生，八年期间从未觉得时间长)</p> <p>这种基因克隆到现在也不是靠 PCR 就可以，而是需要根据果蝇表型，找到突变所在的 DNA。得到之后，再把正常的 DNA 重新引入突变果蝇，能够救活突变的果蝇。整个过程类似找到病人有突变的 DNA，再用正常 DNA 重新引入病人体内进行基因治疗，证明这段 DNA 确实携带与疾病由因果关系的基因（这是类别，当时无法对人这样做，对果蝇可以)。</p> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/%E5%BB%BA%E7%AB%8B%E4%BD%A0%E7%9A%84%E8%AE%B0%E5%BD%95_2.png" alt="Image-2" style="zoom: 33%;"/></p> <p>显示一段 DNA，两个独立的转座子插入突变，三个小段缺失突变。PWB 是用于“基因治疗」的片段，通过转座子引入果蝇，并证明可以治疗突变的表型。</p> <p>这样一想，在 1980 年代从克隆基因到再引入基因进行“基因治疗“全过程都做过的中国留学生，有可能不超过十人。当时在高等动物（老鼠、人）一般都只做一半（克隆基因、或者转基因）。做人的基因治疗的研究者，一般没有做过克隆基因。做克隆基因的研究者，一般不做基因治疗。因为克隆和“治疗」两步都很麻烦，当时一般只做一步。</p> <p>研究低等动物的，如果蝇和线虫，我们都是两步都做。</p> <p>但那时中国学生做果蝇和线虫的几个人，可以数的出来，从头到尾都做过的，应该就在这些人里面。当然，今天在人类适用的基因治疗方法与果蝇的方法不同，但概念一样，技术的原理一样，只是具体载体和基因不同。</p> <p>记录不容易保留全。我可能有全部的成绩报告单。小学是四年级最后一个学期从父母下放的公社（清江县的刘公庙，现在可能叫樟树市的刘公庙）转到南昌。之后有成绩单。可能在农村的时候没有成绩单，只有某种报告。留下早期成绩单，可能是母亲。后来可能我也保留，所以一直到美国的研究生成绩单都有。</p> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/%E5%BB%BA%E7%AB%8B%E4%BD%A0%E7%9A%84%E8%AE%B0%E5%BD%95_3.png" alt="Image-3" style="zoom: 33%;"/></p> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/%E5%BB%BA%E7%AB%8B%E4%BD%A0%E7%9A%84%E8%AE%B0%E5%BD%95_4.png" alt="Image-4" style="zoom: 33%;"/></p> <p>在以前搬动的时候，主要的物品带着。</p> <p>不幸的是，回北大的十四年搬了五个实验室，期间终于出现了遗失的问题。</p> <p>我回中国的 2007 年，北大给的实验室很小（实验空间加办公室为 60 平方米），我就只好继续用北京生命科学研究所的实验室。为了北大生命科学的招聘，那时还不能暴露空间有限的问题，只能逐渐解决。</p> <p>有几年每天来回（一般是上午北大办公，下午北生所实验室）。在北大几年后有一百多平方米的实验室，但两间分别在楼道的两段，其中一间紧邻洗手间，不是非常好工作。</p> <p>卸任院长后，空间改善，先是新的综合科研楼，后是王克帧楼。到王克帧楼，实验室空间终于足够了。</p> <p>我花了较大气力，各种办法扩大北大校本部的生命科学空间。其中一个方法是分布在不同方面，不都在生命科学学院，因为如果几个空间都在生科院会难以得到学校一再支持。</p> <p>空间方面最大的工作是新建生命科学科研楼（后称吕志和楼），2009 年得到学校同意，历经各种…，于 2019 年 4 月 12 日，我自己的实验室也搬进新楼，空间问题完全解决。</p> <p>因为是在生命科学学院/学科空间解决之后，所以称之为“后生命科学之乐而乐」。</p> <p>不能排除我的办公室是全北大风景最好的可能性。</p> <p>这是今天的记录，暑假研究的好时光。</p>]]></content><author><name></name></author><category term="Productivity"/><category term="Discussion"/><category term="Methodology"/><summary type="html"><![CDATA[剪辑自「饶毅科学公众号」]]></summary></entry><entry><title type="html">中文文案排版指南</title><link href="https://waynexucn.github.io//blog/2022/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%88%E6%8E%92%E7%89%88%E6%8C%87%E5%8D%97/" rel="alternate" type="text/html" title="中文文案排版指南"/><published>2022-04-27T12:00:00+00:00</published><updated>2022-04-27T12:00:00+00:00</updated><id>https://waynexucn.github.io//blog/2022/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%88%E6%8E%92%E7%89%88%E6%8C%87%E5%8D%97</id><content type="html" xml:base="https://waynexucn.github.io//blog/2022/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%88%E6%8E%92%E7%89%88%E6%8C%87%E5%8D%97/"><![CDATA[<blockquote> <p>转载自<a href="https://github.com/sparanoid/chinese-copywriting-guidelines">sparanoid/chinese-copywriting-guidelines</a></p> </blockquote> <p>统一中文文案、排版的相关用法，降低团队成员之间的沟通成本，增强网站气质。</p> <hr/> <h2 id="空格">空格</h2> <blockquote> <p>「有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34 岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。</p> <p>与大家共勉之。」——<a href="https://github.com/vinta/pangu.js">vinta/paranoid-auto-spacing</a></p> </blockquote> <h3 id="中英文之间需要增加空格">中英文之间需要增加空格</h3> <p>正确：</p> <blockquote> <p>在 LeanCloud 上，数据存储是围绕 <code class="language-plaintext highlighter-rouge">AVObject</code> 进行的。</p> </blockquote> <p>错误：</p> <blockquote> <p>在 LeanCloud 上，数据存储是围绕<code class="language-plaintext highlighter-rouge">AVObject</code>进行的。</p> <p>在 LeanCloud 上，数据存储是围绕<code class="language-plaintext highlighter-rouge">AVObject</code> 进行的。</p> </blockquote> <p>完整的正确用法：</p> <blockquote> <p>在 LeanCloud 上，数据存储是围绕 <code class="language-plaintext highlighter-rouge">AVObject</code> 进行的。每个 <code class="language-plaintext highlighter-rouge">AVObject</code> 都包含了与 JSON 兼容的 key-value 对应的数据。数据是 schema-free 的，你不需要在每个 <code class="language-plaintext highlighter-rouge">AVObject</code> 上提前指定存在哪些键，只要直接设定对应的 key-value 即可。</p> </blockquote> <p>例外：「豆瓣 FM」等产品名词，按照官方所定义的格式书写。</p> <h3 id="中文与数字之间需要增加空格">中文与数字之间需要增加空格</h3> <p>正确：</p> <blockquote> <p>今天出去买菜花了 5000 元。</p> </blockquote> <p>错误：</p> <blockquote> <p>今天出去买菜花了 5000 元。</p> <p>今天出去买菜花了 5000 元。</p> </blockquote> <h3 id="数字与单位之间需要增加空格">数字与单位之间需要增加空格</h3> <p>正确：</p> <blockquote> <p>我家的光纤入屋宽带有 10 Gbps，SSD 一共有 20 TB</p> </blockquote> <p>错误：</p> <blockquote> <p>我家的光纤入屋宽带有 10Gbps，SSD 一共有 20TB</p> </blockquote> <p>例外：度数／百分比与数字之间不需要增加空格：</p> <p>正确：</p> <blockquote> <p>角度为 90° 的角，就是直角。</p> <p>新 MacBook Pro 有 15% 的 CPU 性能提升。</p> </blockquote> <p>错误：</p> <blockquote> <p>角度为 90 ° 的角，就是直角。</p> <p>新 MacBook Pro 有 15 % 的 CPU 性能提升。</p> </blockquote> <h3 id="全角标点与其他字符之间不加空格">全角标点与其他字符之间不加空格</h3> <p>正确：</p> <blockquote> <p>刚刚买了一部 iPhone，好开心！</p> </blockquote> <p>错误：</p> <blockquote> <p>刚刚买了一部 iPhone，好开心！</p> <p>刚刚买了一部 iPhone，好开心！</p> </blockquote> <h3 id="用-text-spacing-来挽救">用 <code class="language-plaintext highlighter-rouge">text-spacing</code> 来挽救？</h3> <p>CSS Text Module Level 4 的 <a href="https://www.w3.org/TR/css-text-4/#text-spacing-property"><code class="language-plaintext highlighter-rouge">text-spacing</code></a> 和 Microsoft 的 <a href="https://msdn.microsoft.com/library/ms531164(v=vs.85).aspx"><code class="language-plaintext highlighter-rouge">-ms-text-autospace</code></a> 可以实现自动为中英文之间增加空白。不过目前并未普及，另外在其他应用场景，例如 macOS、iOS、Windows 等用户界面目前并不存在这个特性，所以请继续保持随手加空格的习惯。</p> <h2 id="标点符号">标点符号</h2> <h3 id="不重复使用标点符号">不重复使用标点符号</h3> <p>虽然中国大陆的标点符号用法允许重复使用标点符号，但是这么做会破坏句子的美观性。</p> <p>正确：</p> <blockquote> <p>德国队竟然战胜了巴西队！</p> <p>她竟然对你说「喵」？！</p> </blockquote> <p>错误：</p> <blockquote> <p>德国队竟然战胜了巴西队！！</p> <p>德国队竟然战胜了巴西队！！！！！！！！</p> <p>她竟然对你说「喵」？？！！</p> <p>她竟然对你说「喵」？！？！？？！！</p> </blockquote> <h2 id="全角和半角">全角和半角</h2> <p>不明白什么是全角（全形）与半角（半形）符号？请查看维基百科条目『<a href="https://zh.wikipedia.org/wiki/%E5%85%A8%E5%BD%A2%E5%92%8C%E5%8D%8A%E5%BD%A2">全角和半角</a>』。</p> <h3 id="使用全角中文标点">使用全角中文标点</h3> <p>正确：</p> <blockquote> <p>嗨！你知道嘛？今天前台的小妹跟我说「喵」了哎！</p> <p>核磁共振成像（NMRI）是什么原理都不知道？JFGI！</p> </blockquote> <p>错误：</p> <blockquote> <p>嗨！你知道嘛？今天前台的小妹跟我说 “喵” 了哎！</p> <p>嗨！你知道嘛？今天前台的小妹跟我说”喵”了哎！</p> <p>核磁共振成像 (NMRI) 是什么原理都不知道？JFGI!</p> <p>核磁共振成像 (NMRI) 是什么原理都不知道？JFGI!</p> </blockquote> <p>例外：中文句子内夹有英文书籍名、报刊名时，不应借用中文书名号，应以英文斜体表示。</p> <h3 id="数字使用半角字符">数字使用半角字符</h3> <p>正确：</p> <blockquote> <p>这个蛋糕只卖 1000 元。</p> </blockquote> <p>错误：</p> <blockquote> <p>这个蛋糕只卖 1000 元。</p> </blockquote> <p>例外：在设计稿、宣传海报中如出现极少量数字的情形时，为方便文字对齐，是可以使用全角数字的。</p> <h3 id="遇到完整的英文整句特殊名词其内容使用半角标点">遇到完整的英文整句、特殊名词，其内容使用半角标点</h3> <p>正确：</p> <blockquote> <p>乔布斯那句话是怎么说的？「Stay hungry, stay foolish.」</p> <p>推荐你阅读 <em>Hackers &amp; Painters: Big Ideas from the Computer Age</em>，非常地有趣。</p> </blockquote> <p>错误：</p> <blockquote> <p>乔布斯那句话是怎么说的？「Stay hungry，stay foolish。」</p> <p>推荐你阅读《Hackers＆Painters：Big Ideas from the Computer Age》，非常的有趣。</p> </blockquote> <h2 id="名词">名词</h2> <h3 id="专有名词使用正确的大小写">专有名词使用正确的大小写</h3> <p>大小写相关用法原属于英文书写范畴，不属于本 wiki 讨论内容，在这里只对部分易错用法进行简述。</p> <p>正确：</p> <blockquote> <p>使用 GitHub 登录</p> <p>我们的客户有 GitHub、Foursquare、Microsoft Corporation、Google、Facebook, Inc.。</p> </blockquote> <p>错误：</p> <blockquote> <p>使用 github 登录</p> <p>使用 GITHUB 登录</p> <p>使用 Github 登录</p> <p>使用 gitHub 登录</p> <p>使用 g ｲんĤЦ8 登录</p> <p>我们的客户有 github、foursquare、microsoft corporation、google、facebook, inc.。</p> <p>我们的客户有 GITHUB、FOURSQUARE、MICROSOFT CORPORATION、GOOGLE、FACEBOOK, INC.。</p> <p>我们的客户有 Github、FourSquare、MicroSoft Corporation、Google、FaceBook, Inc.。</p> <p>我们的客户有 gitHub、fourSquare、microSoft Corporation、google、faceBook, Inc.。</p> <p>我们的客户有 g ｲんĤЦ8、ｷ ouЯƧqu ﾑгє、๓เςг๏ร๏Ŧt ς๏гק๏гคtเ๏ภn、900913、ƒ4 ᄃëв๏๏к, IПᄃ.。</p> </blockquote> <p>注意：当网页中需要配合整体视觉风格而出现全部大写／小写的情形，HTML 中请使用标淮的大小写规范进行书写；并通过 <code class="language-plaintext highlighter-rouge">text-transform: uppercase;</code>／<code class="language-plaintext highlighter-rouge">text-transform: lowercase;</code> 对表现形式进行定义。</p> <h3 id="不要使用不地道的缩写">不要使用不地道的缩写</h3> <p>正确：</p> <blockquote> <p>我们需要一位熟悉 TypeScript、HTML5，至少理解一种框架（如 React、Next.js）的前端开发者。</p> </blockquote> <p>错误：</p> <blockquote> <p>我们需要一位熟悉 Ts、h5，至少理解一种框架（如 RJS、nextjs）的 FED。</p> </blockquote> <h2 id="争议">争议</h2> <p>以下用法略带有个人色彩，即：无论是否遵循下述规则，从语法的角度来讲都是<strong>正确</strong>的。</p> <h3 id="链接之间增加空格">链接之间增加空格</h3> <p>用法：</p> <blockquote> <p>请 <a href="#">提交一个 issue</a> 并分配给相关同事。</p> <p>访问我们网站的最新动态，请 <a href="#">点击这里</a> 进行订阅！</p> </blockquote> <p>对比用法：</p> <blockquote> <p>请<a href="#">提交一个 issue</a>并分配给相关同事。</p> <p>访问我们网站的最新动态，请<a href="#">点击这里</a>进行订阅！</p> </blockquote> <h3 id="简体中文使用直角引号">简体中文使用直角引号</h3> <p>用法：</p> <blockquote> <p>「老师，『有条不紊』的『紊』是什么意思？」</p> </blockquote> <p>对比用法：</p> <blockquote> <p>“老师，‘有条不紊’的‘紊’是什么意思？”</p> </blockquote> <h2 id="工具">工具</h2> <table> <thead> <tr> <th>仓库</th> <th>系列</th> <th>语言</th> </tr> </thead> <tbody> <tr> <td><a href="https://github.com/vinta/pangu.js">pangu.js</a></td> <td>pangu</td> <td>JavaScript</td> </tr> <tr> <td><a href="https://github.com/vinta/pangu">pangu-go</a></td> <td>pangu</td> <td>Go</td> </tr> <tr> <td><a href="https://github.com/vinta/pangu.java">pangu.java</a></td> <td>pangu</td> <td>Java</td> </tr> <tr> <td><a href="https://github.com/vinta/pangu.py">pangu.py</a></td> <td>pangu</td> <td>Python</td> </tr> <tr> <td><a href="https://github.com/dlackty/pangu.rb">pangu.rb</a></td> <td>pangu</td> <td>Ruby</td> </tr> <tr> <td><a href="https://github.com/cchlorine/pangu.php">pangu.php</a></td> <td>pangu</td> <td>PHP</td> </tr> <tr> <td><a href="https://github.com/hotoo/pangu.vim">pangu.vim</a></td> <td>pangu</td> <td>Vim</td> </tr> <tr> <td><a href="https://github.com/serkodev/vue-pangu">vue-pangu</a></td> <td>pangu</td> <td>Vue.js (Web Converter)</td> </tr> <tr> <td><a href="https://plugins.jetbrains.com/plugin/19665-pangu">intellij-pangu</a></td> <td>pangu</td> <td>Intellij Platform Plugin</td> </tr> <tr> <td><a href="https://github.com/huacnlee/autocorrect">autocorrect</a></td> <td>autocorrect</td> <td>Rust, WASM, CLI tool</td> </tr> <tr> <td><a href="https://github.com/huacnlee/autocorrect/tree/main/autocorrect-node">autocorrect-node</a></td> <td>autocorrect</td> <td>Node.js</td> </tr> <tr> <td><a href="https://github.com/huacnlee/autocorrect/tree/main/autocorrect-py">autocorrect-py</a></td> <td>autocorrect</td> <td>Python</td> </tr> <tr> <td><a href="https://github.com/huacnlee/autocorrect/tree/main/autocorrect-rb">autocorrect-rb</a></td> <td>autocorrect</td> <td>Ruby</td> </tr> <tr> <td><a href="https://github.com/huacnlee/autocorrect/tree/main/autocorrect-java">autocorrect-java</a></td> <td>autocorrect</td> <td>Java</td> </tr> <tr> <td><a href="https://github.com/longbridgeapp/autocorrect">autocorrect-go</a></td> <td>autocorrect</td> <td>Go</td> </tr> <tr> <td><a href="https://github.com/NauxLiu/auto-correct">autocorrect-php</a></td> <td>autocorrect</td> <td>PHP</td> </tr> <tr> <td><a href="https://marketplace.visualstudio.com/items?itemName=huacnlee.autocorrect">autocorrect-vscode</a></td> <td>autocorrect</td> <td>VS Code Extension</td> </tr> <tr> <td><a href="https://plugins.jetbrains.com/plugin/20244-autocorrect">autocorrect-idea-plugin</a></td> <td>autocorrect</td> <td>Intellij Platform Plugin</td> </tr> <tr> <td><a href="https://github.com/jxlwqq/chinese-typesetting">jxlwqq/chinese-typesetting</a></td> <td>other</td> <td>PHP</td> </tr> <tr> <td><a href="https://github.com/sparanoid/space-lover">sparanoid/space-lover</a></td> <td>other</td> <td>PHP (WordPress)</td> </tr> <tr> <td><a href="https://github.com/sparanoid/grunt-auto-spacing">sparanoid/grunt-auto-spacing</a></td> <td>other</td> <td>Node.js (Grunt)</td> </tr> <tr> <td><a href="https://github.com/hjiang/scripts/blob/master/add-space-between-latin-and-cjk">hjiang/scripts/add-space-between-latin-and-cjk</a></td> <td>other</td> <td>Python</td> </tr> <tr> <td><a href="https://github.com/hustcc/hint">hustcc/hint</a></td> <td>other</td> <td>Python</td> </tr> <tr> <td><a href="https://github.com/n0vad3v/Tekorrect">n0vad3v/Tekorrect</a></td> <td>other</td> <td>Python</td> </tr> </tbody> </table> <h2 id="谁在这样做">谁在这样做？</h2> <table> <thead> <tr> <th>网站</th> <th>文案</th> <th>UGC</th> </tr> </thead> <tbody> <tr> <td><a href="https://www.apple.com/cn/">Apple 中国</a></td> <td>是</td> <td>N/A</td> </tr> <tr> <td><a href="https://www.apple.com/hk/">Apple 香港</a></td> <td>是</td> <td>N/A</td> </tr> <tr> <td><a href="https://www.apple.com/tw/">Apple 台湾</a></td> <td>是</td> <td>N/A</td> </tr> <tr> <td><a href="https://www.microsoft.com/zh-cn/">Microsoft 中国</a></td> <td>是</td> <td>N/A</td> </tr> <tr> <td><a href="https://www.microsoft.com/zh-hk/">Microsoft 香港</a></td> <td>是</td> <td>N/A</td> </tr> <tr> <td><a href="https://www.microsoft.com/zh-tw/">Microsoft 台湾</a></td> <td>是</td> <td>N/A</td> </tr> <tr> <td><a href="https://leancloud.cn/">LeanCloud</a></td> <td>是</td> <td>N/A</td> </tr> <tr> <td><a href="https://www.v2ex.com/">V2EX</a></td> <td>是</td> <td>是</td> </tr> <tr> <td><a href="https://apple4us.com/">Apple4us</a></td> <td>是</td> <td>N/A</td> </tr> <tr> <td><a href="https://ruby-china.org/">Ruby China</a></td> <td>是</td> <td>是</td> </tr> <tr> <td><a href="https://sspai.com/">少数派</a></td> <td>是</td> <td>N/A</td> </tr> </tbody> </table> <h2 id="参考文献">参考文献</h2> <ul> <li><a href="https://www.thoughtco.com/guidelines-for-using-capital-letters-1691724">Guidelines for Using Capital Letters - ThoughtCo.</a></li> <li><a href="https://en.wikipedia.org/wiki/Letter_case">Letter case - Wikipedia</a></li> <li><a href="https://en.oxforddictionaries.com/grammar/punctuation">Punctuation - Oxford Dictionaries</a></li> <li><a href="https://owl.english.purdue.edu/owl/section/1/6/">Punctuation - The Purdue OWL</a></li> <li><a href="https://www.wikihow.com/Use-English-Punctuation-Correctly">How to Use English Punctuation Correctly - wikiHow</a></li> <li><a href="https://zh.wikipedia.org/wiki/%E5%85%A8%E5%BD%A2%E5%92%8C%E5%8D%8A%E5%BD%A2">全形和半形 - 维基百科</a></li> <li><a href="https://zh.wikipedia.org/wiki/%E5%BC%95%E8%99%9F">引号 - 维基百科</a></li> <li><a href="https://zh.wikipedia.org/wiki/%E7%96%91%E5%95%8F%E9%A9%9A%E5%98%86%E8%99%9F">疑问惊叹号 - 维基百科</a></li> </ul>]]></content><author><name></name></author><category term="Writing"/><category term="Typesetting"/><category term="Chinese"/><summary type="html"><![CDATA[中文文案排版指南，用于提升书面沟通效果]]></summary></entry><entry><title type="html">Python 高级用法记录</title><link href="https://waynexucn.github.io//blog/2022/Python%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95%E8%AE%B0%E5%BD%95/" rel="alternate" type="text/html" title="Python 高级用法记录"/><published>2022-02-21T15:12:00+00:00</published><updated>2022-02-21T15:12:00+00:00</updated><id>https://waynexucn.github.io//blog/2022/Python%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95%E8%AE%B0%E5%BD%95</id><content type="html" xml:base="https://waynexucn.github.io//blog/2022/Python%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95%E8%AE%B0%E5%BD%95/"><![CDATA[<p>优雅的 Python 代码，高级的使用技巧</p> <h1 id="小技巧">小技巧</h1> <ul> <li>省略号<code class="language-plaintext highlighter-rouge">…</code>可以代替<code class="language-plaintext highlighter-rouge"> pass</code>，同时还是 Numpy 的一个语法糖</li> </ul> <pre><code class="language-Python"># ...也是一个Python对象
def func():
    ...

def func():
    pass

</code></pre> <ul> <li><code class="language-plaintext highlighter-rouge">sum()</code>函数计算可迭代对象（例如列表、元组或集合）中所有数值的总和，还可以连接多个列表。</li> </ul> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nc">Sum</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">start</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># 提供可选的 start 参数，以将数字添加到总和
</span><span class="mi">13</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nf">sum</span><span class="p">((</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">),</span> <span class="p">[])</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
</code></pre></div></div> <ul> <li>用<code class="language-plaintext highlighter-rouge">_</code>辅助标识，可以使大数变得更易于阅读</li> </ul> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">number</span><span class="o">=</span><span class="mi">123_456_789</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">number</span>
<span class="mi">281028344</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="Code"/><category term="Python"/><category term="AdvancedTips"/><summary type="html"><![CDATA[优雅的 Python]]></summary></entry><entry><title type="html">一份简明的 Markdown 笔记与教程</title><link href="https://waynexucn.github.io//blog/2021/MakdownIntro/" rel="alternate" type="text/html" title="一份简明的 Markdown 笔记与教程"/><published>2021-12-17T22:18:00+00:00</published><updated>2021-12-17T22:18:00+00:00</updated><id>https://waynexucn.github.io//blog/2021/MakdownIntro</id><content type="html" xml:base="https://waynexucn.github.io//blog/2021/MakdownIntro/"><![CDATA[<blockquote> <p>转载自 <a href="https://github.com/mzlogin/markdown-intro">mzlogin/markdown-intro</a></p> </blockquote> <blockquote> <p>Markdown 是一种轻量级标记语言，创始人为 John Gruber。它允许人们「使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML（或者 HTML）文档」。——维基百科</p> </blockquote> <p>本文档的目的不在于面面俱到地介绍 Markdown，只希望能同时帮助一些对 Markdown 感兴趣的人快速上手，或是作为一个工具，供对其已经有所了解的人在需要时参考。</p> <ul> <li><a href="#背景">背景</a> <ul> <li><a href="#优点">优点</a></li> <li><a href="#使用场景">使用场景</a></li> <li><a href="#编辑工具">编辑工具</a></li> </ul> </li> <li><a href="#语法">语法</a> <ul> <li><a href="#标题">标题</a></li> <li><a href="#段落">段落</a></li> <li><a href="#行内格式">行内格式</a></li> <li><a href="#引用块">引用块</a></li> <li><a href="#超链接">超链接</a></li> <li><a href="#图片">图片</a></li> <li><a href="#列表">列表</a></li> <li><a href="#代码块">代码块</a></li> <li><a href="#水平分割线">水平分割线</a></li> <li><a href="#嵌入-html">嵌入 HTML</a></li> </ul> </li> <li><a href="#扩展语法">扩展语法</a> <ul> <li><a href="#表格">表格</a></li> <li><a href="#任务列表">任务列表</a></li> <li><a href="#删除线">删除线</a></li> <li><a href="#自动链接">自动链接</a></li> <li><a href="#emoji">emoji</a></li> </ul> </li> <li><a href="#奇技淫巧">奇技淫巧</a> <ul> <li><a href="#画流程图和时序图">画流程图和时序图</a></li> <li><a href="#插入数学公式">插入数学公式</a></li> <li><a href="#用-markdown-做-ppt">用 Markdown 做 PPT</a></li> <li><a href="#用-markdown-写微信公众号">用 Markdown 写微信公众号</a></li> <li><a href="#更多">更多</a></li> </ul> </li> <li><a href="#参考">参考</a></li> </ul> <h2 id="背景">背景</h2> <h3 id="优点">优点</h3> <ol> <li> <p>专注于文字内容；</p> </li> <li> <p>纯文本，易读易写，可以方便地纳入版本控制；</p> </li> <li> <p>语法简单，没有什么学习成本，能轻松在码字的同时做出美观大方的排版。</p> </li> </ol> <h3 id="使用场景">使用场景</h3> <ul> <li> <p>各类代码托管平台</p> <p>主流的代码托管平台，如 GitHub、GitLab、BitBucket、Coding、Gitee 等等，都支持 Markdown 语法，很多开源项目的 README、开发文档、帮助文档、Wiki 等都用 Markdown 写作。</p> </li> <li> <p>技术社区和写作平台</p> <p>StackOverflow、CSDN、掘金、简书、GitBook、有道云笔记</p> </li> <li> <p>论坛</p> <p>V2EX、光谷社区</p> </li> </ul> <p>个人感觉比较遗憾的一点是各平台可能采用不同语言实现的 Markdown 解析引擎，或采用同一解析引擎的不同版本，而且可能有不同程度的定制与扩展，这导致在不同平台上使用 Markdown 写作时体验并不完全一致。不过幸好对于大家公认的一些标准语法，各家都是支持的。</p> <h3 id="编辑工具">编辑工具</h3> <p>理论上任何一款文本编辑器都能用于编辑 Markdown 文档，它们分别提供了不同程度的语法高亮、预览等功能，以下只是列举其中一部分，选择自己称手的即可。</p> <ul> <li> <p>现代编辑器</p> <p>VSCode / Atom</p> </li> <li> <p>传统编辑器</p> <p>Vim / Emacs / Sublime Text / Notepad++</p> </li> <li> <p>IDE 自带编辑器</p> <p>IntelliJ IDEA / Android Studio / WebStorm</p> </li> <li> <p>专用编辑器</p> <p>Ulysses / Mou / Typora / Markpad</p> </li> <li> <p>在线编辑器</p> <p>各种支持 Markdown 的网站都提供了在线编辑器</p> </li> </ul> <h2 id="语法">语法</h2> <h3 id="标题">标题</h3> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># atx-style 一级标题

## 二级标题

###### 六级标题

Setext-style 一级标题
===

二级标题
---
</code></pre></div></div> <p><strong>预览效果：</strong></p> <blockquote> <h1 id="atx-style-一级标题">atx-style 一级标题</h1> <h2 id="二级标题">二级标题</h2> <h6 id="六级标题">六级标题</h6> <h1 id="setext-style-一级标题">Setext-style 一级标题</h1> <h2 id="二级标题-1">二级标题</h2> </blockquote> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h1&gt;</span>atx-style 一级标题<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;h2&gt;</span>二级标题<span class="nt">&lt;/h2&gt;</span>

<span class="nt">&lt;h6&gt;</span>六级标题<span class="nt">&lt;/h6&gt;</span>

<span class="nt">&lt;h1&gt;</span>Setext-style 一级标题<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;h2&gt;</span>二级标题<span class="nt">&lt;/h2&gt;</span>
</code></pre></div></div> <h3 id="段落">段落</h3> <p>中间没有空行的连续不断的几行文字被视为一个段落。</p> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>白日依山尽，

黄河入海流。
（句号后面没空格）

欲穷千里目，

更上一层楼。
（句号后面有俩空格）
</code></pre></div></div> <p><strong>预览效果：</strong></p> <p>白日依山尽，</p> <p>黄河入海流。 （句号后面没空格）</p> <p>欲穷千里目，</p> <p>更上一层楼。<br/> （句号后面有俩空格）</p> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;p&gt;</span>白日依山尽，<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;</span>黄河入海流。 （句号后面没有空格）<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;</span>欲穷千里目，<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;</span>
  更上一层楼。
  <span class="nt">&lt;br</span> <span class="nt">/&gt;</span>
  （句号后面有俩空格）
<span class="nt">&lt;/p&gt;</span>
</code></pre></div></div> <h3 id="行内格式">行内格式</h3> <p>对段落或者部分文本的强调效果。</p> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>后面俩字**加黑**

后面俩字*斜体*
</code></pre></div></div> <p><strong>预览效果：</strong></p> <p>后面俩字<strong>加黑</strong></p> <p>后面俩字<em>斜体</em></p> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;p&gt;</span>
  后面俩字
  <span class="nt">&lt;strong&gt;</span>加黑<span class="nt">&lt;/strong&gt;</span>
<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p&gt;</span>
  后面俩字
  <span class="nt">&lt;em&gt;</span>斜体<span class="nt">&lt;/em&gt;</span>
<span class="nt">&lt;/p&gt;</span>
</code></pre></div></div> <h3 id="引用块">引用块</h3> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; 引用块段落一。
&gt;
&gt; 引用块段落二。
&gt;&gt; 内嵌引用块段落一。
&gt;
&gt; ### 引用块内的标题
</code></pre></div></div> <p><strong>预览效果：</strong></p> <blockquote> <p>引用块段落一。</p> <p>引用块段落二。</p> <blockquote> <p>内嵌引用块段落一。</p> </blockquote> <h3 id="引用块内的标题">引用块内的标题</h3> </blockquote> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;blockquote&gt;</span>
  <span class="nt">&lt;p&gt;</span>引用块段落一。<span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;p&gt;</span>引用块段落二。<span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;blockquote&gt;</span>
    <span class="nt">&lt;p&gt;</span>内嵌引用块段落一。<span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/blockquote&gt;</span>
  <span class="nt">&lt;h3</span> <span class="na">id=</span><span class="s">"引用块内的标题"</span><span class="nt">&gt;</span>引用块内的标题<span class="nt">&lt;/h3&gt;</span>
<span class="nt">&lt;/blockquote&gt;</span>
</code></pre></div></div> <h3 id="超链接">超链接</h3> <p>Markdown 支持行内式链接和引用式链接。</p> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>行内式 [博客](http://waynexucn.github.io/ "我的个人博客") 链接，带 title。

行内式 [GitHub](https://github.com/waynexucn) 链接。

引用式 [博客][1] 链接。

引用式 [GitHub][2] 链接，带 title。

[1]: http://waynexucn.github.io/
[2]: https://github.com/waynexucn "我的 GitHub 主页"
</code></pre></div></div> <p><strong>预览效果：</strong></p> <p>行内式 <a href="http://waynexucn.github.io/" title="我的个人博客">博客</a> 链接，带 title。</p> <p>行内式 <a href="https://github.com/waynexucn">GitHub</a> 链接。</p> <p>引用式 <a href="http://waynexucn.github.io/">博客</a> 链接。</p> <p>引用式 <a href="https://github.com/waynexucn" title="我的 GitHub 主页">GitHub</a> 链接，带 title。</p> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;p&gt;</span>行内式 <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">http://waynexucn.github.io/"</span> <span class="na">title=</span><span class="s">"我的个人博客"</span><span class="nt">&gt;</span>博客<span class="nt">&lt;/a&gt;</span> 链接，带 title。<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;</span>行内式 <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"https://github.com/waynexucn"</span><span class="nt">&gt;</span>GitHub<span class="nt">&lt;/a&gt;</span> 链接。<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;</span>引用式 <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://waynexucn.github.io/"</span><span class="nt">&gt;</span>博客<span class="nt">&lt;/a&gt;</span> 链接。<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;</span>引用式 <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"https://github.com/waynexucn"</span> <span class="na">title=</span><span class="s">"我的 GitHub 主页"</span><span class="nt">&gt;</span>GitHub<span class="nt">&lt;/a&gt;</span> 链接，带 title。<span class="nt">&lt;/p&gt;</span>
</code></pre></div></div> <h3 id="图片">图片</h3> <p>在超链接的写法前加一个 <code class="language-plaintext highlighter-rouge">!</code>，就是引用图片的方法。</p> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>![Alt text](https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/202305251734251.jpg "Cat")
</code></pre></div></div> <p><strong>预览效果：</strong></p> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/202305251734251.jpg" alt="Alt text" title="cat"/></p> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/202305251734251.jpg"</span> <span class="na">alt=</span><span class="s">"Alt text"</span> <span class="na">title=</span><span class="s">"favicon"</span> <span class="nt">/&gt;</span>
</code></pre></div></div> <h3 id="列表">列表</h3> <p>包括有序列表和无序列表。</p> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- 苹果
- 葡萄
- 榴莲

1. 苹果
2. 葡萄
3. 榴莲
</code></pre></div></div> <p><strong>预览效果：</strong></p> <ul> <li>苹果</li> <li>葡萄</li> <li>榴莲</li> </ul> <ol> <li>苹果</li> <li>葡萄</li> <li>榴莲</li> </ol> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;ul&gt;</span>
  <span class="nt">&lt;li&gt;</span>苹果<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>葡萄<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>榴莲<span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/ul&gt;</span>
<span class="nt">&lt;ol&gt;</span>
  <span class="nt">&lt;li&gt;</span>苹果<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>葡萄<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>榴莲<span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/ol&gt;</span>
</code></pre></div></div> <p>其中无序列表的标记可以使用 <code class="language-plaintext highlighter-rouge">+</code>、<code class="language-plaintext highlighter-rouge">-</code> 或 <code class="language-plaintext highlighter-rouge">*</code>，有序列表前的数字可以是乱序的。</p> <h3 id="代码块">代码块</h3> <p>支持行内代码和代码块。</p> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Android 里使用 `TextUtils` 类的 `isEmpty` 方法来判断字符串是否为空。

```java
if (TextUtils.isEmpty(text)) {
    return null;
}
```
</code></pre></div></div> <p><strong>预览效果：</strong></p> <p>Android 里使用 <code class="language-plaintext highlighter-rouge">TextUtils</code> 类的 <code class="language-plaintext highlighter-rouge">isEmpty</code> 方法来判断字符串是否为空。</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="o">(</span><span class="nc">TextUtils</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="n">text</span><span class="o">))</span> <span class="o">{</span>
    <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;p&gt;</span>Android 里使用 <span class="nt">&lt;code&gt;</span>TextUtils<span class="nt">&lt;/code&gt;</span> 类的 <span class="nt">&lt;code&gt;</span>isEmpty<span class="nt">&lt;/code&gt;</span> 方法来判断字符串是否为空。<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"highlight highlight-source-java"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;pre&gt;&lt;span</span> <span class="na">class=</span><span class="s">"pl-k"</span><span class="nt">&gt;</span>if<span class="nt">&lt;/span&gt;</span> (<span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"pl-smi"</span><span class="nt">&gt;</span>TextUtils<span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">"pl-k"</span><span class="nt">&gt;</span>.<span class="nt">&lt;/span&gt;</span>isEmpty(text)) {
    <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"pl-k"</span><span class="nt">&gt;</span>return<span class="nt">&lt;/span&gt;</span> <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"pl-c1"</span><span class="nt">&gt;</span>null<span class="nt">&lt;/span&gt;</span>;
}<span class="nt">&lt;/pre&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div> <p>上例中的语言标记 <code class="language-plaintext highlighter-rouge">java</code> 可选填，可用于在编辑器和渲染后的效果里添加语法高亮。</p> <p>块式代码也可以对整个代码段缩进四个空格，或一个 Tab 来实现。</p> <h3 id="水平分割线">水平分割线</h3> <p>使用一个单独行里的三个或以上 <code class="language-plaintext highlighter-rouge">*</code>、<code class="language-plaintext highlighter-rouge">-</code> 来生产一条水平分割线，它们之间可以有空格。</p> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>***

-----

- - -
</code></pre></div></div> <p><strong>预览效果：</strong></p> <hr/> <hr/> <hr/> <p><strong>对应 HTML：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;
</code></pre></div></div> <h3 id="嵌入-html">嵌入 HTML</h3> <p>Markdown 标记语言的目的不是替代 HTML，也不是发明一种更便捷的插入 HTML 标签的方式。它对应的只是 HTML 标签的一个很小的子集。</p> <p>对于那些没有办法用 Markdown 语法来对应的 HTML 标签，直接使用 HTML 来写就好了。</p> <h2 id="扩展语法">扩展语法</h2> <p>本节的内容是介绍一些受到广泛支持的 Markdown 扩展语法。</p> <h3 id="表格">表格</h3> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| 编号  | 姓名（左） | 年龄（右） | 性别（中） |
| ----- | :--------  | ---------: | :------:   |
| 0     | 张三       | 28         | 男         |
| 1     | 李四       | 29         | 男         |
</code></pre></div></div> <p><strong>预览效果：</strong></p> <table> <thead> <tr> <th>编号</th> <th style="text-align: left">姓名（左）</th> <th style="text-align: right">年龄（右）</th> <th style="text-align: center">性别（中）</th> </tr> </thead> <tbody> <tr> <td>0</td> <td style="text-align: left">张三</td> <td style="text-align: right">28</td> <td style="text-align: center">男</td> </tr> <tr> <td>1</td> <td style="text-align: left">李四</td> <td style="text-align: right">29</td> <td style="text-align: center">男</td> </tr> </tbody> </table> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;table&gt;</span>
  <span class="nt">&lt;thead&gt;</span>
    <span class="nt">&lt;tr&gt;</span>
      <span class="nt">&lt;th&gt;</span>编号<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">align=</span><span class="s">"left"</span><span class="nt">&gt;</span>姓名（左）<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">align=</span><span class="s">"right"</span><span class="nt">&gt;</span>年龄（右）<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">align=</span><span class="s">"center"</span><span class="nt">&gt;</span>性别（中）<span class="nt">&lt;/th&gt;</span>
    <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;/thead&gt;</span>
  <span class="nt">&lt;tbody&gt;</span>
    <span class="nt">&lt;tr&gt;</span>
      <span class="nt">&lt;td&gt;</span>0<span class="nt">&lt;/td&gt;</span>
      <span class="nt">&lt;td</span> <span class="na">align=</span><span class="s">"left"</span><span class="nt">&gt;</span>张三<span class="nt">&lt;/td&gt;</span>
      <span class="nt">&lt;td</span> <span class="na">align=</span><span class="s">"right"</span><span class="nt">&gt;</span>28<span class="nt">&lt;/td&gt;</span>
      <span class="nt">&lt;td</span> <span class="na">align=</span><span class="s">"center"</span><span class="nt">&gt;</span>男<span class="nt">&lt;/td&gt;</span>
    <span class="nt">&lt;/tr&gt;</span>
    <span class="nt">&lt;tr&gt;</span>
      <span class="nt">&lt;td&gt;</span>1<span class="nt">&lt;/td&gt;</span>
      <span class="nt">&lt;td</span> <span class="na">align=</span><span class="s">"left"</span><span class="nt">&gt;</span>李四<span class="nt">&lt;/td&gt;</span>
      <span class="nt">&lt;td</span> <span class="na">align=</span><span class="s">"right"</span><span class="nt">&gt;</span>29<span class="nt">&lt;/td&gt;</span>
      <span class="nt">&lt;td</span> <span class="na">align=</span><span class="s">"center"</span><span class="nt">&gt;</span>男<span class="nt">&lt;/td&gt;</span>
    <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;/tbody&gt;</span>
<span class="nt">&lt;/table&gt;</span>
</code></pre></div></div> <h3 id="任务列表">任务列表</h3> <p>在 GitHub / GitLab 里有较好的支持。</p> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- [x] 洗碗
- [ ] 清洗油烟机
- [ ] 拖地
</code></pre></div></div> <p><strong>预览效果：</strong></p> <ul class="task-list"> <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked"/>洗碗</li> <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled"/>清洗油烟机</li> <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled"/>拖地</li> </ul> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"contains-task-list"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">"task-list-item"</span><span class="nt">&gt;&lt;input</span> <span class="na">type=</span><span class="s">"checkbox"</span> <span class="na">id=</span><span class="s">""</span> <span class="na">disabled=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"task-list-item-checkbox"</span> <span class="na">checked=</span><span class="s">""</span> <span class="nt">/&gt;</span> 洗碗<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">"task-list-item"</span><span class="nt">&gt;&lt;input</span> <span class="na">type=</span><span class="s">"checkbox"</span> <span class="na">id=</span><span class="s">""</span> <span class="na">disabled=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"task-list-item-checkbox"</span> <span class="nt">/&gt;</span> 清洗油烟机<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">"task-list-item"</span><span class="nt">&gt;&lt;input</span> <span class="na">type=</span><span class="s">"checkbox"</span> <span class="na">id=</span><span class="s">""</span> <span class="na">disabled=</span><span class="s">""</span> <span class="na">class=</span><span class="s">"task-list-item-checkbox"</span> <span class="nt">/&gt;</span> 拖地<span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/ul&gt;</span>
</code></pre></div></div> <p>如果是在 GitHub / GitLab 的 Issue 里，会附赠任务完成比例提示效果：</p> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/task-list-1.png" alt="task list 1"/></p> <h3 id="删除线">删除线</h3> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>后面三个字打上~~删除线~~。
</code></pre></div></div> <p><strong>预览效果：</strong></p> <p>后面三个字打上<del>删除线</del>。</p> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;p&gt;</span>后面三个字打上<span class="nt">&lt;del&gt;</span>删除线<span class="nt">&lt;/del&gt;</span>。<span class="nt">&lt;/p&gt;</span>
</code></pre></div></div> <h3 id="自动链接">自动链接</h3> <p>自动链接扩展，即：当识别到 URL，或用 <code class="language-plaintext highlighter-rouge">&lt;</code>、<code class="language-plaintext highlighter-rouge">&gt;</code> 包括的 URL 时，会自动为其生成 <code class="language-plaintext highlighter-rouge">a</code> 标签。</p> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://github.com

&lt;example@gmail.com&gt;
</code></pre></div></div> <p><strong>预览效果：</strong></p> <p>https://github.com</p> <p><a href="mailto:example@gmail.com">example@gmail.com</a></p> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;p&gt;&lt;a</span> <span class="na">href=</span><span class="s">"https://github.com"</span><span class="nt">&gt;</span>https://github.com<span class="nt">&lt;/a&gt;&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;&lt;a</span> <span class="na">href=</span><span class="s">"mailto:example@gmail.com"</span><span class="nt">&gt;</span>example@gmail.com<span class="nt">&lt;/a&gt;&lt;/p&gt;</span>
</code></pre></div></div> <h3 id="emoji">emoji</h3> <p>以 GitHub Pages 为例。</p> <p><strong>Markdown：</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>:camel: :blush: :smile:
</code></pre></div></div> <p><strong>预览效果：</strong></p> <p>:camel: :blush: :smile:</p> <p><strong>对应 HTML：</strong></p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;p&gt;</span>
  <span class="nt">&lt;img</span> <span class="na">class=</span><span class="s">"emoji"</span> <span class="na">title=</span><span class="s">":camel:"</span> <span class="na">alt=</span><span class="s">":camel:"</span> <span class="na">src=</span><span class="s">"https://assets-cdn.github.com/images/icons/emoji/unicode/1f42b.png"</span> <span class="na">height=</span><span class="s">"20"</span> <span class="na">width=</span><span class="s">"20"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;img</span> <span class="na">class=</span><span class="s">"emoji"</span> <span class="na">title=</span><span class="s">":blush:"</span> <span class="na">alt=</span><span class="s">":blush:"</span> <span class="na">src=</span><span class="s">"https://assets-cdn.github.com/images/icons/emoji/unicode/1f60a.png"</span> <span class="na">height=</span><span class="s">"20"</span> <span class="na">width=</span><span class="s">"20"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;img</span> <span class="na">class=</span><span class="s">"emoji"</span> <span class="na">title=</span><span class="s">":smile:"</span> <span class="na">alt=</span><span class="s">":smile:"</span> <span class="na">src=</span><span class="s">"https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png"</span> <span class="na">height=</span><span class="s">"20"</span> <span class="na">width=</span><span class="s">"20"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/p&gt;</span>
</code></pre></div></div> <h2 id="奇技淫巧">奇技淫巧</h2> <p>脑洞清奇的工程师们还发掘了很多使用 Markdown 的方法，大部分都是引入第三方 JavaScript 插件来实现。对这部分我只做简述，对其中的部分功能比如作图等，还是推荐用专门的可视化工具去做。</p> <h3 id="画流程图和时序图">画流程图和时序图</h3> <p>有部分网站和编辑器实现了对 Markdown 里流程图和时序图的支持，比如我们使用的项目管理工具 TAPD 的在线编辑器，还有 VSCode + 插件 Markdown Preview Enhanced 等。</p> <p>以我们使用的项目管理工具 TAPD 的在线编辑器为例：</p> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/tapd-markdown-flowchart.png" alt="流程图"/></p> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/tapd-markdown-seq.png" alt="时序图"/></p> <h3 id="插入数学公式">插入数学公式</h3> <p>仍然以 TAPD 为例：</p> <p><img src="https://xwj770427414.oss-cn-beijing.aliyuncs.com/img/tapd-markdown-math.png" alt="数学公式"/></p> <p>应该是利用 JavaScript 支持了 LaTeX 公式语法。</p> <h3 id="用-markdown-做-ppt">用 Markdown 做 PPT</h3> <p>有专门的工具 <a href="https://github.com/yhatt/marp">Marp</a>，另外使用 VSCode + 插件 Markdown Preview Enhanced 也可以实现。</p> <h3 id="用-markdown-写微信公众号">用 Markdown 写微信公众号</h3> <p>可以将公众号素材用 Markdown 编辑好后，贴到在线排版工具以后，复制到公众号编辑器里即可。有多种页面主题和代码主题可选择。</p> <h3 id="更多">更多</h3> <p>想象力丰富的工程师们还扩展了很多基于 Markdown 的玩法，包括但不限于：</p> <ul> <li>自动生成 / 更新 Table of Contents</li> <li>流程图 / 时序图</li> <li>制作幻灯片</li> <li>集成 PlantUML / GraphViz 的能力</li> <li>导出 HTML / PDF / 电子书</li> <li>…</li> </ul> <p>以上功能基本都可以用 VSCode + 插件 Markdown Preview Enhanced 实现。</p> <h2 id="参考">参考</h2> <ul> <li><a href="https://daringfireball.net/projects/markdown/syntax">Markdown: Syntax - DARING FIREBALL</a></li> <li><a href="https://zh.wikipedia.org/wiki/Markdown">Markdown - 维基百科</a></li> <li><a href="https://github.github.com/gfm/">GitHub Flavored Markdown Spec</a></li> <li><a href="https://mazhuang.org/2017/09/01/markdown-odd-skills/">关于 Markdown 的一些奇技淫巧</a></li> </ul>]]></content><author><name></name></author><category term="Writing"/><category term="Markdown"/><category term="Formatting"/><category term="Tools"/><summary type="html"><![CDATA[记录了 Markdown 的优点、应用场景和编辑工具，介绍了标准语法与扩展语法，以及一些应用 Markdown 的奇技淫巧。]]></summary></entry></feed>